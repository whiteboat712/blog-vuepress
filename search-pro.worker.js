const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/en/\":{\"documentCount\":34,\"nextId\":34,\"documentIds\":{\"0\":\"7\",\"1\":\"8\",\"2\":\"9\",\"3\":\"9@0\",\"4\":\"10\",\"5\":\"10@0\",\"6\":\"10@1\",\"7\":\"11\",\"8\":\"11@0\",\"9\":\"11@1\",\"10\":\"12\",\"11\":\"12#markdown-introduction\",\"12\":\"12#markdown-config\",\"13\":\"12#markdown-extension\",\"14\":\"12#vuepress-enhancement\",\"15\":\"12#theme-enhancement\",\"16\":\"12#code-tabs\",\"17\":\"12#tabs\",\"18\":\"12#footnote\",\"19\":\"12#include-files\",\"20\":\"12#tex\",\"21\":\"12#tasklist\",\"22\":\"12#image-enhancement\",\"23\":\"12#superscript-and-subscript\",\"24\":\"12#component\",\"25\":\"12@0\",\"26\":\"12@1\",\"27\":\"13\",\"28\":\"13#page-title\",\"29\":\"13#page-information\",\"30\":\"13#page-content\",\"31\":\"13#components\",\"32\":\"13@0\",\"33\":\"13@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,30],\"1\":[2,7],\"2\":[2],\"3\":[null,null,1],\"4\":[4,40],\"5\":[null,null,1],\"6\":[null,null,1],\"7\":[1,44],\"8\":[null,null,1],\"9\":[null,null,1],\"10\":[2,32],\"11\":[2,19],\"12\":[2,25],\"13\":[2,18],\"14\":[2,16],\"15\":[2,16],\"16\":[2,2],\"17\":[1,2],\"18\":[1,9],\"19\":[2,2],\"20\":[1,26],\"21\":[1,6],\"22\":[2,8],\"23\":[3,4],\"24\":[1],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[2,10],\"28\":[2,20],\"29\":[2,27],\"30\":[2,30],\"31\":[1,29],\"32\":[null,null,1],\"33\":[null,null,3]},\"averageFieldLength\":[1.9096875,19.076171875000004,0.6853408029878618],\"storedFields\":{\"0\":{\"h\":\"Blog Home\",\"t\":[\"This is a blog home page demo.\",\"To use this layout, you should set both layout: BlogHome and home: true in the page front matter.\",\"For related configuration docs, please see blog homepage.\"]},\"1\":{\"h\":\"Intro Page\",\"t\":[\"Place your introduction and profile here.\"]},\"2\":{\"h\":\"Features demo\"},\"3\":{\"c\":[\"Guide\"]},\"4\":{\"h\":\"Disabling layout and features\",\"t\":[\"You can disable some function and layout on the page by setting the Frontmatter of the page.\",\"This page is an demo that disables the following features:\",\"Navbar\",\"Sidebar\",\"Breadcrumb\",\"Page information\",\"Contributors\",\"Edit link\",\"Update time\",\"Prev/Next link\",\"Comment\",\"Footer\",\"Back to top button\"]},\"5\":{\"c\":[\"Guide\"]},\"6\":{\"c\":[\"disable\"]},\"7\":{\"h\":\"Layout\",\"t\":[\"The layout contains:\",\"Navbar\",\"Sidebar\",\"Footer\",\"Also each page can contain:\",\"BreadCrumb\",\"Title and information\",\"TOC (Table of Contents)\",\"Meta information including update time and contributors\",\"Comments\",\"The theme also has the following elements:\",\"Darkmode button\",\"Back to top button\",\"Print button\",\"You can customize them in theme options and page frontmatter.\"]},\"8\":{\"c\":[\"Guide\"]},\"9\":{\"c\":[\"Layout\"]},\"10\":{\"h\":\"Markdown Enhance\",\"t\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\",\"You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.\"]},\"11\":{\"h\":\"Markdown Introduction\",\"t\":[\"If you are a new learner and don't know how to write Markdown, please read Markdown Intro and Markdown Demo.\"]},\"12\":{\"h\":\"Markdown Config\",\"t\":[\"VuePress introduce configuration for each markdown page using Frontmatter.\",\"Frontmatter\",\"Frontmatter is an important concept in VuePress. If you don't know it, you need to read Frontmatter Introduction.\"]},\"13\":{\"h\":\"Markdown Extension\",\"t\":[\"The Markdown content in VuePress will be parsed by markdown-it, which supports syntax extensions via markdown-it plugins.\"]},\"14\":{\"h\":\"VuePress Enhancement\",\"t\":[\"To enrich document writing, VuePress has extended Markdown syntax.\",\"For these extensions, please read Markdown extensions in VuePress.\"]},\"15\":{\"h\":\"Theme Enhancement\",\"t\":[\"By using VuePress plugins, the theme extends more Markdown syntax and provides richer writing functions.\"]},\"16\":{\"h\":\"Code Tabs\",\"t\":[\"View Detail\"]},\"17\":{\"h\":\"Tabs\",\"t\":[\"View Detail\"]},\"18\":{\"h\":\"Footnote\",\"t\":[\"This text has footnote[^first].\",\"[^first]: This is footnote content\",\"View Detail\"]},\"19\":{\"h\":\"Include files\",\"t\":[\"View Detail\"]},\"20\":{\"h\":\"TeX\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"View Detail\"]},\"21\":{\"h\":\"Tasklist\",\"t\":[\" Plan A\",\" Plan B\",\"View Detail\"]},\"22\":{\"h\":\"Image Enhancement\",\"t\":[\"Support setting color scheme and size.\",\"View Detail\"]},\"23\":{\"h\":\"Superscript and Subscript\",\"t\":[\"19th H2O\",\"View Detail\"]},\"24\":{\"h\":\"Component\"},\"25\":{\"c\":[\"Guide\"]},\"26\":{\"c\":[\"Markdown\"]},\"27\":{\"h\":\"Page Config\",\"t\":[\"Content before more comment is regarded as page excerpt.\"]},\"28\":{\"h\":\"Page Title\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"You can also set title in Markdown's Frontmatter:\",\"--- title: Page Title ---\"]},\"29\":{\"h\":\"Page Information\",\"t\":[\"You can set page information in Markdown's Frontmatter.\",\"The author is Ms.Hope.\",\"The writing date is January 1, 2020\",\"Category is \\\"Guide\\\"\",\"Tags are \\\"Page Config\\\" and \\\"Guide\\\"\"]},\"30\":{\"h\":\"Page Content\",\"t\":[\"You are free to write your Markdown here.\",\"Assets\",\"You can place images besides your Markdown files nd use relative links.\",\"For images in .vuepress/public directory, please use absolute links (i.e.: starting with /).\"]},\"31\":{\"h\":\"Components\",\"t\":[\"Each markdown page is converted into a Vue component, which means you can use Vue syntax in Markdown:\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"You can also create and import your own components.\"]},\"32\":{\"c\":[\"Guide\"]},\"33\":{\"c\":[\"Page config\",\"Guide\"]}},\"dirtCount\":0,\"index\":[[\"2020\",{\"1\":{\"29\":1}}],[\"january\",{\"1\":{\"29\":1}}],[\"19th\",{\"1\":{\"23\":1}}],[\"1\",{\"1\":{\"20\":1,\"29\":1,\"31\":2}}],[\"+\",{\"1\":{\"20\":1,\"31\":1}}],[\"^\",{\"1\":{\"20\":1}}],[\"^i\",{\"1\":{\"20\":1}}],[\"^r\",{\"1\":{\"20\":2}}],[\"^first\",{\"1\":{\"18\":2}}],[\"=\",{\"1\":{\"20\":1}}],[\"y\",{\"1\":{\"20\":2}}],[\"y^\",{\"1\":{\"20\":2}}],[\"your\",{\"1\":{\"1\":1,\"30\":2,\"31\":1}}],[\"you\",{\"1\":{\"0\":1,\"4\":1,\"7\":1,\"10\":2,\"11\":1,\"12\":2,\"28\":1,\"29\":1,\"30\":2,\"31\":2}}],[\"$$\",{\"1\":{\"20\":2}}],[\"r\",{\"1\":{\"20\":3}}],[\"right\",{\"1\":{\"20\":3}}],[\"richer\",{\"1\":{\"15\":1}}],[\"relative\",{\"1\":{\"30\":1}}],[\"related\",{\"1\":{\"0\":1}}],[\"regarded\",{\"1\":{\"27\":1,\"28\":1}}],[\"read\",{\"1\":{\"11\":1,\"12\":1,\"14\":1}}],[\"vue\",{\"1\":{\"31\":2}}],[\"vuepress\",{\"0\":{\"14\":1},\"1\":{\"10\":2,\"12\":2,\"13\":1,\"14\":2,\"15\":1,\"30\":1}}],[\"view\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"via\",{\"1\":{\"13\":1}}],[\"with\",{\"1\":{\"30\":1}}],[\"will\",{\"1\":{\"13\":1,\"28\":1}}],[\"writing\",{\"1\":{\"14\":1,\"15\":1,\"29\":1}}],[\"write\",{\"1\":{\"10\":1,\"11\":1,\"30\":1}}],[\"which\",{\"1\":{\"13\":1,\"31\":1}}],[\"know\",{\"1\":{\"11\":1,\"12\":1}}],[\"generate\",{\"1\":{\"10\":2}}],[\"guide\",{\"1\":{\"29\":2},\"2\":{\"3\":1,\"5\":1,\"8\":1,\"25\":1,\"32\":1,\"33\":1}}],[\"means\",{\"1\":{\"31\":1}}],[\"meta\",{\"1\":{\"7\":1}}],[\"ms\",{\"1\":{\"29\":1}}],[\"more\",{\"1\":{\"15\":1,\"27\":1}}],[\"markdown\",{\"0\":{\"10\":1,\"11\":1,\"12\":1,\"13\":1},\"1\":{\"10\":2,\"11\":3,\"12\":1,\"13\":3,\"14\":2,\"15\":1,\"28\":2,\"29\":1,\"30\":2,\"31\":2},\"2\":{\"26\":1}}],[\"matter\",{\"1\":{\"0\":1}}],[\"e\",{\"1\":{\"30\":1}}],[\"excerpt\",{\"1\":{\"27\":1}}],[\"extends\",{\"1\":{\"15\":1}}],[\"extended\",{\"1\":{\"14\":1}}],[\"extensions\",{\"1\":{\"13\":1,\"14\":2}}],[\"extension\",{\"0\":{\"13\":1}}],[\"enrich\",{\"1\":{\"14\":1}}],[\"enhancement\",{\"0\":{\"14\":1,\"15\":1,\"22\":1}}],[\"enhance\",{\"0\":{\"10\":1}}],[\"easily\",{\"1\":{\"10\":1}}],[\"each\",{\"1\":{\"7\":1,\"12\":1,\"31\":1}}],[\"elements\",{\"1\":{\"7\":1}}],[\"edit\",{\"1\":{\"4\":1}}],[\"nd\",{\"1\":{\"30\":1}}],[\"need\",{\"1\":{\"12\":1}}],[\"new\",{\"1\":{\"11\":1}}],[\"next\",{\"1\":{\"4\":1}}],[\"navbar\",{\"1\":{\"4\":1,\"7\":1}}],[\"using\",{\"1\":{\"12\":1,\"15\":1}}],[\"use\",{\"1\":{\"0\":1,\"10\":1,\"30\":2,\"31\":1}}],[\"update\",{\"1\":{\"4\":1,\"7\":1}}],[\"log\",{\"1\":{\"20\":2}}],[\"left\",{\"1\":{\"20\":3}}],[\"learner\",{\"1\":{\"11\":1}}],[\"links\",{\"1\":{\"30\":2}}],[\"link\",{\"1\":{\"4\":2}}],[\"layout\",{\"0\":{\"4\":1,\"7\":1},\"1\":{\"0\":2,\"4\":1,\"7\":1},\"2\":{\"9\":1}}],[\"own\",{\"1\":{\"31\":1}}],[\"omega^i\",{\"1\":{\"20\":1}}],[\"omega^r\",{\"1\":{\"20\":1}}],[\"omega\",{\"1\":{\"20\":4}}],[\"or\",{\"1\":{\"10\":1}}],[\"options\",{\"1\":{\"7\":1}}],[\"of\",{\"1\":{\"4\":1,\"7\":1}}],[\"on\",{\"1\":{\"4\":1}}],[\"category\",{\"1\":{\"29\":1}}],[\"can\",{\"1\":{\"4\":1,\"7\":2,\"10\":2,\"28\":1,\"29\":1,\"30\":1,\"31\":2}}],[\"cdots\",{\"1\":{\"20\":1}}],[\"create\",{\"1\":{\"10\":1,\"31\":1}}],[\"customize\",{\"1\":{\"7\":1}}],[\"components\",{\"0\":{\"31\":1},\"1\":{\"31\":1}}],[\"component\",{\"0\":{\"24\":1},\"1\":{\"31\":1}}],[\"comments\",{\"1\":{\"7\":1}}],[\"comment\",{\"1\":{\"4\":1,\"27\":1}}],[\"color\",{\"1\":{\"22\":1}}],[\"code\",{\"0\":{\"16\":1}}],[\"concept\",{\"1\":{\"12\":1}}],[\"config\",{\"0\":{\"12\":1,\"27\":1},\"1\":{\"29\":1},\"2\":{\"33\":1}}],[\"configuration\",{\"1\":{\"0\":1,\"12\":1}}],[\"converted\",{\"1\":{\"31\":1}}],[\"convert\",{\"1\":{\"10\":1}}],[\"content\",{\"0\":{\"30\":1},\"1\":{\"13\":1,\"18\":1,\"27\":1}}],[\"contents\",{\"1\":{\"7\":1}}],[\"contain\",{\"1\":{\"7\":1}}],[\"contains\",{\"1\":{\"7\":1}}],[\"contributors\",{\"1\":{\"4\":1,\"7\":1}}],[\"h1\",{\"1\":{\"28\":1}}],[\"h2o\",{\"1\":{\"23\":1}}],[\"hope\",{\"1\":{\"29\":1}}],[\"how\",{\"1\":{\"11\":1}}],[\"homepage\",{\"1\":{\"0\":1}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"0\":2}}],[\"has\",{\"1\":{\"7\":1,\"14\":1,\"18\":1}}],[\"here\",{\"1\":{\"1\":1,\"30\":1}}],[\"public\",{\"1\":{\"30\":1}}],[\"partial\",{\"1\":{\"20\":1}}],[\"partial^r\",{\"1\":{\"20\":1}}],[\"parsed\",{\"1\":{\"13\":1}}],[\"pages\",{\"1\":{\"10\":2}}],[\"page\",{\"0\":{\"1\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1},\"1\":{\"0\":2,\"4\":4,\"7\":2,\"12\":1,\"27\":1,\"28\":2,\"29\":2,\"31\":1},\"2\":{\"33\":1}}],[\"provides\",{\"1\":{\"15\":1}}],[\"profile\",{\"1\":{\"1\":1}}],[\"print\",{\"1\":{\"7\":1}}],[\"prev\",{\"1\":{\"4\":1}}],[\"plan\",{\"1\":{\"21\":2}}],[\"place\",{\"1\":{\"1\":1,\"30\":1}}],[\"plugins\",{\"1\":{\"13\":1,\"15\":1}}],[\"please\",{\"1\":{\"0\":1,\"11\":1,\"14\":1,\"30\":1}}],[\"date\",{\"1\":{\"29\":1}}],[\"darkmode\",{\"1\":{\"7\":1}}],[\"detail\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"demo\",{\"0\":{\"2\":1},\"1\":{\"0\":1,\"4\":1,\"11\":1}}],[\"don\",{\"1\":{\"11\":1,\"12\":1}}],[\"document\",{\"1\":{\"14\":1}}],[\"documentation\",{\"1\":{\"10\":1}}],[\"docs\",{\"1\":{\"0\":1}}],[\"directory\",{\"1\":{\"30\":1}}],[\"different\",{\"1\":{\"10\":1}}],[\"disables\",{\"1\":{\"4\":1}}],[\"disable\",{\"1\":{\"4\":1},\"2\":{\"6\":1}}],[\"disabling\",{\"0\":{\"4\":1}}],[\"first\",{\"1\":{\"28\":1}}],[\"file\",{\"1\":{\"10\":1}}],[\"files\",{\"0\":{\"19\":1},\"1\":{\"10\":2,\"30\":1}}],[\"free\",{\"1\":{\"30\":1}}],[\"frac\",{\"1\":{\"20\":4}}],[\"from\",{\"1\":{\"10\":1}}],[\"frontmatter\",{\"1\":{\"4\":1,\"7\":1,\"12\":4,\"28\":1,\"29\":1}}],[\"front\",{\"1\":{\"0\":1}}],[\"footnote\",{\"0\":{\"18\":1},\"1\":{\"18\":2}}],[\"footer\",{\"1\":{\"4\":1,\"7\":1}}],[\"following\",{\"1\":{\"4\":1,\"7\":1}}],[\"for\",{\"1\":{\"0\":1,\"12\":1,\"14\":1,\"30\":1}}],[\"functions\",{\"1\":{\"15\":1}}],[\"function\",{\"1\":{\"4\":1}}],[\"features\",{\"0\":{\"2\":1,\"4\":1},\"1\":{\"4\":1}}],[\"import\",{\"1\":{\"31\":1}}],[\"important\",{\"1\":{\"12\":1}}],[\"images\",{\"1\":{\"30\":2}}],[\"image\",{\"0\":{\"22\":1}}],[\"i\",{\"1\":{\"20\":1,\"30\":1,\"31\":1}}],[\"i+1\",{\"1\":{\"20\":1}}],[\"i=1\",{\"1\":{\"20\":1}}],[\"if\",{\"1\":{\"11\":1,\"12\":1}}],[\"it\",{\"1\":{\"10\":1,\"12\":1,\"13\":2}}],[\"into\",{\"1\":{\"31\":1}}],[\"introduce\",{\"1\":{\"12\":1}}],[\"introduction\",{\"0\":{\"11\":1},\"1\":{\"1\":1,\"12\":1}}],[\"intro\",{\"0\":{\"1\":1},\"1\":{\"11\":1}}],[\"include\",{\"0\":{\"19\":1}}],[\"including\",{\"1\":{\"7\":1}}],[\"information\",{\"0\":{\"29\":1},\"1\":{\"4\":1,\"7\":2,\"29\":1}}],[\"in\",{\"1\":{\"0\":1,\"7\":1,\"12\":1,\"13\":1,\"14\":1,\"28\":2,\"29\":1,\"30\":1,\"31\":1}}],[\"is\",{\"1\":{\"0\":1,\"4\":1,\"12\":1,\"18\":1,\"27\":1,\"29\":3,\"31\":1}}],[\"b\",{\"1\":{\"21\":1}}],[\"besides\",{\"1\":{\"30\":1}}],[\"before\",{\"1\":{\"27\":1}}],[\"be\",{\"1\":{\"13\":1,\"28\":1}}],[\"basically\",{\"1\":{\"10\":1}}],[\"back\",{\"1\":{\"4\":1,\"7\":1}}],[\"button\",{\"1\":{\"4\":1,\"7\":3}}],[\"breadcrumb\",{\"1\":{\"4\":1,\"7\":1}}],[\"by\",{\"1\":{\"4\":1,\"13\":1,\"15\":1}}],[\"both\",{\"1\":{\"0\":1}}],[\"bloghome\",{\"1\":{\"0\":1}}],[\"blog\",{\"0\":{\"0\":1},\"1\":{\"0\":2,\"10\":1}}],[\"starting\",{\"1\":{\"30\":1}}],[\"structure\",{\"1\":{\"10\":1}}],[\"s\",{\"1\":{\"28\":1,\"29\":1}}],[\"scheme\",{\"1\":{\"22\":1}}],[\"subscript\",{\"0\":{\"23\":1}}],[\"superscript\",{\"0\":{\"23\":1}}],[\"support\",{\"1\":{\"22\":1}}],[\"supports\",{\"1\":{\"13\":1}}],[\"sum\",{\"1\":{\"20\":1}}],[\"syntax\",{\"1\":{\"13\":1,\"14\":1,\"15\":1,\"31\":1}}],[\"size\",{\"1\":{\"22\":1}}],[\"sites\",{\"1\":{\"10\":1}}],[\"sidebar\",{\"1\":{\"4\":1,\"7\":1}}],[\"so\",{\"1\":{\"10\":2}}],[\"some\",{\"1\":{\"4\":1}}],[\"see\",{\"1\":{\"0\":1}}],[\"setting\",{\"1\":{\"4\":1,\"22\":1}}],[\"set\",{\"1\":{\"0\":1,\"28\":1,\"29\":1}}],[\"should\",{\"1\":{\"0\":1,\"10\":1}}],[\"tags\",{\"1\":{\"29\":1}}],[\"tasklist\",{\"0\":{\"21\":1}}],[\"tabs\",{\"0\":{\"16\":1,\"17\":1}}],[\"table\",{\"1\":{\"7\":1}}],[\"tex\",{\"0\":{\"20\":1}}],[\"text\",{\"1\":{\"18\":1}}],[\"t\",{\"1\":{\"11\":1,\"12\":1}}],[\"title\",{\"0\":{\"28\":1},\"1\":{\"7\":1,\"28\":5}}],[\"time\",{\"1\":{\"4\":1,\"7\":1}}],[\"that\",{\"1\":{\"4\":1,\"10\":1}}],[\"these\",{\"1\":{\"14\":1}}],[\"them\",{\"1\":{\"7\":1,\"10\":1}}],[\"theme\",{\"0\":{\"15\":1},\"1\":{\"7\":2,\"15\":1}}],[\"the\",{\"1\":{\"0\":1,\"4\":4,\"7\":3,\"13\":1,\"15\":1,\"28\":1,\"29\":2}}],[\"this\",{\"1\":{\"0\":2,\"4\":1,\"18\":2}}],[\"true\",{\"1\":{\"0\":1}}],[\"toc\",{\"1\":{\"7\":1}}],[\"top\",{\"1\":{\"4\":1,\"7\":1}}],[\"to\",{\"1\":{\"0\":1,\"4\":1,\"7\":1,\"10\":3,\"11\":1,\"12\":1,\"14\":1,\"30\":1}}],[\"absolute\",{\"1\":{\"30\":1}}],[\"author\",{\"1\":{\"29\":1}}],[\"assets\",{\"1\":{\"30\":1}}],[\"as\",{\"1\":{\"27\":1,\"28\":1}}],[\"are\",{\"1\":{\"11\":1,\"29\":1,\"30\":1}}],[\"according\",{\"1\":{\"10\":1}}],[\"also\",{\"1\":{\"7\":2,\"28\":1,\"31\":1}}],[\"an\",{\"1\":{\"4\":1,\"12\":1}}],[\"and\",{\"0\":{\"4\":1,\"23\":1},\"1\":{\"0\":1,\"1\":1,\"4\":1,\"7\":3,\"10\":1,\"11\":2,\"15\":1,\"22\":1,\"29\":1,\"31\":1}}],[\"a\",{\"1\":{\"0\":1,\"11\":1,\"21\":1,\"31\":1}}]],\"version\":2},\"/\":{\"documentCount\":155,\"nextId\":155,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"2@0\",\"4\":\"3\",\"5\":\"3@0\",\"6\":\"3@1\",\"7\":\"4\",\"8\":\"4@0\",\"9\":\"4@1\",\"10\":\"5\",\"11\":\"5#markdown-介绍\",\"12\":\"5#markdown-配置\",\"13\":\"5#markdown-扩展\",\"14\":\"5#vuepress-扩展\",\"15\":\"5#主题扩展\",\"16\":\"5#选项卡\",\"17\":\"5#脚注\",\"18\":\"5#导入文件\",\"19\":\"5#tex-语法\",\"20\":\"5#任务列表\",\"21\":\"5#图片增强\",\"22\":\"5#上下角标\",\"23\":\"5#组件\",\"24\":\"5@0\",\"25\":\"5@1\",\"26\":\"6\",\"27\":\"6#页面标题\",\"28\":\"6#页面信息\",\"29\":\"6#页面内容\",\"30\":\"6#组件\",\"31\":\"6@0\",\"32\":\"6@1\",\"33\":\"14\",\"34\":\"15\",\"35\":\"15#技术栈\",\"36\":\"15#实现过程\",\"37\":\"15#主逻辑\",\"38\":\"15#用户行为\",\"39\":\"15#状态机\",\"40\":\"15#用户输入处理\",\"41\":\"15#创建棋盘\",\"42\":\"15#棋盘操作\",\"43\":\"15#随机生成一个-2-或者-4\",\"44\":\"15#重置棋盘\",\"45\":\"15#一行向左合并\",\"46\":\"15#矩阵转置与矩阵逆转\",\"47\":\"15#棋盘走一步\",\"48\":\"15#判断输赢\",\"49\":\"15#判断能否移动\",\"50\":\"15#绘制游戏界面\",\"51\":\"15#完成主逻辑\",\"52\":\"15#运行\",\"53\":\"15#面向对象重构\",\"54\":\"15#action类\",\"55\":\"15#grid类\",\"56\":\"15#reset\",\"57\":\"15#add-random-item\",\"58\":\"15#transpose\",\"59\":\"15#invert\",\"60\":\"15#move-row-left\",\"61\":\"15#tighten\",\"62\":\"15#merge\",\"63\":\"15#move-left\",\"64\":\"15#move-right\",\"65\":\"15#move-up\",\"66\":\"15#move-down\",\"67\":\"15#row-can-move-left\",\"68\":\"15#can-move-left\",\"69\":\"15#can-move-right\",\"70\":\"15#can-move-up\",\"71\":\"15#can-move-down\",\"72\":\"15#screen类\",\"73\":\"15#cast\",\"74\":\"15#draw-row\",\"75\":\"15#draw\",\"76\":\"15#gamemanager类\",\"77\":\"15#reset-1\",\"78\":\"15#screen\",\"79\":\"15#move\",\"80\":\"15#is-win\",\"81\":\"15#is-over\",\"82\":\"15#can-move\",\"83\":\"15#state-init\",\"84\":\"15#state-game\",\"85\":\"15#restart-or-exit\",\"86\":\"15#state-win\",\"87\":\"15#state-over\",\"88\":\"15#call\",\"89\":\"16\",\"90\":\"17\",\"91\":\"17#栈\",\"92\":\"17#java实现\",\"93\":\"17#代码\",\"94\":\"18\",\"95\":\"18#单调队列\",\"96\":\"18#定义\",\"97\":\"18#例题分析\",\"98\":\"18#输入格式\",\"99\":\"18#输出格式\",\"100\":\"18#输入样例\",\"101\":\"18#输出样例\",\"102\":\"18#具体实现\",\"103\":\"19\",\"104\":\"19#说在前面的话\",\"105\":\"19#排序算法分类\",\"106\":\"19#算法性质\",\"107\":\"19#稳定性\",\"108\":\"19#时间复杂度\",\"109\":\"19#排序算法分析\",\"110\":\"19#简单排序算法\",\"111\":\"19#选择排序\",\"112\":\"19#冒泡排序\",\"113\":\"19#插入排序\",\"114\":\"19#复杂排序算法\",\"115\":\"19#快速排序\",\"116\":\"19#归并排序\",\"117\":\"19#特殊排序算法\",\"118\":\"19#基数排序\",\"119\":\"19#堆排序\",\"120\":\"19#桶排序\",\"121\":\"20\",\"122\":\"20#前言\",\"123\":\"20#反思\",\"124\":\"20@0\",\"125\":\"21\",\"126\":\"21@0\",\"127\":\"22\",\"128\":\"23\",\"129\":\"24\",\"130\":\"25\",\"131\":\"26\",\"132\":\"27\",\"133\":\"28\",\"134\":\"29\",\"135\":\"29@0\",\"136\":\"30\",\"137\":\"30@0\",\"138\":\"31\",\"139\":\"32\",\"140\":\"33\",\"141\":\"34\",\"142\":\"35\",\"143\":\"36\",\"144\":\"37\",\"145\":\"38\",\"146\":\"39\",\"147\":\"40\",\"148\":\"41\",\"149\":\"42\",\"150\":\"43\",\"151\":\"44\",\"152\":\"45\",\"153\":\"46\",\"154\":\"47\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,11],\"1\":[1,40],\"2\":[1],\"3\":[null,null,1],\"4\":[1,18],\"5\":[null,null,1],\"6\":[null,null,1],\"7\":[1,20],\"8\":[null,null,1],\"9\":[null,null,1],\"10\":[2,10],\"11\":[2,8],\"12\":[2,12],\"13\":[2,11],\"14\":[2,10],\"15\":[1,8],\"16\":[1,1],\"17\":[1,2],\"18\":[1,1],\"19\":[2,25],\"20\":[1,5],\"21\":[1,2],\"22\":[1,3],\"23\":[1],\"24\":[null,null,1],\"25\":[null,null,1],\"26\":[1,3],\"27\":[1,19],\"28\":[1,20],\"29\":[1,12],\"30\":[1,13],\"31\":[null,null,1],\"32\":[null,null,2],\"33\":[1,109],\"34\":[1,5],\"35\":[1,9],\"36\":[1,22],\"37\":[1],\"38\":[1,58],\"39\":[1,114],\"40\":[1,22],\"41\":[1,30],\"42\":[1],\"43\":[4,58],\"44\":[1,24],\"45\":[1,54],\"46\":[1,27],\"47\":[1,54],\"48\":[1,53],\"49\":[1,65],\"50\":[1,80],\"51\":[1,86],\"52\":[1,14],\"53\":[1],\"54\":[1,40],\"55\":[1,3],\"56\":[1,19],\"57\":[3,30],\"58\":[1,12],\"59\":[1,11],\"60\":[3,2],\"61\":[1,16],\"62\":[1,34],\"63\":[2,11],\"64\":[2,8],\"65\":[2,8],\"66\":[2,8],\"67\":[4,26],\"68\":[3,12],\"69\":[3,10],\"70\":[3,9],\"71\":[3,77],\"72\":[1,28],\"73\":[1,9],\"74\":[2,19],\"75\":[1,64],\"76\":[1,3],\"77\":[1,18],\"78\":[1,19],\"79\":[1,19],\"80\":[2,17],\"81\":[2,17],\"82\":[2,13],\"83\":[2,9],\"84\":[2,24],\"85\":[4,17],\"86\":[2,9],\"87\":[2,9],\"88\":[2,17],\"89\":[1,13],\"90\":[1,18],\"91\":[1,22],\"92\":[1,31],\"93\":[1,50],\"94\":[3,8],\"95\":[1],\"96\":[1,20],\"97\":[1,25],\"98\":[1,10],\"99\":[1,7],\"100\":[2,6],\"101\":[2,30],\"102\":[1,142],\"103\":[3],\"104\":[1,25],\"105\":[1,18],\"106\":[1],\"107\":[1,8],\"108\":[1,3],\"109\":[1],\"110\":[1],\"111\":[1,38],\"112\":[1,49],\"113\":[1,45],\"114\":[1],\"115\":[1,48],\"116\":[1],\"117\":[1],\"118\":[1],\"119\":[1],\"120\":[1],\"121\":[1],\"122\":[1,15],\"123\":[1,52],\"124\":[null,null,2],\"125\":[3,7],\"126\":[null,null,2],\"127\":[3,5],\"128\":[2,8],\"129\":[2,7],\"130\":[3,8],\"131\":[4,9],\"132\":[2,2],\"133\":[2,6],\"134\":[5,2],\"135\":[null,null,2],\"136\":[3,6],\"137\":[null,null,2],\"138\":[4,8],\"139\":[4,8],\"140\":[2,8],\"141\":[2,9],\"142\":[3,14],\"143\":[3,8],\"144\":[1,3],\"145\":[1],\"146\":[1],\"147\":[1],\"148\":[1],\"149\":[1],\"150\":[1],\"151\":[1],\"152\":[1],\"153\":[1],\"154\":[1]},\"averageFieldLength\":[1.5139254509095774,22.423319613780336,0.6990848634218146],\"storedFields\":{\"0\":{\"h\":\"主页\",\"t\":[\"这是一个博客主页的案例。\",\"要使用此布局，你应该在页面前端设置 layout: BlogHome 和 home: true。\",\"相关配置文档请见 博客主页。\"]},\"1\":{\"h\":\"关于\",\"t\":[\"可能以前真的很羡慕那些有自己博客的人，为什么呢？拥有自己的小站并且可以在上面发布自己的文章，看起来也没什么了不起嘛，呵。但是可能自己真的有赛博仓鼠的囤积癖，有一个自己拥有绝对控制权的网站，在上面记录自己的点滴成长，想想也是一件很幸福的事情。\",\"2022/10/2 CCPC河南省赛结束，感觉队友们都很默契啊，整个学校打的也争气的，咱也拿了个第一个金牌。\",\"2022/9/25 ICPC网络赛Content2结束了,又进步了一点点吧，但是没有什么特别开心的，两场比赛依旧是一个名额都没抢到。\",\"2022/9/18 ICPC网络赛Content1结束了，相比上次真是飞跃的进步。\",\"2022/9/12 hexo博客终于弄好啦！🥳\",\"2022/9/11 ccpc网络赛结束，以后坚持每周模拟战吧。\",\"2022/8/12 基于wordpress的博客上线，但是都是php真的看不懂啊！呜呜呜~\",\"2022/5/22 既然选择在xcpc这条路上走，就该抛弃所有杂念。\"]},\"2\":{\"h\":\"配置演示\"},\"3\":{\"c\":[\"使用指南\"]},\"4\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"5\":{\"c\":[\"使用指南\"]},\"6\":{\"c\":[\"禁用\"]},\"7\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"8\":{\"c\":[\"指南\"]},\"9\":{\"c\":[\"布局\"]},\"10\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"11\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"12\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"Frontmatter\",\"Frontmatter 是 VuePress 中很重要的一个概念，请阅读 Frontmatter 介绍 了解详情。\"]},\"13\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"14\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"15\":{\"h\":\"主题扩展\",\"t\":[\"通过 VuePress 插件，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"16\":{\"h\":\"选项卡\",\"t\":[\"查看详情\"]},\"17\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注^first.\",\"查看详情\"]},\"18\":{\"h\":\"导入文件\",\"t\":[\"查看详情\"]},\"19\":{\"h\":\"TeX 语法\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"查看详情\"]},\"20\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"21\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小。\",\"查看详情\"]},\"22\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"23\":{\"h\":\"组件\"},\"24\":{\"c\":[\"使用指南\"]},\"25\":{\"c\":[\"Markdown\"]},\"26\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"27\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 ---\"]},\"28\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"29\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"30\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"31\":{\"c\":[\"使用指南\"]},\"32\":{\"c\":[\"页面配置\",\"使用指南\"]},\"33\":{\"h\":\"封寝十天小记\",\"t\":[\"3e0594757ea2535b5aeb9611fde91794c2cd3dd4ea4f3312d.png\",\"不知不觉在寝室已经封了十天了，所谓的新冠疫情已经耽误了太多太多的事情了，现在在寝室里面最大的事情也不过是早上吃什么、中午吃什么、晚上吃什么，学习相关的事情也是尽量跟上，毕竟大学上网课，能进脑子的知识估计能有十分之一都不错了。按照老师们说的，目前维持自己的精神状态正常才最重要hhh。这也是我这几天这几十天咕咕咕连个破文章都没更新的原因。\",\"走廊\",\"看着平常里熙熙攘攘的校园还有宿舍的走廊里变得如此宁静，在刚封寝的那几天我其实内心还是有点欣喜的（没有任何别的意思），因为我其实很喜欢安静的地方，而且有免费的饭菜，窝在寝室里默默的学习和努力还是挺好的，平时正常上课的时候我也认为去教室上课不如自学，可能是认为自己的学校的教育资源不如网上的吧（确实是一个错误的观点）。一开始定了一个目标，就是在保证正常学习的进度下再把java的springboot框架给学了，还可以偶尔看看书，写写文章。\",\"IMG-20221028-162248.jpg\",\"但是，封寝几天之后逐渐就开始崩坏了，每天固定的捅一次喉咙+捅两次鼻子，自己的计划几乎被打乱了，被封寝之后的物资短缺几乎让我退化到了只要keep live就好了，对学习根本打不起兴趣，虽然很喜欢扩展一些编程知识，但没什么斗志，碰到难以解决的问题就搁置了，对于算法的学习也搁置了，基本上只完成了老师布置的作业，还有给新生出的题现在还有几道没出，饭菜虽然免费，但其质量很堪忧，以至于是几乎不能吃的感觉，一盆菜里面面就几个肉丝，那个菜还十分难吃。\",\"IMG-20221106-181748.jpg\",\"这个图里能看到的肉几乎就是全部了，上面那个包菜还巨难吃，米还有点生。其实这些还不是最重要的，或者根本不值一提。\",\"疫情之前连着打了一个月的比赛，CCPC和ICPC的网络选拔赛，还有河南省赛，甚至封寝前几天还打了一场河北省赛。只能说是拼死拼活（虽然我们队伍不是最强的），打下来了几个名额，ICPC亚洲区域赛的名额真的是太宝贵了，7个名额，如果能参加，拿个铜牌也是足够拿到简历上加很多分的，这一来疫情耽误了，报名过的比赛被迫退赛，估计只能等到明年再打了，不过，训练了一年半了，只为了打明年的比赛，不论是时间成本还是精力，算起来都太亏了，而且如果明年拿不到奖牌，那这两年半的训练算是打水漂了，没有结果 ，大学四年浪费八分之五。\",\"确实是心里有点难受，越想越难受，所以在这里写出来发泄一下，没有什么条理，没有什么逻辑，就是很不爽。我也知道，写出来并不能改变什么，世界上总是有一些事与愿违的事情，没有那个运气和实力，选错了方向可能努力也没什么结果，现在或许我应该把重心放到更加稳妥的方向了吧，算法固然算是一个梦想，但是还是要脚踏实地学点什么养活自己再说。\",\"好想回到没有疫情的时候啊！！！！！！\",\"CR11u-20221023-101842854.jpg\",\"下面放一些比赛时的照骗：\",\"wx-camera-1664680508938.jpg\",\"河南省赛\",\"wx-camera-1663385267713.jpg\",\"应该是第一场ICPC网络预选赛\",\"wx-camera-1664527222954.jpg\",\"大概是第二场吧\",\"mmexport1665747871951.jpg\",\"目前拿过的最高荣誉！！！！！\"]},\"34\":{\"h\":\"Python实现2048\",\"t\":[\"看到某网站上有一门实战课，所以就跑过来跟着实现一下这个。\",\"应该不难吧，哈哈哈。\"]},\"35\":{\"h\":\"技术栈\",\"t\":[\"Python 基本知识\",\"curses 终端图形编程库\",\"random 随机数模块\",\"collections 容器数据类型库\",\"状态机的概念\"]},\"36\":{\"h\":\"实现过程\",\"t\":[\"在根目录下创建游戏文件 2048.py\",\"导入需要的包\",\"# curses 用来在终端上显示图形界面 import curses # random 模块用来生成随机数 from random import randrange, choice # collections 提供了一个字典的子类 defaultdict。可以指定 key 值不存在时，value 的默认值。 from collections import defaultdict\",\"PS：这个curses后面真的折磨了我好久\"]},\"37\":{\"h\":\"主逻辑\"},\"38\":{\"h\":\"用户行为\",\"t\":[\"所有的有效输入都可以转换为\\\"上，下，左，右，游戏重置，退出\\\"这六种行为，用 actions 表示\",\"actions = ['Up', 'Left', 'Down', 'Right', 'Restart', 'Exit']\",\"有效输入键是最常见的 W（上），A（左），S（下），D（右），R（重置），Q（退出），这里要考虑到大写键开启的情况，获得有效键值列表：\",\"# ord() 函数以一个字符作为参数，返回参数对应的 ASCII 数值，便于和后面捕捉的键位关联 letter_codes = [ord(ch) for ch in 'WASDRQwasdrq']\",\"将输入与行为进行关联：\",\"actions_dict = dict(zip(letter_codes, actions * 2))\",\"# actions_dict 的输出结果为 {87: 'Up', 65: 'Left', 83: 'Down', 68: 'Right', 82: 'Restart', 81: 'Exit', 119: 'Up', 97: 'Left', 115: 'Down', 100: 'Right', 114: 'Restart', 113: 'Exit'}\"]},\"39\":{\"h\":\"状态机\",\"t\":[\"处理游戏主逻辑的时候我们会用到一种十分常用的技术：状态机，或者更准确的说是有限状态机（FSM）\",\"你会发现 2048 游戏很容易就能分解成几种状态的转换。\",\"2.1-1\",\"state 存储当前状态， state_actions 这个词典变量作为状态转换的规则，它的 key 是状态，value 是返回下一个状态的函数：\",\"Init: init()\",\"Game\",\"Game: game()\",\"Game\",\"Win\",\"GameOver\",\"Exit\",\"Win: lambda: not_game('Win')\",\"Init\",\"Exit\",\"Gameover: lambda: not_game('Gameover')\",\"Init\",\"Exit\",\"Exit: 退出循环\",\"状态机会不断循环，直到达到 Exit 终结状态结束程序。\",\"下面我们来理清主逻辑的代码：\",\"init函数用来初始化我们的游戏棋盘，使游戏变成初始状态。\",\"初始化棋盘\",\"def init(): ''' 初始化游戏棋盘 ''' return 'Game'\",\"not_game函数表示的是游戏结束时的状态。游戏结束时，只有胜利和失败两种结果。在展示这两种结果的同时，我们还需要为玩家提供“Restart”和“Exit”功能。\",\"def not_game(state): '''展示游戏结束界面。 读取用户输入得到 action，判断是重启游戏还是结束游戏 ''' # defaultdict 参数是 callable 类型，所以需要传一个函数 responses = defaultdict(lambda: state) # 在字典中新建两个键值对 responses['Restart'], responses['Exit'] = 'Init', 'Exit' return responses[action]\",\"这里 defaultdict 作用是生成一个特殊的字典 responses。 在普通的字典里，我们都知道如果使用字典里不存在的 key 来取 value，程序就会报错。 但在 defaultdict 生成的特殊字典里，如果要取的 key 不存在，程序不仅不会报错，还能取到一个我们设定的默认 value 值。 也就是说，在 responses 这个特殊字典里，responses[action] 在 action 为 'Restart' 、'Exit' 这两种行为时分别对应 'Init' 和 'Exit' 状态。 在 keyaction 为 actions = ['Up', 'Left', 'Down', 'Right', 'Restart', 'Exit'] 中的其他行为时，对应的都是默认的 valuestate。\",\"这样一来，在游戏结束界面，玩家输入 r 和 q 以外的键位都不能对游戏界面造成影响。\",\"game函数表示的是游戏进行时的状态，在不重新开始或退出的情况下，只要游戏没有胜利或失败，就会一直处于游戏状态。\",\"游戏状态\",\"def game(): '''画出当前棋盘状态 读取用户输入得到 action ''' if action == 'Restart': return 'Init' if action == 'Exit': return 'Exit' # if 成功移动了一步: if 游戏胜利了: return 'Win' if 游戏失败了: return 'Gameover' return 'Game'\",\"这里同样会获取用户输入得到 action。 当 action 为 'Restart'、'Exit'时会执行“Restart”、“Exit”功能。 不同的是，当 action 为 'Up'、'Left'、'Down'、'Right' 行为时，棋盘会进行相应移动一次，然后判断游戏是否结束。如果结束就返回相应的结束状态，没有结束就返回状态 'Game'，表示还在游戏进行状态。\"]},\"40\":{\"h\":\"用户输入处理\",\"t\":[\"阻塞＋循环，直到获得用户有效输入才返回对应行为：\",\"def get_user_action(keyboard): char = \\\"N\\\" while char not in actions_dict: # 返回按下键位的 ASCII 码值 char = keyboard.getch() # 返回输入键位对应的行为 return actions_dict[char]\"]},\"41\":{\"h\":\"创建棋盘\",\"t\":[\"初始化棋盘的参数，可以指定棋盘的高和宽以及游戏胜利条件，默认是最经典的 4x4 ～ 2048。\",\"class GameField(object): def __init__(self, height=4, width=4, win=2048): self.height = height # 高 self.width = width # 宽 self.win_value = 2048 # 过关分数 self.score = 0 # 当前分数 self.highscore = 0 # 最高分 self.reset() # 棋盘重置\"]},\"42\":{\"h\":\"棋盘操作\"},\"43\":{\"h\":\"随机生成一个 2 或者 4\",\"t\":[\"def spawn(self): # 从 100 中取一个随机数，如果这个随机数大于 89，new_element 等于 4，否则等于 2 new_element = 4 if randrange(100) > 89 else 2 # 得到一个随机空白位置的元组坐标 (i,j) = choice([(i,j) for i in range(self.width) for j in range(self.height) if self.field[i][j] == 0]) self.field[i][j] = new_element\",\"按照游戏规则，这里需要在棋盘中随机找到一个空白的位置，并在这个位置上随机生成一个 2 或 4。 于是，我们用到了 random 库的 randrange 和 choice 方法。randrange 用法参考上面代码块中的注释。 choice 方法会从一个非空的序列（list、str、tuple 等）中随机返回一个元素。可是我们需要知道象征着棋盘的这个二维数组的 i 和 j 才能确定棋盘上的位置。 因此，在上面的代码中，我们往 choice 方法中传入一个列表，并在列表生成式中将二维数组变成一个以 (i,j) 为元素的列表，同时排除掉非零的位置。\"]},\"44\":{\"h\":\"重置棋盘\",\"t\":[\"def reset(self): # 更新分数 if self.score > self.highscore: self.highscore = self.score self.score = 0 # 初始化游戏开始界面 self.field = [[0 for i in range(self.width)] for j in range(self.height)] self.spawn() self.spawn()\",\"reset 方法在棋盘初始化的时候被调用。它的主要作用是将棋盘所有位置元素复原为 0，然后再在随机位置生成游戏初始的数值。\"]},\"45\":{\"h\":\"一行向左合并\",\"t\":[\"(注：这一操作是在 move 内定义的，拆出来是为了方便阅读)\",\"def move_row_left(row): def tighten(row): '''把零散的非零单元挤到一块''' # 先将非零的元素全拿出来加入到新列表 new_row = [i for i in row if i != 0] # 按照原列表的大小，给新列表后面补零 new_row += [0 for i in range(len(row) - len(new_row))] return new_row def merge(row): '''对邻近元素进行合并''' pair = False new_row = [] for i in range(len(row)): if pair: # 合并后，加入乘 2 后的元素在 0 元素后面 new_row.append(2 * row[i]) # 更新分数 self.score += 2 * row[i] pair = False else: # 判断邻近元素能否合并 if i + 1 < len(row) and row[i] == row[i + 1]: pair = True # 可以合并时，新列表加入元素 0 new_row.append(0) else: # 不能合并，新列表中加入该元素 new_row.append(row[i]) # 断言合并后不会改变行列大小，否则报错 assert len(new_row) == len(row) return new_row # 先挤到一块再合并再挤到一块 return tighten(merge(tighten(row)))\"]},\"46\":{\"h\":\"矩阵转置与矩阵逆转\",\"t\":[\"加入这两个操作可以大大节省我们的代码量，减少重复劳动。\",\"矩阵转置：\",\"矩阵转置\",\"对于像我们棋盘一样，4 × 4 的二维矩阵，我们可以直接利用 Python 内置的 zip(*) 方法来进行矩阵转置。\",\"def transpose(field): return [list(row) for row in zip(*field)]\",\"矩阵逆转（不是逆矩阵）：\",\"这里只是将矩阵的每一行倒序，和逆矩阵的概念无关。\",\"def invert(field): return [row[::-1] for row in field]\"]},\"47\":{\"h\":\"棋盘走一步\",\"t\":[\"通过对矩阵进行转置与逆转，可以直接从左移得到其余三个方向的移动操作\",\"(注：这里省略 move 函数里的部分代码)\",\"def move(self, direction): # 创建 moves 字典，把不同的棋盘操作作为不同的 key，对应不同的方法函数 moves = {} moves['Left'] = lambda field: [move_row_left(row) for row in field] moves['Right'] = lambda field: invert(moves['Left'](invert(field))) moves['Up'] = lambda field: transpose(moves['Left'](transpose(field))) moves['Down'] = lambda field: transpose(moves['Right'](transpose(field))) # 判断棋盘操作是否存在且可行 if direction in moves: if self.move_is_possible(direction): self.field = moves[direction](self.field) self.spawn() return True else: return False\",\"在 moves 字典中有 Left、Right、Up、Down 四个 key 对应四种棋盘操作。 我们先判断传进来作为 key 的 direction 操作是否存在 move 字典中。如果存在的话，我们再用 move_is_possible 方法判断这个操作是否能在棋盘执行。 这两个判断都通过后，就会对棋盘进行相应移动操作。 这里的难点在于理解矩阵转置和逆转后和原矩阵的关系。如果想不明白，可以在纸上画出变化前后的矩阵对比。\"]},\"48\":{\"h\":\"判断输赢\",\"t\":[\"def is_win(self): # 任意一个位置的数大于设定的 win 值时，游戏胜利 return any(any(i >= self.win_value for i in row) for row in self.field) def is_gameover(self): # 无法移动和合并时，游戏失败 return not any(self.move_is_possible(move) for move in actions)\",\"在 is_win 函数方法中，我们使用了 Python 内置的 any 函数，any 接收一个可迭代对象作为参数(iterable),返回 bool 值。 这里的 any 里面嵌套了另一个 any，里层的 any 传入了每一行的元素并依次比较这一行的每个元素与 self.win_value 的大小，如果有任何一个元素大于 self.win_value，就返回 True,否则返回 False；外层的 any 传入的是矩阵每一行元素在内层 any 里处理后返回的 bool 值，如果有任何一个 bool 值为 True，外层的 any 就返回 True。\",\"is_gameover 函数用来判断游戏是否结束。当上下左右四个方向都不能移动时，游戏结束。\"]},\"49\":{\"h\":\"判断能否移动\",\"t\":[\"def move_is_possible(self, direction): '''传入要移动的方向 判断能否向这个方向移动 ''' def row_is_left_movable(row): '''判断一行里面能否有元素进行左移动或合并 ''' def change(i): # 当左边有空位（0），右边有数字时，可以向左移动 if row[i] == 0 and row[i + 1] != 0: return True # 当左边有一个数和右边的数相等时，可以向左合并 if row[i] != 0 and row[i + 1] == row[i]: return True return False return any(change(i) for i in range(len(row) - 1)) # 检查能否移动（合并也可以看作是在移动） check = {} # 判断矩阵每一行有没有可以左移动的元素 check['Left'] = lambda field: any(row_is_left_movable(row) for row in field) # 判断矩阵每一行有没有可以右移动的元素。这里只用进行判断，所以矩阵变换之后，不用再变换复原 check['Right'] = lambda field: check['Left'](invert(field)) check['Up'] = lambda field: check['Left'](transpose(field)) check['Down'] = lambda field: check['Right'](transpose(field)) # 如果 direction 是“左右上下”即字典 check 中存在的操作，那就执行它对应的函数 if direction in check: # 传入矩阵，执行对应函数 return check[direction](self.field) else: return False\",\"在 move_is_possible 函数中，我们只用实现判断能否向左移动的代码，然后同样利用矩阵的转置和逆转来转换矩阵，完成能否向其他方向移动的判断。\"]},\"50\":{\"h\":\"绘制游戏界面\",\"t\":[\"（注：这一步是在棋盘类内定义的）\",\"def draw(self, screen): help_string1 = '(W)Up (S)Down (A)Left (D)Right' help_string2 = ' (R)Restart (Q)Exit' gameover_string = ' GAME OVER' win_string = ' YOU WIN!' # 绘制函数 def cast(string): # addstr() 方法将传入的内容展示到终端 screen.addstr(string + '\\\\n') # 绘制水平分割线的函数 def draw_hor_separator(): line = '+' + ('+------' * self.width + '+')[1:] cast(line) # 绘制竖直分割线的函数 def draw_row(row): cast(''.join('|{: ^5} '.format(num) if num > 0 else '| ' for num in row) + '|') # 清空屏幕 screen.clear() # 绘制分数和最高分 cast('SCORE: ' + str(self.score)) if 0 != self.highscore: cast('HIGHSCORE: ' + str(self.highscore)) # 绘制行列边框分割线 for row in self.field: draw_hor_separator() draw_row(row) draw_hor_separator() # 绘制提示文字 if self.is_win(): cast(win_string) else: if self.is_gameover(): cast(gameover_string) else: cast(help_string1) cast(help_string2)\",\"这部分代码的关键在于 cast 函数。在 draw 函数传入的 screen 参数表示绘画的窗体对象，这里我们先记住 screen.addstr() 的作用是绘制字符，screen.clear() 的作用是清空屏幕，达到刷新的目的。在下一部分主逻辑后面，我们再结合两部分内容来理解 curses 库的用法。\"]},\"51\":{\"h\":\"完成主逻辑\",\"t\":[\"完成以上工作后，我们就可以补完主逻辑了！\",\"def main(stdscr): def init(): # 重置游戏棋盘 game_field.reset() return 'Game' def not_game(state): # 根据状态画出游戏的界面 game_field.draw(stdscr) # 读取用户输入得到 action，判断是重启游戏还是结束游戏 action = get_user_action(stdscr) # 如果没有 'Restart' 和 'Exit' 的 action，将一直保持现有状态 responses = defaultdict(lambda: state) responses['Restart'], responses['Exit'] = 'Init', 'Exit' return responses[action] def game(): # 根据状态画出游戏的界面 game_field.draw(stdscr) # 读取用户输入得到 action action = get_user_action(stdscr) if action == 'Restart': return 'Init' if action == 'Exit': return 'Exit' if game_field.move(action): # move successful if game_field.is_win(): return 'Win' if game_field.is_gameover(): return 'Gameover' return 'Game' state_actions = { 'Init': init, 'Win': lambda: not_game('Win'), 'Gameover': lambda: not_game('Gameover'), 'Game': game } # 使用颜色配置默认值 curses.use_default_colors() # 实例化游戏界面对象并设置游戏获胜条件为 2048 game_field = GameField(win=2048) state = 'Init' # 状态机开始循环 while state != 'Exit': state = state_actions[state]() curses.wrapper(main)\",\"这里的主要内容在实验的开始就分析过了。 所以我们来结合上一部分出现的 screen.addstr() 和 screen.clear() 理解 curses 库的用法。\",\"首先， curses.wrapper 函数会激活并初始化终端进入 'curses 模式'。 在这个模式下会禁止输入的字符显示在终端上、禁止终端程序的行缓冲（line buffering），即字符在输入时就可以使用，不需要遇到换行符或回车。\",\"接着，curses.wrapper 函数需要传一个函数作为参数，这个传进去的函数必须满足第一个参数为主窗体（main window） stdscr。 在前面的代码里，可以看到我们给 curses.wrapper(main) 的 main 函数中传入了一个 stdscr。\",\"最后，stdscr 作为 window.addstr(str)、window.clear() 方法的调用需要窗体对象（window object），在 game_field.draw(stdscr) 中传入 draw 方法中。\"]},\"52\":{\"h\":\"运行\",\"t\":[\"前面顺顺利利，偏偏到运行这一步出了问题（好像前面也不太可能出问题，都是写代码）。查了一下百度，好像是因为curses库只支持linux。然后去下载了一个支持win的第三方版本，最后成功运行了！\",\"2.8-1\",\"（其实并没有完美运行，某些操作会导致程序报错）\"]},\"53\":{\"h\":\"面向对象重构\"},\"54\":{\"h\":\"Action类\",\"t\":[\"体现面向对象的编程方法，实现的Action类可以对于每个窗体实现操作。\",\"class Action(object): UP = 'up' LEFT = 'left' DOWN = 'down' RIGHT = 'right' RESTART = 'restart' EXIT = 'exit' actions = [UP, LEFT, DOWN, RIGHT, RESTART, EXIT] letter_codes = [ord(ch) for ch in 'WASDRQwasdrq'] actions_dict = dict(zip(letter_codes, actions)) def init(self, stdscr): self.stdscr = stdscr def get(self): char = \\\"N\\\" while char not in self.actions_dict: char = self.stdscr.getch() return self.actions_dict[char]\"]},\"55\":{\"h\":\"Grid类\",\"t\":[\"Grid类包含所有对于格子计算的操作，包括上下左右移动和重新开始。\"]},\"56\":{\"h\":\"reset\",\"t\":[\"将整个棋盘重置，变成空棋盘后加入两个随机方块。\",\"# 重新开始和清零 def reset(self): self.cells = [[0 for i in range(self.size)] for j in range(self.size)] self.add_random_item() self.add_random_item()\"]},\"57\":{\"h\":\"add_random_item\",\"t\":[\"添加随机方块，可能为2或4\",\"# 每次操作加入随机两个方块，可能是2 或4 def add_random_item(self): empty_cells = [(i, j) for i in range(self.size) for j in range(self.size) if self.cells[i][j] == 0] (i, j) = random.choice(empty_cells) self.cells[i][j] = 4 if random.randrange(100) >= 90 else 2\"]},\"58\":{\"h\":\"transpose\",\"t\":[\"# 矩阵转置 def transpose(self): self.cells = [list(row) for row in zip(*self.cells)]\"]},\"59\":{\"h\":\"invert\",\"t\":[\"# 矩阵翻转 def invert(self): self.cells = [row[::-1] for row in self.cells]\"]},\"60\":{\"h\":\"move_row_left\",\"t\":[\"将矩阵向左划，计算方块的数值\"]},\"61\":{\"h\":\"tighten\",\"t\":[\"矩阵向左收紧\",\"# 将矩阵向左收缩 def tighten(row): new_row = [i for i in row if i != 0] new_row += [0 for i in range(len(row) - len(new_row))] return new_row\"]},\"62\":{\"h\":\"merge\",\"t\":[\"将相邻的两个数值相同的格子合并\",\"# 将相邻的两个数值相同的方格合并 def merge(row): pair = False new_row = [] for i in range(len(row)): if pair: new_row.append(2 * row[i]) #self.score += 2 * row[i] pair = False else: if i + 1 < len(row) and row[i] == row[i + 1]: pair = True new_row.append(0) else: new_row.append(row[i]) assert len(new_row) == len(row) return new_row\",\"返回\",\"# 先向左收缩然后合并然后再向左收缩完成一次操作 return tighten(merge(tighten(row)))\"]},\"63\":{\"h\":\"move_left\",\"t\":[\"# 向左划 def move_left(self): self.cells = [self.move_row_left(row) for row in self.cells]\"]},\"64\":{\"h\":\"move_right\",\"t\":[\"# 向右划 def move_right(self): self.invert() self.move_left() self.invert()\"]},\"65\":{\"h\":\"move_up\",\"t\":[\"# 向上划 def move_up(self): self.transpose() self.move_left() self.transpose()\"]},\"66\":{\"h\":\"move_down\",\"t\":[\"# 向下划 def move_down(self): self.transpose() self.move_right() self.transpose()\"]},\"67\":{\"h\":\"row_can_move_left\",\"t\":[\"判断能不能向左移动\",\"# 判断能否向左划 @staticmethod def row_can_move_left(row): def change(i): if row[i] == 0 and row[i + 1] != 0: return True if row[i] != 0 and row[i + 1] == row[i]: return True return False return any(change(i) for i in range(len(row) - 1))\"]},\"68\":{\"h\":\"can_move_left\",\"t\":[\"def can_move_left(self): return any(self.row_can_move_left(row) for row in self.cells)\"]},\"69\":{\"h\":\"can_move_right\",\"t\":[\" def can_move_right(self): self.invert() can = self.can_move_left() self.invert() return can\"]},\"70\":{\"h\":\"can_move_up\",\"t\":[\"def can_move_up(self): self.transpose(); can = self.can_move_left() self.transpose() return can\"]},\"71\":{\"h\":\"can_move_down\",\"t\":[\"def can_move_down(self): self.transpose() can = self.can_move_right() self.transpose() return can\",\"所有代码：\",\"class Grid(object): # 初始化函数 def __init__(self, size): self.size = size self.cells = None self.reset() # 重新开始和清零 def reset(self): self.cells = [[0 for i in range(self.size)] for j in range(self.size)] self.add_random_item() self.add_random_item() # 每次操作加入随机两个方块，可能是2 或4 def add_random_item(self): empty_cells = [(i, j) for i in range(self.size) for j in range(self.size) if self.cells[i][j] == 0] (i, j) = random.choice(empty_cells) self.cells[i][j] = 4 if random.randrange(100) >= 90 else 2 # 矩阵转置 def transpose(self): self.cells = [list(row) for row in zip(*self.cells)] # 矩阵翻转 def invert(self): self.cells = [row[::-1] for row in self.cells] # 向左划 @staticmethod def move_row_left(row): # 将矩阵向左收缩 def tighten(row): new_row = [i for i in row if i != 0] new_row += [0 for i in range(len(row) - len(new_row))] return new_row # 将相邻的两个数值相同的方格合并 def merge(row): pair = False new_row = [] for i in range(len(row)): if pair: new_row.append(2 * row[i]) #self.score += 2 * row[i] pair = False else: if i + 1 < len(row) and row[i] == row[i + 1]: pair = True new_row.append(0) else: new_row.append(row[i]) assert len(new_row) == len(row) return new_row # 先向左收缩然后合并然后再向左收缩完成一次操作 return tighten(merge(tighten(row))) # 向左划 def move_left(self): self.cells = [self.move_row_left(row) for row in self.cells] # 向右划 def move_right(self): self.invert() self.move_left() self.invert() # 向上划 def move_up(self): self.transpose() self.move_left() self.transpose() # 向下划 def move_down(self): self.transpose() self.move_right() self.transpose() # 判断能否向左划 @staticmethod def row_can_move_left(row): def change(i): if row[i] == 0 and row[i + 1] != 0: return True if row[i] != 0 and row[i + 1] == row[i]: return True return False return any(change(i) for i in range(len(row) - 1)) def can_move_left(self): return any(self.row_can_move_left(row) for row in self.cells) def can_move_right(self): self.invert() can = self.can_move_left() self.invert() return can def can_move_up(self): self.transpose(); can = self.can_move_left() self.transpose() return can def can_move_down(self): self.transpose() can = self.can_move_right() self.transpose() return can\"]},\"72\":{\"h\":\"Screen类\",\"t\":[\"Screen类用来绘制游戏界面，包括棋盘和方块数值，以及分数。\",\"提示文字\",\"help_string1 = '(W)up (S)down (A)left (D)right' help_string2 = ' (R)Restart (Q)Exit' over_string = ' GAME OVER' win_string = ' YOU WIN!'\"]},\"73\":{\"h\":\"cast\",\"t\":[\"def cast(self, string): self.screen.addstr(string + '\\\\n')\"]},\"74\":{\"h\":\"draw_row\",\"t\":[\"画格子的竖线\",\"def draw_row(self, row): self.cast(''.join('|{: ^5}'.format(num) if num > 0 else '| ' for num in row) + '|')\"]},\"75\":{\"h\":\"draw\",\"t\":[\"画格子的横线和文字数字\",\"def draw(self): self.screen.clear() self.cast('SCORE: ' + str(self.score)) for row in self.grid.cells: self.cast('+-----' * self.grid.size + '+') self.draw_row(row) self.cast('+-----' * self.grid.size + '+') if self.win: self.cast(self.win_string) else: if self.over: self.cast(self.over_string) else: self.cast(self.help_string1) self.cast(self.help_string2)\",\"所有代码：\",\"class Screen(object): help_string1 = '(W)up (S)down (A)left (D)right' help_string2 = ' (R)Restart (Q)Exit' over_string = ' GAME OVER' win_string = ' YOU WIN!' def __init__(self, screen=None, grid=None, score=0, best_score=0, over=False, win=False): self.grid = grid self.score = score self.over = over self.win = win self.screen = screen self.counter = 0 def cast(self, string): self.screen.addstr(string + '\\\\n') def draw_row(self, row): self.cast(''.join('|{: ^5}'.format(num) if num > 0 else '| ' for num in row) + '|') def draw(self): self.screen.clear() self.cast('SCORE: ' + str(self.score)) for row in self.grid.cells: self.cast('+-----' * self.grid.size + '+') self.draw_row(row) self.cast('+-----' * self.grid.size + '+') if self.win: self.cast(self.win_string) else: if self.over: self.cast(self.over_string) else: self.cast(self.help_string1) self.cast(self.help_string2)\"]},\"76\":{\"h\":\"GameManager类\",\"t\":[\"运行游戏的主逻辑类，包括游戏运行的流程控制状态机。\"]},\"77\":{\"h\":\"reset\",\"t\":[\"重置游戏，全部重新开始，将所有数值全部回归初始状态。\",\"def reset(self): self.state = 'init' self.win = False self.over = False self.score = 0 self.grid = Grid(self.size) self.grid.reset()\"]},\"78\":{\"h\":\"screen\",\"t\":[\"显示游戏画面，刷新画面\",\"@property def screen(self): return Screen(screen=self.stdscr, score=self.score, grid=self.grid, win=self.win, over=self.over)\"]},\"79\":{\"h\":\"move\",\"t\":[\"操作函数，获取action判断能否移动，如果能就执行移动。\",\"def move(self, direction): if self.can_move(direction): getattr(self.grid, 'move_' + direction)() self.grid.add_random_item() return True else: return False\"]},\"80\":{\"h\":\"is_win\",\"t\":[\"游戏获胜条件，判断游戏是否获胜（这里是有一个格子达到2048就算获胜），获胜则结束游戏。\",\"@property def is_win(self): self.win = max(chain(*self.grid.cells)) >= self.win_num return self.win\"]},\"81\":{\"h\":\"is_over\",\"t\":[\"游戏失败函数，如果没有可以移动的方向则游戏失败。\",\"@property def is_over(self): self.over = not any(self.can_move(move) for move in self.action.actions) return self.over\"]},\"82\":{\"h\":\"can_move\",\"t\":[\"判断是否可以移动函数，参数为一个方向，返回一个布尔值。\",\"def can_move(self, direction): return getattr(self.grid, 'can_move_' + direction)()\"]},\"83\":{\"h\":\"state_init\",\"t\":[\"状态重置\",\"def state_init(self): self.reset() return 'game'\"]},\"84\":{\"h\":\"state_game\",\"t\":[\"游戏状态机，控制游戏的重启和结束以及操作。\",\"def state_game(self): self.screen.draw() action = self.action.get() if action == Action.RESTART: return 'init' if action == Action.EXIT: return 'exit' if self.move(action): if self.is_win: return 'win' if self.is_over: return 'over' return 'game'\"]},\"85\":{\"h\":\"_restart_or_exit\",\"t\":[\"def _restart_or_exit(self): self.screen.draw() return 'init' if self.action.get() == Action.RESTART else 'exit'\"]},\"86\":{\"h\":\"state_win\",\"t\":[\" def state_win(self): return self._restart_or_exit()\"]},\"87\":{\"h\":\"state_over\",\"t\":[\"def state_over(self): return self._restart_or_exit()\"]},\"88\":{\"h\":\"__call__\",\"t\":[\"def __call__(self, stdscr): curses.use_default_colors() self.stdscr = stdscr self.action = Action(self.stdscr) while self.state != 'exit': self.state = getattr(self, 'state_' + self.state)()\"]},\"89\":{\"h\":\"C++中的this\",\"t\":[\"定义 ：this 是C++中的一个关键字，它是一个const指针，指向当前对象，通过它可以访问当前对象的所有成员。\",\"就像大多数面向对象的编程语言一样，this是为了方便访问对象的成员变量而设置的。在大多数情况下，this省略也没有影响，但是为了规范和安全还是建议在访问对象成员变量时加上this。\",\"像下面这个例子：\",\"此文章暂时咕咕咕咕\"]},\"90\":{\"h\":\"Java实现模拟栈\",\"t\":[\"这几天除了要准备CCPC，还参加了一个蓝桥云课的小比赛。一般这种小比赛都是没人参加的，我也不会管它，也没证书、也没用，但是，上次我因为无聊参加了它的那个python比赛，那一场打的真的难，因为都是我不擅长的领域，各种技术应用，各种库的调用，我没学过都是一个一个去网上搜😂。虽然难，但是那一场比赛我真的学到了很多实用的东西，感觉比我自己半个月学的都多。话不多说有时间再好好聊聊。\"]},\"91\":{\"h\":\"栈\",\"t\":[\"**栈（stack）**又名堆栈，它是一种运算受限的线性表。限定仅在表尾进行插入和删除操作的线性表。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。\",\"^以上是百度百科的解释，总而言之，栈就像一个桶，每次往里放东西都会摞在最上面，每次从里面拿东西也只能从最上面拿，是一个先进后出的数据结构。\"]},\"92\":{\"h\":\"Java实现\",\"t\":[\"这里使用数组实现模拟栈。\",\"首先定义一个ArrayStack 类，里面需要一个数组datas来存储所有数据，然后arraysize 用来记录目前栈占用的大小，size 记录目前栈中的元素个数。\",\"import java.util.Arrays; public class ArrayStack<T> { private Object[] datas; private int size, arraySize; }\",\"栈一般有五种操作：\",\"判断是否为空：isEmpty()\",\"压栈：push()\",\"弹出：pop()\",\"获取栈顶元素：top()\",\"获取栈中元素个数：size()\"]},\"93\":{\"h\":\"代码\",\"t\":[\"import java.util.Arrays; public class ArrayStack<T> { private Object[] datas; private int size, arraySize; public ArrayStack() { // 构造方法，默认栈的大小为2 this.datas = new Object[2]; this.size = 0; this.arraySize = 2; } public boolean isEmpty() { // 判断栈是否为空 if (this.size == 0) {return true;} else {return false;} } public void push(T value) { // 压栈 // 栈满了，把栈的空间扩至原先的两倍大 if (this.size == this.arraySize) { this.datas = Arrays.copyOf(this.datas, 2 * this.arraySize); this.arraySize *= 2; } this.datas[this.size++] = value; } public T pop() { // 弹出栈顶元素并返回元素值 // 栈为空无法弹出，返回null if (this.size == 0) {return null;} this.size--; return (T) this.datas[this.size]; } public T top() { // 返回栈顶元素 // 栈为空返回null if (this.size == 0) {return null;} return (T) this.datas[this.size - 1]; } public int size() { // 返回栈中元素个数 return this.size; } }\"]},\"94\":{\"h\":\"算法笔记(一)单调队列\",\"t\":[\"这是第一次写算法笔记，可能自己的表达能力有限，所以标准就降低一些，只是留给以后的自己看。先前学习这个算法的时候一直搞不明白，去网上扒了很多篇文章去学，后来明白以后才发现这个算法也挺简单的。\"]},\"95\":{\"h\":\"单调队列\"},\"96\":{\"h\":\"定义\",\"t\":[\"单调队列顾名思义，就是构建一个队列，使这个队列保持单调性，定义很简单对吧？就是类似下面这样一个队列：\",\"img\",\"用windows画图简单画的，很简陋不要吐槽。\",\"就像排队一样从高到低排，但是如果想要加入这个队列就只能从队头或者队尾进入，这是队列的特性。这里推荐一下我在别人博客见到的一句话，特别形象。\",\"如果一个选手比你小还比你强，你就可以退役了。——单调队列\",\"好了，定义解释清楚了之后我们来看看这么个队列有个什么用。下面是一道标准的滑动窗口问题。\"]},\"97\":{\"h\":\"例题分析\",\"t\":[\"题目来源 ：acwing154.滑动窗口\",\"给定一个大小为 的数组。有一个大小为 的滑动窗口，它从数组的最左边移动到最右边。你只能在窗口中看到 个数字。每次滑动窗口向右移动一个位置。\",\"以下是一个例子：\",\"该数组为 [1 3 -1 -3 5 3 6 7]， 为 。\",\"窗口位置\",\"最小值\",\"最大值\",\"[1 3 -1] -3 5 3 6 7\",\"-1\",\"3\",\"1 [3 -1 -3] 5 3 6 7\",\"-3\",\"3\",\"1 3 [-1 -3 5] 3 6 7\",\"-3\",\"5\",\"1 3 -1 [-3 5 3] 6 7\",\"-3\",\"5\",\"1 3 -1 -3 [5 3 6] 7\",\"3\",\"6\",\"1 3 -1 -3 5 [3 6 7]\",\"3\",\"7\",\"你的任务是确定滑动窗口位于每个位置时，窗口中的最大值和最小值。\"]},\"98\":{\"h\":\"输入格式\",\"t\":[\"输入包含两行。\",\"第一行包含两个整数 n 和k ，分别代表数组长度和滑动窗口的长度。第二行有 n 个整数，代表数组的具体数值。同行数据之间用空格隔开。\"]},\"99\":{\"h\":\"输出格式\",\"t\":[\"输出包含两个。\",\"第一行输出，从左至右，每个位置滑动窗口中的最小值。\",\"第二行输出，从左至右，每个位置滑动窗口中的最大值。\"]},\"100\":{\"h\":\"输入样例：\",\"t\":[\"8 3 1 3 -1 -3 5 3 6 7\"]},\"101\":{\"h\":\"输出样例：\",\"t\":[\"-1 -3 -3 -3 3 3 3 3 5 5 6 7\",\"我们常人解决这个问题，很简单对吧，不过是看一眼找到方框里哪个最大哪个最小就行了，但是我们看一下数据范围， ,判题机的运行速度一般在每秒 次左右。假如我们采用最朴素的方式，每次方框向前移动一格，就扫描一遍方框，从中选出最小的和最大的值，这样的算法时间复杂度大概是 ,在这里也即 ，那么在这里是必然会超时的。所以由此得知我们只能选用时间复杂度在 一下的算法。\",\"当然如果你是大佬，使用线段树、ST表算法（时间复杂度 过也是可以的，不过在这里有点大材小用了。\",\"因为我们使用单调队列算法的时间复杂度只有 ！\",\"代码层面也相对于那些算法更好写。下面我们来讲具体怎么使用单调队列。\"]},\"102\":{\"h\":\"具体实现\",\"t\":[\"首先我们使用一个数组来模拟一个双向队列：\",\"int head, tail, q[1000001];//q是队列 void maxn() { head=1;tail=0;//记录队头和队尾 for(int i=1;i<=n;i++)//对数组中每个元素进行处理 { //code } }\",\"我们发现一个性质：如果队列中存在两个元素，满足 a[i]a[j] 且 i < j，那么无论在什么时候我们都不会取 a[i] 作为最大值了，所以可以直接将 a[i] 删掉（也就是上面我推荐那一句名言)。此时队列中剩下的元素严格单调递增，队头就是其中的最大值，立刻就能找到。\",\"先把找最大值的代码放出来，下面对样例进行详细分析\",\"int head,tail,q[1000001]; int p[1000001],k,n,a[1000001]; /* 1.p用来存储队列中元素在原数组中的序号 2.a是原数组 */ void maxn() { head=1;tail=0;//记录队头和队尾 for(int i=1;i<=n;i++) { //假如队列还未清空并且新的所要被处理的元素比队尾的元素大 //则队尾元素无可能是最大值，弹出队尾，一直循环 while(head<=tail&&q[tail]<=a[i]) --tail;//从队尾出队； q[++tail]=a[i];//入队； p[tail]=i;//记录在原序列位置 while(p[head]<=i-k)//长度不超过k； head++; //输出队头元素，即为最大值。 if(i>=k) printf(\\\"%d \\\",q[head]); } putchar('\\\\n'); }\",\"一开始队中没有一个元素，我们让1入队，此时，q={1},p={1}。\",\"然后轮到3，我们需要思考：如果把3放进去，3有没有可能成为队列中最大的元素，显然现在队列中只有1,3比1大，3只要进去就是最大值，所以把1弹出3入队，此时，q={3},p={2}。\",\"接下来是-1，显然它比队列中所有元素（也就是3）要小，但是也不能排除以后的元素都比它还要小，等到3出队后它成为最大值的可能，所以这次不弹出元素，-1入队，此时，q={3,-1},p={2,3}。\",\"接下来是-3，和-1同理，比队列中所有元素（也就是3和-1）要小，但是它很靠前，所以入队，此时，q={3,-1,-3},q={2,3,4}。\",\"接下来是5，这就不一样了，假如要让5入队，那队列就会变成**{3,-1,-3,5}，此时我们发现，3已经不是最大值了，并且中间的-1和-3也不可能成为最大值了，**因此为了保持队列的单调性，我们要将队列中的元素从队尾挨个和5比较，如果比5小就弹出，所以处理后3,-1,-3被弹出，此时只剩下了5，q={5},p={5}。\",\"以此类推。。。。。\",\"另外，我们还要关注一下序列长度的问题，假如队列的元素达到k，队头元素也就是最大的元素会弹出队列中第二大的元素会成为新的队头。\",\"上述是求最大值大代码，求最小值的代码同理。\",\"下面是完整代码\",\"#include<bits/stdc++.h> using namespace std; int head,tail,q[1000001]; int p[1000001],k,n,a[1000001]; inline void maxn() { head=1;tail=0; for(int i=1;i<=n;i++) { while(head<=tail&&q[tail]<=a[i]) --tail; q[++tail]=a[i]; p[tail]=i; while(p[head]<=i-k) head++; if(i>=k) cout << q[head] << \\\" \\\"; } cout << endl; } inline void minn() { head=1;tail=0; for(int i=1;i<=n;i++) { while(head<=tail&&q[tail]>=a[i]) --tail; q[++tail]=a[i]; p[tail]=i; while(p[head]<=i-k) head++; if(i>=k) cout << q[head] << \\\" \\\"; } cout << endl; } int main() { cin >> n >> k; for(int i=1;i<=n;i++) cin >> a[i]; minn(); maxn(); return 0; }\",\"参考文章：\",\"https://zhuanlan.zhihu.com/p/346354943\"]},\"103\":{\"h\":\"算法笔记(二)排序算法\"},\"104\":{\"h\":\"说在前面的话\",\"t\":[\"在网上经常见到一句程序员对新入行的新人说的话：\",\"不要重复造轮子（Stop Trying to Reinvent the Wheel）\",\"造轮子的意思就是重新编写别人实现过的代码，一般来说这样会效率低下，耗时耗力写出来的程序还不一定比别人的好。我每次看到这句话总会被莫名戳中笑点，也不知道笑点到底在哪个地方。\",\"不过总的来说这句话对于大部分程序员是对的，毕竟对于现在那些大型软件，不可能要求一个程序员就把它完整的编写出来，对程序进行封装和打包，进行模块化编程才是王道。这样没人负责一个模块，不仅效率高，bug也好找。但是我觉得对于新入行的程序员，自己学习造一些轮子还是有很多帮助的，去了解那些程序底层的实现原理有助于开拓自己的思维。\"]},\"105\":{\"h\":\"排序算法分类\",\"t\":[\"排序算法（Sorting algorithm）大概分为三类：\",\"简单排序算法：插入排序、冒泡排序、选择排序\",\"复杂排序算法：快速排序(yyds)、归并排序\",\"特殊排序算法：基数排序(简称：鸡排基排)、堆排序、桶排序\"]},\"106\":{\"h\":\"算法性质\"},\"107\":{\"h\":\"稳定性\",\"t\":[\"稳定性是指相等的元素经过排序之后相对顺序是否发生了改变。\",\"拥有稳定性这一特性的算法会让原本有相等键值的纪录维持相对次序，即如果一个排序算法是稳定的，当有两个相等键值的纪录R和S，且在原本的列表中R出现在S之前，在排序过的列表中R也将会是在S之前。摘自OI Wiki\"]},\"108\":{\"h\":\"时间复杂度\",\"t\":[\"时间复杂度是定性描述算法的运行时间，不包括这个函数的低阶项和首项系数。\"]},\"109\":{\"h\":\"排序算法分析\"},\"110\":{\"h\":\"简单排序算法\"},\"111\":{\"h\":\"选择排序\",\"t\":[\"选择排序（Selection sort）是一种简单直观的排序算法。\",\"**原理：**每次遍历数组找出第i小的数然后与第i位交换位置。\",\"性质\",\"稳定性：由于swap函数的存在，选择排序是一种不稳定的算法。\",\"时间复杂度：稳定时间复杂度$O(n^2)$\",\"代码\",\"// C++ version void selection_sort(int* a, int n) { for (int i = 1; i < n; i++) { int min_num = i; for (int j = i + 1; j <= n; j++) { if (a[j] < a[min_num]) { min_num = j; } } std::swap(a[i], a[min_num]); } }\"]},\"112\":{\"h\":\"冒泡排序\",\"t\":[\"冒泡排序（Bubble sort）是一种简单直观的排序算法，执行过程中仿佛气泡一样，逐渐小的数飘到最前面，大的数冒到最后面。\",\"**原理：**每次检查相邻两个元素，如果逆序就交换这两个元素，直到数列有序。\",\"性质\",\"稳定性：冒泡排序很稳定。\",\"时间复杂度： \",\"最好情况：数列有序，只需检查一遍数组，时间复杂度$O(n)$\",\"最坏情况：时间复杂度为$O(n^2)$\",\"平均情况：时间复杂度为$O(n^2)$\",\"代码\",\"// C++ version void bubble_sort(int* a, int n) { bool flag = true; while (flag) { flag = false; for (int i = 1; i < n; i++) { if (a[i] > a[i + 1]) { flag = true; std::swap(a[i], a[i + 1]); } } } }\"]},\"113\":{\"h\":\"插入排序\",\"t\":[\"插入排序（Insertion sort）是一种简单直观的排序算法，就像打poker整理手牌一样。\",\"**原理：**将数组中的元素分为已排序和未排序两部分，每次将未排序中的一个元素插入到已排序的元素中正确的位置。\",\"性质\",\"稳定性：插入排序很稳定。\",\"时间复杂度： \",\"最好情况：数列有序，只需检查一遍数组，时间复杂度$O(n)$\",\"最坏情况：时间复杂度为$O(n^2)$\",\"平均情况：时间复杂度为$O(n^2)$\",\"代码\",\"// C++ Version void insertion_sort(int* a, int n) { // 对 a[1],a[2],...,a[n] 进行插入排序 for (int i = 2; i <= n; ++i) { int key = a[i]; int j = i - 1; while (j > 0 && a[j] > key) { a[j + 1] = a[j]; j--; } a[j + 1] = key; } }\"]},\"114\":{\"h\":\"复杂排序算法\"},\"115\":{\"h\":\"快速排序\",\"t\":[\"快速排序（Quicksort），又称分区交换排序（partition-exchange sort），简称快排，是一种被广泛运用的排序算法。\",\"原理：\",\"快速排序分为三个过程：\",\"将数列划分为两部分（要求保证相对大小关系）；\",\"递归到两个子序列中分别进行快速排序；\",\"不用合并，因为此时数列已经完全有序。\",\"和归并排序不同，第一步并不是直接分成前后两个序列，而是在分的过程中要保证相对大小关系。具体来说，第一步要是要把数列分成两个部分，然后保证前一个子数列中的数都小于后一个子数列中的数。为了保证平均时间复杂度，一般是随机选择一个数 来当做两个子数列的分界。\",\"之后，维护一前一后两个指针 和 ，依次考虑当前的数是否放在了应该放的位置（前还是后）。如果当前的数没放对，比如说如果后面的指针 遇到了一个比 小的数，那么可以交换 和 位置上的数，再把 向后移一位。当前的数的位置全放对后，再移动指针继续处理，直到两个指针相遇。\",\"其实，快速排序没有指定应如何具体实现第一步，不论是选择 的过程还是划分的过程，都有不止一种实现方法。\",\"第三步中的序列已经分别有序且第一个序列中的数都小于第二个数，所以直接拼接起来就好了。\"]},\"116\":{\"h\":\"归并排序\"},\"117\":{\"h\":\"特殊排序算法\"},\"118\":{\"h\":\"基数排序\"},\"119\":{\"h\":\"堆排序\"},\"120\":{\"h\":\"桶排序\"},\"121\":{\"h\":\"河北省赛赛后反思\"},\"122\":{\"h\":\"前言\",\"t\":[\"这次比赛打的真是艰难，赛前封校封教学楼导致连个比赛场地都申请不下来，最后好不容易才把宿舍的自习室申请下来的当场地了。赛前热身赛直接爆零,主办方在到时间之后十五分钟都没有把我们的登录申请通过，后来通过了习题集却没有题，之后草草放上去了几道巨难的题，我们直接爆零。比赛之前我又把自己学生证搞丢了，开打的时候就很难受。只能说疫情当下，大家都挺不容易的，本来我们就是打星参赛，但是感觉这场打的很难受。\"]},\"123\":{\"h\":\"反思\",\"t\":[\"赛时A了4题，排名100整，自我感觉上感觉发挥的是比较差的。\",\"首先开局看错签到题耽误了时间，其实也还好那时候排名还在前五十，但b题签到最后没有写出来。这就很亏了。其实签到题是D题，zzh还是非常给力的，我连题还没读明白他就给A了。然后又看到H也是一个签到题，我们就一起顺手把它A了。之后一直卡壳，裁纸游戏耽误了很多时间，一开始想复杂了，认为它是个dp题，直到后来认真分析了数据范围和大小，然后我突然来了点灵感才把它A了😓。\",\"筷子这一题真的是集全队之力（主要是每个人好像都会但是每个人思路又不太一样），一开始是感觉这个题巨难，然后又发现很多队都写出来了，然后又发现好像也不难，但是意见不是很统一，最后zzh上手写，调了一阵，过不了。然后发现，这题TM卡cin！！！，我们因为这个wa了两发（其实也有可能是我们算法的时间复杂度有点高，但也是O(n)算法呀）。\",\"生日蛋糕那一题也就是B题应该是可以写出来的，最后看出来规律的了，但是时间不太够了，代码没写出来。很可惜啊😭。\",\"A题严重低估难度了。\",\"当一个队友开始决定去写大模拟的时候，你们队就从此少了一个人。\",\"直到还剩两个小时的时候还很乐观，感觉这道题只是工作量大了点。直到zzh写完试样例的时候才发觉这道题不是简单的大模拟，还加了dp的buff，这道题真的严重浪费了很多很多的时间。(zzh想写大模拟，真是九头牛都拉不回来😥)\",\"希望以后写题之前得认真看懂题，看漏了是真的害人。\"]},\"124\":{\"c\":[\"题目记录\",\"竞赛\"]},\"125\":{\"h\":\"刷题日记day1-Flip Game\",\"t\":[\"做某个题单的第一道题，虽然没什么难度，但是还是十分考验码代码的能力的（很容易写出bug），不过还好，这次写的还是很顺利的。\"]},\"126\":{\"c\":[\"题目记录\",\"题单\"]},\"127\":{\"h\":\"刷题日记day10-Currency Exchange\",\"t\":[\"开始做图论的题了，第一天就有点难，贝尔曼福特算法已经忘光光了。\",\"今天去和lxc他们玩了一晚上桌游，很开心捏😘\"]},\"128\":{\"h\":\"刷题日记day11-Wormholes\",\"t\":[\"开始做图论的题的第二天，今天打icpc真难，不过还好手速快，过了三题，但是队伍排名还在800名左右，仰望hpy大佬。\",\"今天这一题做个简单的Floyd算法安慰一下我的心灵。\"]},\"129\":{\"h\":\"刷题日记day12-Balance\",\"t\":[\"今天做一道简单的dp题，因为临近CCPC省赛，根据往年的情况到时候大概率碰到很多dp题和数据结构，还有大模拟，所以加紧复习一下dp，虽然dp真的好难😂。\"]},\"130\":{\"h\":\"刷题日记day13-Cash Machine\",\"t\":[\"本来是一道简单的题，但是我忘了怎么做了，耽误了很多时间，麻了。\",\"今天跑了好几公里，感觉还行，至少比以前身体好点了。\"]},\"131\":{\"h\":\"刷题日记day14-The Cow Lexicon\",\"t\":[\"又是水题，但是我叕写了很长时间，ε=(´ο｀*)))唉，真是太粗心了，一直没debug出来，犯了很多低级错误。\"]},\"132\":{\"h\":\"刷题日记day15-Alignment\",\"t\":[\"最大上升子序列模板题。\"]},\"133\":{\"h\":\"刷题日记day16-Code\",\"t\":[\"纯纯的数学题，我是一点都不会啊，我就高中的数学水平，还真看不出来这是组合数。最后去网上找了体解才搞懂。呜呜呜~~~\"]},\"134\":{\"h\":\"刷题日记day2-The Pilots Brothers' refrigerator\",\"t\":[\"今天来开开心心的做第二道题喽。\"]},\"135\":{\"c\":[\"题目记录\",\"题单\"]},\"136\":{\"h\":\"刷题日记day3-Radar Installation\",\"t\":[\"今天被突然到来的一场icpc网络赛打蒙了，一下午罚坐了5个小时，现在腰还是痛的，简直就是坐大牢。\",\"今天练得题还是比较简单。\"]},\"137\":{\"c\":[\"题目记录\",\"题单\"]},\"138\":{\"h\":\"刷题日记day4-Power of Cryptography\",\"t\":[\"建议先看思路，再看代码，这题有亿点简单，但是容易想歪，比如说我。\",\"写之前千万别看评论区，不然评论区有答案就没意思了。\"]},\"139\":{\"h\":\"刷题日记day5-Y2K Accounting Bug\",\"t\":[\"今天做核酸，租空调，坐了某lxc的非主流摩托车，感觉摩托是真的爽。🚀\",\"这一题好像是关于千年虫病毒的吧（虽然题目和故事一点关系都没有😂）\"]},\"140\":{\"h\":\"刷题日记day6-Tautology\",\"t\":[\"电路真的好难，学不会了。不过今天新生来了还挺热闹的，回忆起了当初我刚来的时候。\",\"这道题挺简单的，如果没见过使用栈来进行运算的题，可以见识一下这道题。\"]},\"141\":{\"h\":\"刷题日记day7-Parencodings\",\"t\":[\"今天没什么新鲜事儿，只觉得很瞌睡😪，好无聊啊！😢\",\"买了几个挂钩，还想买把椅子。\",\"这个题数据量很小，很简单的题。\"]},\"142\":{\"h\":\"刷题日记day8-Crashing Robots\",\"t\":[\"今天第一次跑了六公里，累了个半死。给自己的手机买了个钢化膜，贴上后触控不灵敏了，好难受。不过这个膜才9块9，没有想象中的翘边，也挺好的，就是指纹解锁变慢了，上划返回桌面也不灵了，几次才能成功一次。\",\"这道题很简单，纯模拟。\"]},\"143\":{\"h\":\"刷题日记day9-Robot Motion\",\"t\":[\"今天斥巨资47元买了个好一点的枕头，pdd有的时候真的挺便宜的，不知道为啥，最近感觉自己觉醒了勤俭持家的本能，买什么都悠着点。\",\"这道题也很简单，大概是纯模拟。\"]},\"144\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"145\":{\"h\":\"生活\"},\"146\":{\"h\":\"Posts\"},\"147\":{\"h\":\"项目\"},\"148\":{\"h\":\"探索\"},\"149\":{\"h\":\"笔记\"},\"150\":{\"h\":\"数据结构\"},\"151\":{\"h\":\"算法\"},\"152\":{\"h\":\"比赛\"},\"153\":{\"h\":\"编码训练\"},\"154\":{\"h\":\"训练\"}},\"dirtCount\":0,\"index\":[[\"训练\",{\"0\":{\"154\":1}}],[\"训练了一年半了\",{\"1\":{\"33\":1}}],[\"编码训练\",{\"0\":{\"153\":1}}],[\"编辑此页链接\",{\"1\":{\"4\":1}}],[\"笔记\",{\"0\":{\"149\":1}}],[\"探索\",{\"0\":{\"148\":1}}],[\"项目\",{\"0\":{\"147\":1}}],[\"买什么都悠着点\",{\"1\":{\"143\":1}}],[\"买了几个挂钩\",{\"1\":{\"141\":1}}],[\"纯模拟\",{\"1\":{\"142\":1}}],[\"纯纯的数学题\",{\"1\":{\"133\":1}}],[\"几次才能成功一次\",{\"1\":{\"142\":1}}],[\"贴上后触控不灵敏了\",{\"1\":{\"142\":1}}],[\"累了个半死\",{\"1\":{\"142\":1}}],[\"😢\",{\"1\":{\"141\":1}}],[\"🚀\",{\"1\":{\"139\":1}}],[\"回忆起了当初我刚来的时候\",{\"1\":{\"140\":1}}],[\"学不会了\",{\"1\":{\"140\":1}}],[\"学习相关的事情也是尽量跟上\",{\"1\":{\"33\":1}}],[\"电路真的好难\",{\"1\":{\"140\":1}}],[\"坐了某lxc的非主流摩托车\",{\"1\":{\"139\":1}}],[\"租空调\",{\"1\":{\"139\":1}}],[\"建议先看思路\",{\"1\":{\"138\":1}}],[\"犯了很多低级错误\",{\"1\":{\"131\":1}}],[\"真是太粗心了\",{\"1\":{\"131\":1}}],[\"真是九头牛都拉不回来😥\",{\"1\":{\"123\":1}}],[\"唉\",{\"1\":{\"131\":1}}],[\"´ο｀\",{\"1\":{\"131\":1}}],[\"ε=\",{\"1\":{\"131\":1}}],[\"至少比以前身体好点了\",{\"1\":{\"130\":1}}],[\"麻了\",{\"1\":{\"130\":1}}],[\"耽误了很多时间\",{\"1\":{\"130\":1}}],[\"根据往年的情况到时候大概率碰到很多dp题和数据结构\",{\"1\":{\"129\":1}}],[\"根据状态画出游戏的界面\",{\"1\":{\"51\":2}}],[\"仰望hpy大佬\",{\"1\":{\"128\":1}}],[\"今天斥巨资47元买了个好一点的枕头\",{\"1\":{\"143\":1}}],[\"今天第一次跑了六公里\",{\"1\":{\"142\":1}}],[\"今天没什么新鲜事儿\",{\"1\":{\"141\":1}}],[\"今天做核酸\",{\"1\":{\"139\":1}}],[\"今天做一道简单的dp题\",{\"1\":{\"129\":1}}],[\"今天练得题还是比较简单\",{\"1\":{\"136\":1}}],[\"今天被突然到来的一场icpc网络赛打蒙了\",{\"1\":{\"136\":1}}],[\"今天来开开心心的做第二道题喽\",{\"1\":{\"134\":1}}],[\"今天跑了好几公里\",{\"1\":{\"130\":1}}],[\"今天这一题做个简单的floyd算法安慰一下我的心灵\",{\"1\":{\"128\":1}}],[\"今天打icpc真难\",{\"1\":{\"128\":1}}],[\"今天去和lxc他们玩了一晚上桌游\",{\"1\":{\"127\":1}}],[\"贝尔曼福特算法已经忘光光了\",{\"1\":{\"127\":1}}],[\"开始做图论的题的第二天\",{\"1\":{\"128\":1}}],[\"开始做图论的题了\",{\"1\":{\"127\":1}}],[\"开打的时候就很难受\",{\"1\":{\"122\":1}}],[\"题单\",{\"2\":{\"126\":1,\"135\":1,\"137\":1}}],[\"题目记录\",{\"2\":{\"124\":1,\"126\":1,\"135\":1,\"137\":1}}],[\"题目来源\",{\"1\":{\"97\":1}}],[\"做某个题单的第一道题\",{\"1\":{\"125\":1}}],[\"刷题日记day9\",{\"0\":{\"143\":1}}],[\"刷题日记day8\",{\"0\":{\"142\":1}}],[\"刷题日记day7\",{\"0\":{\"141\":1}}],[\"刷题日记day6\",{\"0\":{\"140\":1}}],[\"刷题日记day5\",{\"0\":{\"139\":1}}],[\"刷题日记day4\",{\"0\":{\"138\":1}}],[\"刷题日记day3\",{\"0\":{\"136\":1}}],[\"刷题日记day2\",{\"0\":{\"134\":1}}],[\"刷题日记day16\",{\"0\":{\"133\":1}}],[\"刷题日记day15\",{\"0\":{\"132\":1}}],[\"刷题日记day14\",{\"0\":{\"131\":1}}],[\"刷题日记day13\",{\"0\":{\"130\":1}}],[\"刷题日记day12\",{\"0\":{\"129\":1}}],[\"刷题日记day11\",{\"0\":{\"128\":1}}],[\"刷题日记day10\",{\"0\":{\"127\":1}}],[\"刷题日记day1\",{\"0\":{\"125\":1}}],[\"刷新画面\",{\"1\":{\"78\":1}}],[\"竞赛\",{\"2\":{\"124\":1}}],[\"希望以后写题之前得认真看懂题\",{\"1\":{\"123\":1}}],[\"很开心捏😘\",{\"1\":{\"127\":1}}],[\"很容易写出bug\",{\"1\":{\"125\":1}}],[\"很可惜啊😭\",{\"1\":{\"123\":1}}],[\"很简单的题\",{\"1\":{\"141\":1}}],[\"很简单对吧\",{\"1\":{\"101\":1}}],[\"很简陋不要吐槽\",{\"1\":{\"96\":1}}],[\"生活\",{\"0\":{\"145\":1}}],[\"生日蛋糕那一题也就是b题应该是可以写出来的\",{\"1\":{\"123\":1}}],[\"生成的特殊字典里\",{\"1\":{\"39\":1}}],[\"调了一阵\",{\"1\":{\"123\":1}}],[\"筷子这一题真的是集全队之力\",{\"1\":{\"123\":1}}],[\"认为它是个dp题\",{\"1\":{\"123\":1}}],[\"裁纸游戏耽误了很多时间\",{\"1\":{\"123\":1}}],[\"自我感觉上感觉发挥的是比较差的\",{\"1\":{\"123\":1}}],[\"自己学习造一些轮子还是有很多帮助的\",{\"1\":{\"104\":1}}],[\"自己的计划几乎被打乱了\",{\"1\":{\"33\":1}}],[\"排名100整\",{\"1\":{\"123\":1}}],[\"排序算法分析\",{\"0\":{\"109\":1}}],[\"排序算法分类\",{\"0\":{\"105\":1}}],[\"排序算法\",{\"0\":{\"103\":1},\"1\":{\"105\":1}}],[\"赛时a了4题\",{\"1\":{\"123\":1}}],[\"赛前热身赛直接爆零\",{\"1\":{\"122\":1}}],[\"赛前封校封教学楼导致连个比赛场地都申请不下来\",{\"1\":{\"122\":1}}],[\"反思\",{\"0\":{\"123\":1}}],[\"本来是一道简单的题\",{\"1\":{\"130\":1}}],[\"本来我们就是打星参赛\",{\"1\":{\"122\":1}}],[\"本页面就是一个示例\",{\"1\":{\"4\":1}}],[\"河北省赛赛后反思\",{\"0\":{\"121\":1}}],[\"河南省赛\",{\"1\":{\"33\":1}}],[\"都有不止一种实现方法\",{\"1\":{\"115\":1}}],[\"都是写代码\",{\"1\":{\"52\":1}}],[\"再看代码\",{\"1\":{\"138\":1}}],[\"再移动指针继续处理\",{\"1\":{\"115\":1}}],[\"再把\",{\"1\":{\"115\":1}}],[\"位置上的数\",{\"1\":{\"115\":1}}],[\"小的数\",{\"1\":{\"115\":1}}],[\"遇到了一个比\",{\"1\":{\"115\":1}}],[\"比赛\",{\"0\":{\"152\":1}}],[\"比赛之前我又把自己学生证搞丢了\",{\"1\":{\"122\":1}}],[\"比如说我\",{\"1\":{\"138\":1}}],[\"比如说如果后面的指针\",{\"1\":{\"115\":1}}],[\"比队列中所有元素\",{\"1\":{\"102\":1}}],[\"前言\",{\"0\":{\"122\":1}}],[\"前还是后\",{\"1\":{\"115\":1}}],[\"前面顺顺利利\",{\"1\":{\"52\":1}}],[\"依次考虑当前的数是否放在了应该放的位置\",{\"1\":{\"115\":1}}],[\"维护一前一后两个指针\",{\"1\":{\"115\":1}}],[\"之后一直卡壳\",{\"1\":{\"123\":1}}],[\"之后草草放上去了几道巨难的题\",{\"1\":{\"122\":1}}],[\"之后\",{\"1\":{\"115\":1}}],[\"具体来说\",{\"1\":{\"115\":1}}],[\"具体实现\",{\"0\":{\"102\":1}}],[\"而是在分的过程中要保证相对大小关系\",{\"1\":{\"115\":1}}],[\"而且如果明年拿不到奖牌\",{\"1\":{\"33\":1}}],[\"而且有免费的饭菜\",{\"1\":{\"33\":1}}],[\"递归到两个子序列中分别进行快速排序\",{\"1\":{\"115\":1}}],[\"平均情况\",{\"1\":{\"112\":1,\"113\":1}}],[\"平时正常上课的时候我也认为去教室上课不如自学\",{\"1\":{\"33\":1}}],[\"数据结构\",{\"0\":{\"150\":1}}],[\"数列有序\",{\"1\":{\"112\":1,\"113\":1}}],[\"数值\",{\"1\":{\"38\":1}}],[\"逐渐小的数飘到最前面\",{\"1\":{\"112\":1}}],[\"执行过程中仿佛气泡一样\",{\"1\":{\"112\":1}}],[\"执行对应函数\",{\"1\":{\"49\":1}}],[\"$\",{\"1\":{\"111\":1,\"112\":3,\"113\":3}}],[\"$$\",{\"1\":{\"19\":2}}],[\"稳定时间复杂度$o\",{\"1\":{\"111\":1}}],[\"稳定性是指相等的元素经过排序之后相对顺序是否发生了改变\",{\"1\":{\"107\":1}}],[\"稳定性\",{\"0\":{\"107\":1},\"1\":{\"111\":1,\"112\":1,\"113\":1}}],[\"由于swap函数的存在\",{\"1\":{\"111\":1}}],[\"性质\",{\"1\":{\"111\":1,\"112\":1,\"113\":1}}],[\"原理\",{\"1\":{\"111\":1,\"112\":1,\"113\":1,\"115\":1}}],[\"摘自oi\",{\"1\":{\"107\":1}}],[\"拥有稳定性这一特性的算法会让原本有相等键值的纪录维持相对次序\",{\"1\":{\"107\":1}}],[\"拥有自己的小站并且可以在上面发布自己的文章\",{\"1\":{\"1\":1}}],[\"桶排序\",{\"0\":{\"120\":1},\"1\":{\"105\":1}}],[\"堆排序\",{\"0\":{\"119\":1},\"1\":{\"105\":1}}],[\"鸡排基排\",{\"1\":{\"105\":1}}],[\"简直就是坐大牢\",{\"1\":{\"136\":1}}],[\"简称快排\",{\"1\":{\"115\":1}}],[\"简称\",{\"1\":{\"105\":1}}],[\"简单排序算法\",{\"0\":{\"110\":1},\"1\":{\"105\":1}}],[\"特殊排序算法\",{\"0\":{\"117\":1},\"1\":{\"105\":1}}],[\"特别形象\",{\"1\":{\"96\":1}}],[\"归并排序\",{\"0\":{\"116\":1},\"1\":{\"105\":1}}],[\"快速排序没有指定应如何具体实现第一步\",{\"1\":{\"115\":1}}],[\"快速排序分为三个过程\",{\"1\":{\"115\":1}}],[\"快速排序\",{\"0\":{\"115\":1},\"1\":{\"105\":1,\"115\":1}}],[\"复杂排序算法\",{\"0\":{\"114\":1},\"1\":{\"105\":1}}],[\"冒泡排序很稳定\",{\"1\":{\"112\":1}}],[\"冒泡排序\",{\"0\":{\"112\":1},\"1\":{\"105\":1,\"112\":1}}],[\"插入排序很稳定\",{\"1\":{\"113\":1}}],[\"插入排序\",{\"0\":{\"113\":1},\"1\":{\"105\":1,\"113\":1}}],[\"插件\",{\"1\":{\"15\":1}}],[\"插件来实现\",{\"1\":{\"13\":1}}],[\"去了解那些程序底层的实现原理有助于开拓自己的思维\",{\"1\":{\"104\":1}}],[\"去网上扒了很多篇文章去学\",{\"1\":{\"94\":1}}],[\"进行插入排序\",{\"1\":{\"113\":1}}],[\"进行模块化编程才是王道\",{\"1\":{\"104\":1}}],[\"进行引用\",{\"1\":{\"29\":1}}],[\"毕竟对于现在那些大型软件\",{\"1\":{\"104\":1}}],[\"毕竟大学上网课\",{\"1\":{\"33\":1}}],[\"耗时耗力写出来的程序还不一定比别人的好\",{\"1\":{\"104\":1}}],[\"造轮子的意思就是重新编写别人实现过的代码\",{\"1\":{\"104\":1}}],[\"说在前面的话\",{\"0\":{\"104\":1}}],[\"二\",{\"0\":{\"103\":1}}],[\"zzh想写大模拟\",{\"1\":{\"123\":1}}],[\"zzh还是非常给力的\",{\"1\":{\"123\":1}}],[\"zhihu\",{\"1\":{\"102\":1}}],[\"zhuanlan\",{\"1\":{\"102\":1}}],[\"zip\",{\"1\":{\"38\":1,\"46\":2,\"54\":1,\"58\":1,\"71\":1}}],[\"参考文章\",{\"1\":{\"102\":1}}],[\"参数为一个方向\",{\"1\":{\"82\":1}}],[\"参数表示绘画的窗体对象\",{\"1\":{\"50\":1}}],[\"参数是\",{\"1\":{\"39\":1}}],[\"求最小值的代码同理\",{\"1\":{\"102\":1}}],[\"队头元素也就是最大的元素会弹出队列中第二大的元素会成为新的队头\",{\"1\":{\"102\":1}}],[\"队头就是其中的最大值\",{\"1\":{\"102\":1}}],[\"另外\",{\"1\":{\"102\":1}}],[\"并且中间的\",{\"1\":{\"102\":1}}],[\"并在列表生成式中将二维数组变成一个以\",{\"1\":{\"43\":1}}],[\"并在这个位置上随机生成一个\",{\"1\":{\"43\":1}}],[\"要求保证相对大小关系\",{\"1\":{\"115\":1}}],[\"要小\",{\"1\":{\"102\":2}}],[\"要使用此布局\",{\"1\":{\"0\":1}}],[\"显然它比队列中所有元素\",{\"1\":{\"102\":1}}],[\"显然现在队列中只有1\",{\"1\":{\"102\":1}}],[\"显示游戏画面\",{\"1\":{\"78\":1}}],[\"即如果一个排序算法是稳定的\",{\"1\":{\"107\":1}}],[\"即为最大值\",{\"1\":{\"102\":1}}],[\"即字符在输入时就可以使用\",{\"1\":{\"51\":1}}],[\"即字典\",{\"1\":{\"49\":1}}],[\"长度不超过k\",{\"1\":{\"102\":1}}],[\"入队\",{\"1\":{\"102\":1}}],[\"入栈或压栈\",{\"1\":{\"91\":1}}],[\"则队尾元素无可能是最大值\",{\"1\":{\"102\":1}}],[\"假如队列的元素达到k\",{\"1\":{\"102\":1}}],[\"假如队列还未清空并且新的所要被处理的元素比队尾的元素大\",{\"1\":{\"102\":1}}],[\"假如要让5入队\",{\"1\":{\"102\":1}}],[\"假如我们采用最朴素的方式\",{\"1\":{\"101\":1}}],[\"k\",{\"1\":{\"102\":6}}],[\"keyboard\",{\"1\":{\"40\":2}}],[\"keyaction\",{\"1\":{\"39\":1}}],[\"key\",{\"1\":{\"36\":1,\"39\":3,\"47\":3,\"113\":3}}],[\"立刻就能找到\",{\"1\":{\"102\":1}}],[\"此时只剩下了5\",{\"1\":{\"102\":1}}],[\"此时我们发现\",{\"1\":{\"102\":1}}],[\"此时\",{\"1\":{\"102\":4}}],[\"此时队列中剩下的元素严格单调递增\",{\"1\":{\"102\":1}}],[\"此文章暂时咕咕咕咕\",{\"1\":{\"89\":1}}],[\"此文字有脚注^first\",{\"1\":{\"17\":1}}],[\"删掉\",{\"1\":{\"102\":1}}],[\"且在原本的列表中r出现在s之前\",{\"1\":{\"107\":1}}],[\"且\",{\"1\":{\"102\":1}}],[\"满足\",{\"1\":{\"102\":1}}],[\"记录在原序列位置\",{\"1\":{\"102\":1}}],[\"记录队头和队尾\",{\"1\":{\"102\":2}}],[\"记录目前栈中的元素个数\",{\"1\":{\"92\":1}}],[\"过了三题\",{\"1\":{\"128\":1}}],[\"过不了\",{\"1\":{\"123\":1}}],[\"过也是可以的\",{\"1\":{\"101\":1}}],[\"过关分数\",{\"1\":{\"41\":1}}],[\"时间复杂度为$o\",{\"1\":{\"112\":2,\"113\":2}}],[\"时间复杂度$o\",{\"1\":{\"112\":1,\"113\":1}}],[\"时间复杂度是定性描述算法的运行时间\",{\"1\":{\"108\":1}}],[\"时间复杂度\",{\"0\":{\"108\":1},\"1\":{\"101\":1,\"111\":1,\"112\":1,\"113\":1}}],[\"时会执行\",{\"1\":{\"39\":1}}],[\"次左右\",{\"1\":{\"101\":1}}],[\"判题机的运行速度一般在每秒\",{\"1\":{\"101\":1}}],[\"判断栈是否为空\",{\"1\":{\"93\":1}}],[\"判断是否为空\",{\"1\":{\"92\":1}}],[\"判断是否可以移动函数\",{\"1\":{\"82\":1}}],[\"判断是重启游戏还是结束游戏\",{\"1\":{\"39\":1,\"51\":1}}],[\"判断游戏是否获胜\",{\"1\":{\"80\":1}}],[\"判断能不能向左移动\",{\"1\":{\"67\":1}}],[\"判断能否向左划\",{\"1\":{\"67\":1,\"71\":1}}],[\"判断能否向这个方向移动\",{\"1\":{\"49\":1}}],[\"判断能否移动\",{\"0\":{\"49\":1}}],[\"判断矩阵每一行有没有可以右移动的元素\",{\"1\":{\"49\":1}}],[\"判断矩阵每一行有没有可以左移动的元素\",{\"1\":{\"49\":1}}],[\"判断一行里面能否有元素进行左移动或合并\",{\"1\":{\"49\":1}}],[\"判断输赢\",{\"0\":{\"48\":1}}],[\"判断棋盘操作是否存在且可行\",{\"1\":{\"47\":1}}],[\"判断邻近元素能否合并\",{\"1\":{\"45\":1}}],[\"输出队头元素\",{\"1\":{\"102\":1}}],[\"输出样例\",{\"0\":{\"101\":1}}],[\"输出包含两个\",{\"1\":{\"99\":1}}],[\"输出格式\",{\"0\":{\"99\":1}}],[\"输入样例\",{\"0\":{\"100\":1}}],[\"输入包含两行\",{\"1\":{\"98\":1}}],[\"输入格式\",{\"0\":{\"98\":1}}],[\"同行数据之间用空格隔开\",{\"1\":{\"98\":1}}],[\"同时排除掉非零的位置\",{\"1\":{\"43\":1}}],[\"同时每个页面包含\",{\"1\":{\"7\":1}}],[\"代表数组的具体数值\",{\"1\":{\"98\":1}}],[\"代码没写出来\",{\"1\":{\"123\":1}}],[\"代码层面也相对于那些算法更好写\",{\"1\":{\"101\":1}}],[\"代码\",{\"0\":{\"93\":1},\"1\":{\"111\":1,\"112\":1,\"113\":1}}],[\"个整数\",{\"1\":{\"98\":1}}],[\"个数字\",{\"1\":{\"97\":1}}],[\"第三步中的序列已经分别有序且第一个序列中的数都小于第二个数\",{\"1\":{\"115\":1}}],[\"第一天就有点难\",{\"1\":{\"127\":1}}],[\"第一步要是要把数列分成两个部分\",{\"1\":{\"115\":1}}],[\"第一步并不是直接分成前后两个序列\",{\"1\":{\"115\":1}}],[\"第一行输出\",{\"1\":{\"99\":1}}],[\"第一行包含两个整数\",{\"1\":{\"98\":1}}],[\"第二行输出\",{\"1\":{\"99\":1}}],[\"第二行有\",{\"1\":{\"98\":1}}],[\"分别代表数组长度和滑动窗口的长度\",{\"1\":{\"98\":1}}],[\"分类为\",{\"1\":{\"28\":1}}],[\"窗口中的最大值和最小值\",{\"1\":{\"97\":1}}],[\"窗口位置\",{\"1\":{\"97\":1}}],[\"7\",{\"1\":{\"97\":8,\"100\":1,\"101\":1}}],[\"7个名额\",{\"1\":{\"33\":1}}],[\"346354943\",{\"1\":{\"102\":1}}],[\"3被弹出\",{\"1\":{\"102\":1}}],[\"3也不可能成为最大值了\",{\"1\":{\"102\":1}}],[\"3已经不是最大值了\",{\"1\":{\"102\":1}}],[\"3只要进去就是最大值\",{\"1\":{\"102\":1}}],[\"3比1大\",{\"1\":{\"102\":1}}],[\"3有没有可能成为队列中最大的元素\",{\"1\":{\"102\":1}}],[\"3\",{\"1\":{\"97\":28,\"100\":4,\"101\":7,\"102\":9}}],[\"3e0594757ea2535b5aeb9611fde91794c2cd3dd4ea4f3312d\",{\"1\":{\"33\":1}}],[\"该数组为\",{\"1\":{\"97\":1}}],[\"给自己的手机买了个钢化膜\",{\"1\":{\"142\":1}}],[\"给定一个大小为\",{\"1\":{\"97\":1}}],[\"给新列表后面补零\",{\"1\":{\"45\":1}}],[\"滑动窗口\",{\"1\":{\"97\":1}}],[\"例题分析\",{\"0\":{\"97\":1}}],[\"后来通过了习题集却没有题\",{\"1\":{\"122\":1}}],[\"后来明白以后才发现这个算法也挺简单的\",{\"1\":{\"94\":1}}],[\"后的元素在\",{\"1\":{\"45\":1}}],[\"单调队列顾名思义\",{\"1\":{\"96\":1}}],[\"单调队列\",{\"0\":{\"94\":1,\"95\":1},\"1\":{\"96\":1}}],[\"默认栈的大小为2\",{\"1\":{\"93\":1}}],[\"默认是最经典的\",{\"1\":{\"41\":1}}],[\"构造方法\",{\"1\":{\"93\":1}}],[\"弹出队尾\",{\"1\":{\"102\":1}}],[\"弹出栈顶元素并返回元素值\",{\"1\":{\"93\":1}}],[\"弹出\",{\"1\":{\"92\":1}}],[\"压栈\",{\"1\":{\"92\":1,\"93\":1}}],[\"类\",{\"1\":{\"92\":1}}],[\"类型\",{\"1\":{\"39\":1}}],[\"总而言之\",{\"1\":{\"91\":1}}],[\"限定仅在表尾进行插入和删除操作的线性表\",{\"1\":{\"91\":1}}],[\"又是水题\",{\"1\":{\"131\":1}}],[\"又称分区交换排序\",{\"1\":{\"115\":1}}],[\"又名堆栈\",{\"1\":{\"91\":1}}],[\"又进步了一点点吧\",{\"1\":{\"1\":1}}],[\"栈为空返回null\",{\"1\":{\"93\":1}}],[\"栈为空无法弹出\",{\"1\":{\"93\":1}}],[\"栈满了\",{\"1\":{\"93\":1}}],[\"栈一般有五种操作\",{\"1\":{\"92\":1}}],[\"栈就像一个桶\",{\"1\":{\"91\":1}}],[\"栈\",{\"0\":{\"91\":1},\"1\":{\"91\":1}}],[\"话不多说有时间再好好聊聊\",{\"1\":{\"90\":1}}],[\"感觉摩托是真的爽\",{\"1\":{\"139\":1}}],[\"感觉还行\",{\"1\":{\"130\":1}}],[\"感觉这道题只是工作量大了点\",{\"1\":{\"123\":1}}],[\"感觉比我自己半个月学的都多\",{\"1\":{\"90\":1}}],[\"感觉队友们都很默契啊\",{\"1\":{\"1\":1}}],[\"各种库的调用\",{\"1\":{\"90\":1}}],[\"各种技术应用\",{\"1\":{\"90\":1}}],[\"也挺好的\",{\"1\":{\"142\":1}}],[\"也不知道笑点到底在哪个地方\",{\"1\":{\"104\":1}}],[\"也就是3和\",{\"1\":{\"102\":1}}],[\"也就是3\",{\"1\":{\"102\":1}}],[\"也就是上面我推荐那一句名言\",{\"1\":{\"102\":1}}],[\"也就是说\",{\"1\":{\"39\":1}}],[\"也没用\",{\"1\":{\"90\":1}}],[\"也没证书\",{\"1\":{\"90\":1}}],[\"像下面这个例子\",{\"1\":{\"89\":1}}],[\"指向当前对象\",{\"1\":{\"89\":1}}],[\"指南\",{\"2\":{\"8\":1}}],[\"它从数组的最左边移动到最右边\",{\"1\":{\"97\":1}}],[\"它是把栈顶元素删除掉\",{\"1\":{\"91\":1}}],[\"它是把新元素放到栈顶元素的上面\",{\"1\":{\"91\":1}}],[\"它是一种运算受限的线性表\",{\"1\":{\"91\":1}}],[\"它是一个const指针\",{\"1\":{\"89\":1}}],[\"它的主要作用是将棋盘所有位置元素复原为\",{\"1\":{\"44\":1}}],[\"它的\",{\"1\":{\"39\":1}}],[\"定义解释清楚了之后我们来看看这么个队列有个什么用\",{\"1\":{\"96\":1}}],[\"定义很简单对吧\",{\"1\":{\"96\":1}}],[\"定义\",{\"0\":{\"96\":1},\"1\":{\"89\":1}}],[\"控制游戏的重启和结束以及操作\",{\"1\":{\"84\":1}}],[\"获取栈中元素个数\",{\"1\":{\"92\":1}}],[\"获取栈顶元素\",{\"1\":{\"92\":1}}],[\"获取action判断能否移动\",{\"1\":{\"79\":1}}],[\"获胜则结束游戏\",{\"1\":{\"80\":1}}],[\"获得有效键值列表\",{\"1\":{\"38\":1}}],[\"操作函数\",{\"1\":{\"79\":1}}],[\"操作是否存在\",{\"1\":{\"47\":1}}],[\"全部重新开始\",{\"1\":{\"77\":1}}],[\"画格子的横线和文字数字\",{\"1\":{\"75\":1}}],[\"画格子的竖线\",{\"1\":{\"74\":1}}],[\"画出当前棋盘状态\",{\"1\":{\"39\":1}}],[\"提示文字\",{\"1\":{\"72\":1}}],[\"提供了一个字典的子类\",{\"1\":{\"36\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"15\":1}}],[\"包括游戏运行的流程控制状态机\",{\"1\":{\"76\":1}}],[\"包括棋盘和方块数值\",{\"1\":{\"72\":1}}],[\"包括上下左右移动和重新开始\",{\"1\":{\"55\":1}}],[\"向后移一位\",{\"1\":{\"115\":1}}],[\"向一个栈插入新元素又称作进栈\",{\"1\":{\"91\":1}}],[\"向下划\",{\"1\":{\"66\":1,\"71\":1}}],[\"向上划\",{\"1\":{\"65\":1,\"71\":1}}],[\"向右划\",{\"1\":{\"64\":1,\"71\":1}}],[\"向左划\",{\"1\":{\"63\":1,\"71\":2}}],[\"计算方块的数值\",{\"1\":{\"60\":1}}],[\"计划\",{\"1\":{\"20\":2}}],[\"添加随机方块\",{\"1\":{\"57\":1}}],[\"重新开始和清零\",{\"1\":{\"56\":1,\"71\":1}}],[\"重置游戏\",{\"1\":{\"77\":1}}],[\"重置游戏棋盘\",{\"1\":{\"51\":1}}],[\"重置棋盘\",{\"0\":{\"44\":1}}],[\"重置\",{\"1\":{\"38\":1}}],[\"变成空棋盘后加入两个随机方块\",{\"1\":{\"56\":1}}],[\"体现面向对象的编程方法\",{\"1\":{\"54\":1}}],[\"面向对象重构\",{\"0\":{\"53\":1}}],[\"某些操作会导致程序报错\",{\"1\":{\"52\":1}}],[\"其实也有可能是我们算法的时间复杂度有点高\",{\"1\":{\"123\":1}}],[\"其实也还好那时候排名还在前五十\",{\"1\":{\"123\":1}}],[\"其实签到题是d题\",{\"1\":{\"123\":1}}],[\"其实\",{\"1\":{\"115\":1}}],[\"其实并没有完美运行\",{\"1\":{\"52\":1}}],[\"其实这些还不是最重要的\",{\"1\":{\"33\":1}}],[\"查了一下百度\",{\"1\":{\"52\":1}}],[\"查看详情\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1}}],[\"好难受\",{\"1\":{\"142\":1}}],[\"好无聊啊\",{\"1\":{\"141\":1}}],[\"好了\",{\"1\":{\"96\":1}}],[\"好像是因为curses库只支持linux\",{\"1\":{\"52\":1}}],[\"好像前面也不太可能出问题\",{\"1\":{\"52\":1}}],[\"好想回到没有疫情的时候啊\",{\"1\":{\"33\":1}}],[\"偏偏到运行这一步出了问题\",{\"1\":{\"52\":1}}],[\"运行游戏的主逻辑类\",{\"1\":{\"76\":1}}],[\"运行\",{\"0\":{\"52\":1}}],[\"最近感觉自己觉醒了勤俭持家的本能\",{\"1\":{\"143\":1}}],[\"最大上升子序列模板题\",{\"1\":{\"132\":1}}],[\"最大值\",{\"1\":{\"97\":1}}],[\"最坏情况\",{\"1\":{\"112\":1,\"113\":1}}],[\"最好情况\",{\"1\":{\"112\":1,\"113\":1}}],[\"最小值\",{\"1\":{\"97\":1}}],[\"最后去网上找了体解才搞懂\",{\"1\":{\"133\":1}}],[\"最后看出来规律的了\",{\"1\":{\"123\":1}}],[\"最后zzh上手写\",{\"1\":{\"123\":1}}],[\"最后好不容易才把宿舍的自习室申请下来的当场地了\",{\"1\":{\"122\":1}}],[\"最后成功运行了\",{\"1\":{\"52\":1}}],[\"最后\",{\"1\":{\"51\":1}}],[\"最高分\",{\"1\":{\"41\":1}}],[\"接下来是5\",{\"1\":{\"102\":1}}],[\"接下来是\",{\"1\":{\"102\":2}}],[\"接着\",{\"1\":{\"51\":1}}],[\"接收一个可迭代对象作为参数\",{\"1\":{\"48\":1}}],[\"禁止终端程序的行缓冲\",{\"1\":{\"51\":1}}],[\"禁用\",{\"2\":{\"6\":1}}],[\"禁用了如下功能\",{\"1\":{\"4\":1}}],[\"模式\",{\"1\":{\"51\":1}}],[\"模块用来生成随机数\",{\"1\":{\"36\":1}}],[\"首先开局看错签到题耽误了时间\",{\"1\":{\"123\":1}}],[\"首先我们使用一个数组来模拟一个双向队列\",{\"1\":{\"102\":1}}],[\"首先定义一个arraystack\",{\"1\":{\"92\":1}}],[\"首先\",{\"1\":{\"51\":1}}],[\"理解\",{\"1\":{\"51\":1}}],[\"实现的action类可以对于每个窗体实现操作\",{\"1\":{\"54\":1}}],[\"实现过程\",{\"0\":{\"36\":1}}],[\"实例化游戏界面对象并设置游戏获胜条件为\",{\"1\":{\"51\":1}}],[\"将数列划分为两部分\",{\"1\":{\"115\":1}}],[\"将数组中的元素分为已排序和未排序两部分\",{\"1\":{\"113\":1}}],[\"将所有数值全部回归初始状态\",{\"1\":{\"77\":1}}],[\"将相邻的两个数值相同的方格合并\",{\"1\":{\"62\":1,\"71\":1}}],[\"将相邻的两个数值相同的格子合并\",{\"1\":{\"62\":1}}],[\"将矩阵向左收缩\",{\"1\":{\"61\":1,\"71\":1}}],[\"将矩阵向左划\",{\"1\":{\"60\":1}}],[\"将整个棋盘重置\",{\"1\":{\"56\":1}}],[\"将一直保持现有状态\",{\"1\":{\"51\":1}}],[\"将输入与行为进行关联\",{\"1\":{\"38\":1}}],[\"完成以上工作后\",{\"1\":{\"51\":1}}],[\"完成主逻辑\",{\"0\":{\"51\":1}}],[\"完成能否向其他方向移动的判断\",{\"1\":{\"49\":1}}],[\"达到刷新的目的\",{\"1\":{\"50\":1}}],[\"清空屏幕\",{\"1\":{\"50\":1}}],[\"|\",{\"1\":{\"50\":3,\"74\":3,\"75\":3}}],[\"绘制提示文字\",{\"1\":{\"50\":1}}],[\"绘制行列边框分割线\",{\"1\":{\"50\":1}}],[\"绘制分数和最高分\",{\"1\":{\"50\":1}}],[\"绘制竖直分割线的函数\",{\"1\":{\"50\":1}}],[\"绘制水平分割线的函数\",{\"1\":{\"50\":1}}],[\"绘制函数\",{\"1\":{\"50\":1}}],[\"绘制游戏界面\",{\"0\":{\"50\":1}}],[\"合并也可以看作是在移动\",{\"1\":{\"49\":1}}],[\"合并后\",{\"1\":{\"45\":1}}],[\"检查能否移动\",{\"1\":{\"49\":1}}],[\"传入矩阵\",{\"1\":{\"49\":1}}],[\"传入要移动的方向\",{\"1\":{\"49\":1}}],[\"传入的是矩阵每一行元素在内层\",{\"1\":{\"48\":1}}],[\"传入了每一行的元素并依次比较这一行的每个元素与\",{\"1\":{\"48\":1}}],[\"外层的\",{\"1\":{\"48\":2}}],[\"里面需要一个数组datas来存储所有数据\",{\"1\":{\"92\":1}}],[\"里面嵌套了另一个\",{\"1\":{\"48\":1}}],[\"里处理后返回的\",{\"1\":{\"48\":1}}],[\"里层的\",{\"1\":{\"48\":1}}],[\"无法移动和合并时\",{\"1\":{\"48\":1}}],[\"任意一个位置的数大于设定的\",{\"1\":{\"48\":1}}],[\"任务列表\",{\"0\":{\"20\":1}}],[\"四个\",{\"1\":{\"47\":1}}],[\"把栈的空间扩至原先的两倍大\",{\"1\":{\"93\":1}}],[\"把另一端称为栈底\",{\"1\":{\"91\":1}}],[\"把不同的棋盘操作作为不同的\",{\"1\":{\"47\":1}}],[\"把零散的非零单元挤到一块\",{\"1\":{\"45\":1}}],[\"字典中\",{\"1\":{\"47\":1}}],[\"字典中有\",{\"1\":{\"47\":1}}],[\"字典\",{\"1\":{\"47\":1}}],[\"创建\",{\"1\":{\"47\":1}}],[\"创建棋盘\",{\"0\":{\"41\":1}}],[\"函数需要传一个函数作为参数\",{\"1\":{\"51\":1}}],[\"函数会激活并初始化终端进入\",{\"1\":{\"51\":1}}],[\"函数传入的\",{\"1\":{\"50\":1}}],[\"函数中传入了一个\",{\"1\":{\"51\":1}}],[\"函数中\",{\"1\":{\"49\":1}}],[\"函数用来判断游戏是否结束\",{\"1\":{\"48\":1}}],[\"函数\",{\"1\":{\"48\":1,\"50\":1}}],[\"函数方法中\",{\"1\":{\"48\":1}}],[\"函数里的部分代码\",{\"1\":{\"47\":1}}],[\"函数以一个字符作为参数\",{\"1\":{\"38\":1}}],[\"矩阵向左收紧\",{\"1\":{\"61\":1}}],[\"矩阵翻转\",{\"1\":{\"59\":1,\"71\":1}}],[\"矩阵逆转\",{\"1\":{\"46\":1}}],[\"矩阵转置\",{\"1\":{\"46\":2,\"58\":1,\"71\":1}}],[\"矩阵转置与矩阵逆转\",{\"0\":{\"46\":1}}],[\"×\",{\"1\":{\"46\":1}}],[\"减少重复劳动\",{\"1\":{\"46\":1}}],[\"加入这两个操作可以大大节省我们的代码量\",{\"1\":{\"46\":1}}],[\"加入乘\",{\"1\":{\"45\":1}}],[\"先把找最大值的代码放出来\",{\"1\":{\"102\":1}}],[\"先前学习这个算法的时候一直搞不明白\",{\"1\":{\"94\":1}}],[\"先向左收缩然后合并然后再向左收缩完成一次操作\",{\"1\":{\"62\":1,\"71\":1}}],[\"先挤到一块再合并再挤到一块\",{\"1\":{\"45\":1}}],[\"先将非零的元素全拿出来加入到新列表\",{\"1\":{\"45\":1}}],[\"否则返回\",{\"1\":{\"48\":1}}],[\"否则报错\",{\"1\":{\"45\":1}}],[\"否则等于\",{\"1\":{\"43\":1}}],[\"断言合并后不会改变行列大小\",{\"1\":{\"45\":1}}],[\"新列表中加入该元素\",{\"1\":{\"45\":1}}],[\"新列表加入元素\",{\"1\":{\"45\":1}}],[\"<<\",{\"1\":{\"102\":6}}],[\"<=\",{\"1\":{\"111\":1,\"113\":1}}],[\"<=i\",{\"1\":{\"102\":3}}],[\"<=a\",{\"1\":{\"102\":2}}],[\"<\",{\"1\":{\"45\":1,\"62\":1,\"71\":1,\"102\":1,\"111\":2,\"112\":1}}],[\"元素后面\",{\"1\":{\"45\":1}}],[\"拆出来是为了方便阅读\",{\"1\":{\"45\":1}}],[\"内置的\",{\"1\":{\"46\":1,\"48\":1}}],[\"内定义的\",{\"1\":{\"45\":1}}],[\"内容\",{\"1\":{\"13\":1}}],[\"注\",{\"1\":{\"45\":1,\"47\":1,\"50\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"26\":1}}],[\"然后发现\",{\"1\":{\"123\":1}}],[\"然后又发现好像也不难\",{\"1\":{\"123\":1}}],[\"然后又发现很多队都写出来了\",{\"1\":{\"123\":1}}],[\"然后又看到h也是一个签到题\",{\"1\":{\"123\":1}}],[\"然后我突然来了点灵感才把它a了😓\",{\"1\":{\"123\":1}}],[\"然后保证前一个子数列中的数都小于后一个子数列中的数\",{\"1\":{\"115\":1}}],[\"然后轮到3\",{\"1\":{\"102\":1}}],[\"然后arraysize\",{\"1\":{\"92\":1}}],[\"然后去下载了一个支持win的第三方版本\",{\"1\":{\"52\":1}}],[\"然后同样利用矩阵的转置和逆转来转换矩阵\",{\"1\":{\"49\":1}}],[\"然后再在随机位置生成游戏初始的数值\",{\"1\":{\"44\":1}}],[\"然后判断游戏是否结束\",{\"1\":{\"39\":1}}],[\"更新分数\",{\"1\":{\"44\":1,\"45\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"7\":1}}],[\"更新时间\",{\"1\":{\"4\":1}}],[\"才能确定棋盘上的位置\",{\"1\":{\"43\":1}}],[\"等到3出队后它成为最大值的可能\",{\"1\":{\"102\":1}}],[\"等\",{\"1\":{\"43\":1}}],[\"等于\",{\"1\":{\"43\":1}}],[\"方法中\",{\"1\":{\"51\":1}}],[\"方法中传入一个列表\",{\"1\":{\"43\":1}}],[\"方法的调用需要窗体对象\",{\"1\":{\"51\":1}}],[\"方法将传入的内容展示到终端\",{\"1\":{\"50\":1}}],[\"方法判断这个操作是否能在棋盘执行\",{\"1\":{\"47\":1}}],[\"方法来进行矩阵转置\",{\"1\":{\"46\":1}}],[\"方法在棋盘初始化的时候被调用\",{\"1\":{\"44\":1}}],[\"方法会从一个非空的序列\",{\"1\":{\"43\":1}}],[\"方法\",{\"1\":{\"43\":1}}],[\"库的用法\",{\"1\":{\"50\":1,\"51\":1}}],[\"库的\",{\"1\":{\"43\":1}}],[\"于是\",{\"1\":{\"43\":1}}],[\"或4\",{\"1\":{\"57\":1,\"71\":1}}],[\"或\",{\"1\":{\"43\":1}}],[\"或者\",{\"0\":{\"43\":1}}],[\"或者更准确的说是有限状态机\",{\"1\":{\"39\":1}}],[\"或者根本不值一提\",{\"1\":{\"33\":1}}],[\"按照原列表的大小\",{\"1\":{\"45\":1}}],[\"按照游戏规则\",{\"1\":{\"43\":1}}],[\"按照老师们说的\",{\"1\":{\"33\":1}}],[\"j++\",{\"1\":{\"111\":1}}],[\"java\",{\"1\":{\"92\":1,\"93\":1}}],[\"java实现\",{\"0\":{\"92\":1}}],[\"java实现模拟栈\",{\"0\":{\"90\":1}}],[\"join\",{\"1\":{\"50\":1,\"74\":1,\"75\":1}}],[\"j\",{\"1\":{\"43\":7,\"44\":1,\"56\":1,\"57\":5,\"71\":6,\"102\":2,\"111\":4,\"113\":7}}],[\"jpg\",{\"1\":{\"33\":7}}],[\"得到一个随机空白位置的元组坐标\",{\"1\":{\"43\":1}}],[\">>\",{\"1\":{\"102\":3}}],[\">=a\",{\"1\":{\"102\":1}}],[\">=\",{\"1\":{\"48\":1,\"57\":1,\"71\":1,\"80\":1}}],[\">\",{\"1\":{\"43\":1,\"44\":1,\"50\":1,\"74\":1,\"75\":1,\"112\":1,\"113\":2}}],[\"exchange\",{\"0\":{\"127\":1},\"1\":{\"115\":1}}],[\"exit\",{\"0\":{\"85\":1},\"1\":{\"38\":3,\"39\":15,\"50\":1,\"51\":6,\"54\":3,\"72\":1,\"75\":1,\"84\":2,\"85\":2,\"86\":1,\"87\":1,\"88\":1}}],[\"endl\",{\"1\":{\"102\":2}}],[\"empty\",{\"1\":{\"57\":2,\"71\":2}}],[\"else\",{\"1\":{\"43\":1,\"45\":2,\"47\":1,\"49\":1,\"50\":3,\"57\":1,\"62\":2,\"71\":3,\"74\":1,\"75\":5,\"79\":1,\"85\":1,\"93\":1}}],[\"element\",{\"1\":{\"43\":3}}],[\"从队尾出队\",{\"1\":{\"102\":1}}],[\"从中选出最小的和最大的值\",{\"1\":{\"101\":1}}],[\"从左至右\",{\"1\":{\"99\":2}}],[\"从一个栈删除元素又称作出栈或退栈\",{\"1\":{\"91\":1}}],[\"从\",{\"1\":{\"43\":1}}],[\"404\",{\"1\":{\"144\":1}}],[\"4\",{\"0\":{\"43\":1},\"1\":{\"43\":3,\"46\":2,\"57\":1,\"71\":1,\"102\":1}}],[\"4x4\",{\"1\":{\"41\":1}}],[\"随机生成一个\",{\"0\":{\"43\":1}}],[\"随机数模块\",{\"1\":{\"35\":1}}],[\"棋盘走一步\",{\"0\":{\"47\":1}}],[\"棋盘操作\",{\"0\":{\"42\":1}}],[\"棋盘重置\",{\"1\":{\"41\":1}}],[\"棋盘会进行相应移动一次\",{\"1\":{\"39\":1}}],[\"0\",{\"1\":{\"41\":2,\"43\":1,\"44\":3,\"45\":5,\"49\":4,\"50\":2,\"56\":1,\"57\":1,\"61\":2,\"62\":1,\"67\":3,\"71\":8,\"74\":1,\"75\":2,\"77\":1,\"93\":4,\"102\":1,\"113\":1}}],[\"宽\",{\"1\":{\"41\":1}}],[\"高\",{\"1\":{\"41\":1}}],[\"～\",{\"1\":{\"41\":1}}],[\"码值\",{\"1\":{\"40\":1}}],[\"n^2\",{\"1\":{\"111\":1,\"112\":2,\"113\":2}}],[\"namespace\",{\"1\":{\"102\":1}}],[\"null\",{\"1\":{\"93\":2}}],[\"num\",{\"1\":{\"50\":3,\"74\":3,\"75\":3,\"80\":1,\"111\":4}}],[\"none\",{\"1\":{\"71\":1}}],[\"not\",{\"1\":{\"39\":4,\"40\":1,\"48\":1,\"51\":3,\"54\":1,\"81\":1,\"144\":1}}],[\"new\",{\"1\":{\"43\":3,\"45\":10,\"61\":4,\"62\":6,\"71\":10,\"93\":1}}],[\"n\",{\"1\":{\"40\":1,\"50\":1,\"54\":1,\"73\":1,\"75\":1,\"98\":2,\"102\":4,\"111\":3,\"112\":3,\"113\":4,\"123\":1}}],[\"using\",{\"1\":{\"102\":1}}],[\"use\",{\"1\":{\"51\":1,\"88\":1}}],[\"user\",{\"1\":{\"40\":1,\"51\":2}}],[\"util\",{\"1\":{\"92\":1,\"93\":1}}],[\"up\",{\"0\":{\"65\":1,\"70\":1},\"1\":{\"38\":3,\"39\":2,\"47\":2,\"49\":1,\"50\":1,\"54\":3,\"65\":1,\"70\":1,\"71\":2,\"72\":1,\"75\":1}}],[\"grid=self\",{\"1\":{\"78\":1}}],[\"grid=none\",{\"1\":{\"75\":1}}],[\"grid\",{\"1\":{\"71\":1,\"75\":8,\"77\":3,\"78\":1,\"79\":2,\"80\":1,\"82\":1}}],[\"grid类包含所有对于格子计算的操作\",{\"1\":{\"55\":1}}],[\"grid类\",{\"0\":{\"55\":1}}],[\"getattr\",{\"1\":{\"79\":1,\"82\":1,\"88\":1}}],[\"getch\",{\"1\":{\"40\":1,\"54\":1}}],[\"get\",{\"1\":{\"40\":1,\"51\":2,\"54\":1,\"84\":1,\"85\":1}}],[\"gamemanager类\",{\"0\":{\"76\":1}}],[\"gamefield\",{\"1\":{\"41\":1,\"51\":1}}],[\"game函数表示的是游戏进行时的状态\",{\"1\":{\"39\":1}}],[\"game函数表示的是游戏结束时的状态\",{\"1\":{\"39\":1}}],[\"gameover\",{\"1\":{\"39\":4,\"48\":2,\"50\":3,\"51\":4}}],[\"game\",{\"0\":{\"84\":1,\"125\":1},\"1\":{\"39\":11,\"50\":1,\"51\":16,\"72\":1,\"75\":1,\"83\":1,\"84\":2}}],[\"直到zzh写完试样例的时候才发觉这道题不是简单的大模拟\",{\"1\":{\"123\":1}}],[\"直到还剩两个小时的时候还很乐观\",{\"1\":{\"123\":1}}],[\"直到后来认真分析了数据范围和大小\",{\"1\":{\"123\":1}}],[\"直到两个指针相遇\",{\"1\":{\"115\":1}}],[\"直到数列有序\",{\"1\":{\"112\":1}}],[\"直到获得用户有效输入才返回对应行为\",{\"1\":{\"40\":1}}],[\"直到达到\",{\"1\":{\"39\":1}}],[\"阻塞＋循环\",{\"1\":{\"40\":1}}],[\"行为时\",{\"1\":{\"39\":1}}],[\"当一个队友开始决定去写大模拟的时候\",{\"1\":{\"123\":1}}],[\"当前的数的位置全放对后\",{\"1\":{\"115\":1}}],[\"当前分数\",{\"1\":{\"41\":1}}],[\"当有两个相等键值的纪录r和s\",{\"1\":{\"107\":1}}],[\"当然如果你是大佬\",{\"1\":{\"101\":1}}],[\"当左边有一个数和右边的数相等时\",{\"1\":{\"49\":1}}],[\"当左边有空位\",{\"1\":{\"49\":1}}],[\"当上下左右四个方向都不能移动时\",{\"1\":{\"48\":1}}],[\"当\",{\"1\":{\"39\":2}}],[\"成功移动了一步\",{\"1\":{\"39\":1}}],[\"玩家输入\",{\"1\":{\"39\":1}}],[\"状态重置\",{\"1\":{\"83\":1}}],[\"状态\",{\"1\":{\"39\":1}}],[\"状态机开始循环\",{\"1\":{\"51\":1}}],[\"状态机会不断循环\",{\"1\":{\"39\":1}}],[\"状态机\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"状态机的概念\",{\"1\":{\"35\":1}}],[\"值为\",{\"1\":{\"48\":1}}],[\"值时\",{\"1\":{\"48\":1}}],[\"值\",{\"1\":{\"39\":1,\"48\":2}}],[\"值不存在时\",{\"1\":{\"36\":1}}],[\"程序不仅不会报错\",{\"1\":{\"39\":1}}],[\"程序就会报错\",{\"1\":{\"39\":1}}],[\"来当做两个子数列的分界\",{\"1\":{\"115\":1}}],[\"来取\",{\"1\":{\"39\":1}}],[\"来解析\",{\"1\":{\"13\":1}}],[\"作为最大值了\",{\"1\":{\"102\":1}}],[\"作为\",{\"1\":{\"51\":1}}],[\"作用是生成一个特殊的字典\",{\"1\":{\"39\":1}}],[\"作者设置为\",{\"1\":{\"28\":1}}],[\"读取用户输入得到\",{\"1\":{\"39\":2,\"51\":2}}],[\"功能\",{\"1\":{\"39\":2}}],[\"我就高中的数学水平\",{\"1\":{\"133\":1}}],[\"我是一点都不会啊\",{\"1\":{\"133\":1}}],[\"我连题还没读明白他就给a了\",{\"1\":{\"123\":1}}],[\"我每次看到这句话总会被莫名戳中笑点\",{\"1\":{\"104\":1}}],[\"我没学过都是一个一个去网上搜😂\",{\"1\":{\"90\":1}}],[\"我也不会管它\",{\"1\":{\"90\":1}}],[\"我也知道\",{\"1\":{\"33\":1}}],[\"我们因为这个wa了两发\",{\"1\":{\"123\":1}}],[\"我们就一起顺手把它a了\",{\"1\":{\"123\":1}}],[\"我们就可以补完主逻辑了\",{\"1\":{\"51\":1}}],[\"我们直接爆零\",{\"1\":{\"122\":1}}],[\"我们还要关注一下序列长度的问题\",{\"1\":{\"102\":1}}],[\"我们还需要为玩家提供\",{\"1\":{\"39\":1}}],[\"我们要将队列中的元素从队尾挨个和5比较\",{\"1\":{\"102\":1}}],[\"我们需要思考\",{\"1\":{\"102\":1}}],[\"我们让1入队\",{\"1\":{\"102\":1}}],[\"我们发现一个性质\",{\"1\":{\"102\":1}}],[\"我们常人解决这个问题\",{\"1\":{\"101\":1}}],[\"我们再结合两部分内容来理解\",{\"1\":{\"50\":1}}],[\"我们再用\",{\"1\":{\"47\":1}}],[\"我们只用实现判断能否向左移动的代码\",{\"1\":{\"49\":1}}],[\"我们使用了\",{\"1\":{\"48\":1}}],[\"我们先判断传进来作为\",{\"1\":{\"47\":1}}],[\"我们可以直接利用\",{\"1\":{\"46\":1}}],[\"我们往\",{\"1\":{\"43\":1}}],[\"我们用到了\",{\"1\":{\"43\":1}}],[\"我们都知道如果使用字典里不存在的\",{\"1\":{\"39\":1}}],[\"初始化函数\",{\"1\":{\"71\":1}}],[\"初始化游戏开始界面\",{\"1\":{\"44\":1}}],[\"初始化游戏棋盘\",{\"1\":{\"39\":1}}],[\"初始化棋盘的参数\",{\"1\":{\"41\":1}}],[\"初始化棋盘\",{\"1\":{\"39\":1}}],[\"使这个队列保持单调性\",{\"1\":{\"96\":1}}],[\"使其相邻的元素成为新的栈顶元素\",{\"1\":{\"91\":1}}],[\"使之成为新的栈顶元素\",{\"1\":{\"91\":1}}],[\"使用线段树\",{\"1\":{\"101\":1}}],[\"使用颜色配置默认值\",{\"1\":{\"51\":1}}],[\"使用指南\",{\"1\":{\"28\":2},\"2\":{\"3\":1,\"5\":1,\"24\":1,\"31\":1,\"32\":1}}],[\"使游戏变成初始状态\",{\"1\":{\"39\":1}}],[\"终结状态结束程序\",{\"1\":{\"39\":1}}],[\"终端图形编程库\",{\"1\":{\"35\":1}}],[\"存储当前状态\",{\"1\":{\"39\":1}}],[\"游戏获胜条件\",{\"1\":{\"80\":1}}],[\"游戏结束\",{\"1\":{\"48\":1}}],[\"游戏结束时\",{\"1\":{\"39\":1}}],[\"游戏失败函数\",{\"1\":{\"81\":1}}],[\"游戏失败\",{\"1\":{\"48\":1}}],[\"游戏失败了\",{\"1\":{\"39\":1}}],[\"游戏胜利\",{\"1\":{\"48\":1}}],[\"游戏胜利了\",{\"1\":{\"39\":1}}],[\"游戏状态机\",{\"1\":{\"84\":1}}],[\"游戏状态\",{\"1\":{\"39\":1}}],[\"游戏很容易就能分解成几种状态的转换\",{\"1\":{\"39\":1}}],[\"游戏重置\",{\"1\":{\"38\":1}}],[\"处理游戏主逻辑的时候我们会用到一种十分常用的技术\",{\"1\":{\"39\":1}}],[\"6\",{\"1\":{\"97\":8,\"100\":1,\"101\":1}}],[\"68\",{\"1\":{\"38\":1}}],[\"65\",{\"1\":{\"38\":1}}],[\"便于和后面捕捉的键位关联\",{\"1\":{\"38\":1}}],[\"返回栈中元素个数\",{\"1\":{\"93\":1}}],[\"返回栈顶元素\",{\"1\":{\"93\":1}}],[\"返回null\",{\"1\":{\"93\":1}}],[\"返回一个布尔值\",{\"1\":{\"82\":1}}],[\"返回\",{\"1\":{\"48\":1,\"62\":1}}],[\"返回输入键位对应的行为\",{\"1\":{\"40\":1}}],[\"返回按下键位的\",{\"1\":{\"40\":1}}],[\"返回参数对应的\",{\"1\":{\"38\":1}}],[\"返回顶部按钮\",{\"1\":{\"4\":1,\"7\":1}}],[\"of\",{\"0\":{\"138\":1}}],[\"or\",{\"0\":{\"85\":1},\"1\":{\"85\":1,\"86\":1,\"87\":1}}],[\"ord\",{\"1\":{\"38\":2,\"54\":1}}],[\"over=self\",{\"1\":{\"78\":1}}],[\"over=false\",{\"1\":{\"75\":1}}],[\"over\",{\"0\":{\"81\":1,\"87\":1},\"1\":{\"50\":1,\"72\":2,\"75\":8,\"77\":1,\"78\":1,\"81\":3,\"84\":2,\"87\":1}}],[\"object\",{\"1\":{\"41\":1,\"51\":1,\"54\":1,\"71\":1,\"75\":1,\"92\":1,\"93\":2}}],[\"omega^i\",{\"1\":{\"19\":1}}],[\"omega^r\",{\"1\":{\"19\":1}}],[\"omega\",{\"1\":{\"19\":4}}],[\"quicksort\",{\"1\":{\"115\":1}}],[\"q=\",{\"1\":{\"102\":6}}],[\"q是队列\",{\"1\":{\"102\":1}}],[\"q\",{\"1\":{\"38\":1,\"39\":1,\"50\":1,\"72\":1,\"75\":1,\"102\":12}}],[\"swap\",{\"1\":{\"111\":1,\"112\":1}}],[\"sort\",{\"1\":{\"111\":2,\"112\":2,\"113\":2,\"115\":1}}],[\"sorting\",{\"1\":{\"105\":1}}],[\"size++\",{\"1\":{\"93\":1}}],[\"size\",{\"1\":{\"56\":2,\"57\":2,\"71\":7,\"75\":4,\"77\":1,\"92\":3,\"93\":11}}],[\"successful\",{\"1\":{\"51\":1}}],[\"sum\",{\"1\":{\"19\":1}}],[\"selection\",{\"1\":{\"111\":2}}],[\"self\",{\"1\":{\"41\":7,\"43\":5,\"44\":11,\"45\":1,\"47\":5,\"48\":7,\"49\":2,\"50\":8,\"54\":6,\"56\":6,\"57\":5,\"58\":3,\"59\":3,\"62\":1,\"63\":4,\"64\":4,\"65\":4,\"66\":4,\"68\":3,\"69\":4,\"70\":4,\"71\":57,\"73\":2,\"74\":2,\"75\":51,\"77\":8,\"78\":1,\"79\":4,\"80\":5,\"81\":5,\"82\":2,\"83\":2,\"84\":6,\"85\":3,\"86\":2,\"87\":2,\"88\":8}}],[\"separator\",{\"1\":{\"50\":3}}],[\"screen=self\",{\"1\":{\"78\":1}}],[\"screen=none\",{\"1\":{\"75\":1}}],[\"screen类用来绘制游戏界面\",{\"1\":{\"72\":1}}],[\"screen类\",{\"0\":{\"72\":1}}],[\"screen\",{\"0\":{\"78\":1},\"1\":{\"50\":6,\"51\":2,\"73\":1,\"75\":6,\"78\":2,\"84\":1,\"85\":1}}],[\"score=self\",{\"1\":{\"78\":1}}],[\"score=0\",{\"1\":{\"75\":2}}],[\"score\",{\"1\":{\"41\":1,\"44\":3,\"45\":1,\"50\":2,\"62\":1,\"71\":1,\"75\":6,\"77\":1,\"78\":1}}],[\"stop\",{\"1\":{\"104\":1}}],[\"std\",{\"1\":{\"102\":1,\"111\":1,\"112\":1}}],[\"stdc++\",{\"1\":{\"102\":1}}],[\"stdscr\",{\"1\":{\"51\":9,\"54\":4,\"78\":1,\"88\":4}}],[\"st表算法\",{\"1\":{\"101\":1}}],[\"stack\",{\"1\":{\"91\":1}}],[\"staticmethod\",{\"1\":{\"67\":1,\"71\":2}}],[\"state\",{\"0\":{\"83\":1,\"84\":1,\"86\":1,\"87\":1},\"1\":{\"39\":4,\"51\":8,\"77\":1,\"83\":1,\"84\":1,\"86\":1,\"87\":1,\"88\":4}}],[\"string\",{\"1\":{\"50\":6,\"72\":2,\"73\":2,\"75\":8}}],[\"string2\",{\"1\":{\"50\":2,\"72\":1,\"75\":3}}],[\"string1\",{\"1\":{\"50\":2,\"72\":1,\"75\":3}}],[\"str\",{\"1\":{\"43\":1,\"50\":2,\"51\":1,\"75\":2}}],[\"spawn\",{\"1\":{\"43\":1,\"44\":2,\"47\":1}}],[\"s\",{\"1\":{\"38\":1,\"50\":1,\"72\":1,\"75\":1}}],[\"有一个大小为\",{\"1\":{\"97\":1}}],[\"有一个自己拥有绝对控制权的网站\",{\"1\":{\"1\":1}}],[\"有效输入键是最常见的\",{\"1\":{\"38\":1}}],[\"datas\",{\"1\":{\"92\":1,\"93\":7}}],[\"draw\",{\"0\":{\"74\":1,\"75\":1},\"1\":{\"50\":7,\"51\":4,\"74\":1,\"75\":5,\"84\":1,\"85\":1}}],[\"direction\",{\"1\":{\"47\":5,\"49\":4,\"79\":3,\"82\":2}}],[\"dict\",{\"1\":{\"38\":3,\"40\":2,\"54\":4}}],[\"default\",{\"1\":{\"51\":1,\"88\":1}}],[\"defaultdict\",{\"1\":{\"36\":2,\"39\":4,\"51\":1}}],[\"def\",{\"1\":{\"39\":3,\"40\":1,\"41\":1,\"43\":1,\"44\":1,\"45\":3,\"46\":2,\"47\":1,\"48\":2,\"49\":3,\"50\":4,\"51\":4,\"54\":2,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":2,\"68\":1,\"69\":1,\"70\":1,\"71\":19,\"73\":1,\"74\":1,\"75\":5,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1}}],[\"d\",{\"1\":{\"38\":1,\"50\":1,\"72\":1,\"75\":1,\"102\":1}}],[\"down\",{\"0\":{\"66\":1,\"71\":1},\"1\":{\"38\":3,\"39\":2,\"47\":2,\"49\":1,\"50\":1,\"54\":3,\"66\":1,\"71\":3,\"72\":1,\"75\":1}}],[\"表示还在游戏进行状态\",{\"1\":{\"39\":1}}],[\"表示\",{\"1\":{\"38\":1}}],[\"alignment\",{\"0\":{\"132\":1}}],[\"algorithm\",{\"1\":{\"105\":1}}],[\"a题严重低估难度了\",{\"1\":{\"123\":1}}],[\"a是原数组\",{\"1\":{\"102\":1}}],[\"accounting\",{\"0\":{\"139\":1}}],[\"acwing154\",{\"1\":{\"97\":1}}],[\"action类\",{\"0\":{\"54\":1}}],[\"action\",{\"1\":{\"39\":10,\"40\":1,\"51\":11,\"54\":1,\"81\":1,\"84\":7,\"85\":2,\"88\":2}}],[\"actions\",{\"1\":{\"38\":5,\"39\":2,\"40\":2,\"48\":1,\"51\":2,\"54\":5,\"81\":1}}],[\"arraystack\",{\"1\":{\"93\":1}}],[\"arraystack<t>\",{\"1\":{\"92\":1,\"93\":1}}],[\"arraysize\",{\"1\":{\"92\":1,\"93\":5}}],[\"arrays\",{\"1\":{\"92\":1,\"93\":2}}],[\"add\",{\"0\":{\"57\":1},\"1\":{\"56\":2,\"57\":1,\"71\":3,\"79\":1}}],[\"addstr\",{\"1\":{\"50\":3,\"51\":2,\"73\":1,\"75\":1}}],[\"any\",{\"1\":{\"48\":11,\"49\":2,\"67\":1,\"68\":1,\"71\":2,\"81\":1}}],[\"and\",{\"1\":{\"45\":1,\"49\":2,\"62\":1,\"67\":2,\"71\":3}}],[\"append\",{\"1\":{\"45\":3,\"62\":3,\"71\":3}}],[\"a\",{\"1\":{\"38\":1,\"50\":1,\"72\":1,\"75\":1,\"102\":7,\"111\":5,\"112\":5,\"113\":9}}],[\"assert\",{\"1\":{\"45\":1,\"62\":1,\"71\":1}}],[\"ascii\",{\"1\":{\"38\":1,\"40\":1}}],[\"as\",{\"1\":{\"27\":1}}],[\"退出循环\",{\"1\":{\"39\":1}}],[\"退出\",{\"1\":{\"38\":2}}],[\"右边有数字时\",{\"1\":{\"49\":1}}],[\"右\",{\"1\":{\"38\":2}}],[\"左右上下\",{\"1\":{\"49\":1}}],[\"左\",{\"1\":{\"38\":2}}],[\"用windows画图简单画的\",{\"1\":{\"96\":1}}],[\"用来记录目前栈占用的大小\",{\"1\":{\"92\":1}}],[\"用来在终端上显示图形界面\",{\"1\":{\"36\":1}}],[\"用法参考上面代码块中的注释\",{\"1\":{\"43\":1}}],[\"用户输入处理\",{\"0\":{\"40\":1}}],[\"用户行为\",{\"0\":{\"38\":1}}],[\"用\",{\"1\":{\"38\":1}}],[\"version\",{\"1\":{\"111\":1,\"112\":1,\"113\":1}}],[\"void\",{\"1\":{\"93\":1,\"102\":4,\"111\":1,\"112\":1,\"113\":1}}],[\"valuestate\",{\"1\":{\"39\":1}}],[\"value\",{\"1\":{\"36\":1,\"39\":3,\"41\":1,\"48\":3,\"93\":2}}],[\"vue\",{\"1\":{\"30\":2}}],[\"vuepress\",{\"0\":{\"14\":1},\"1\":{\"10\":2,\"12\":2,\"13\":1,\"14\":2,\"15\":1,\"29\":1}}],[\"容器数据类型库\",{\"1\":{\"35\":1}}],[\"技术栈\",{\"0\":{\"35\":1}}],[\"哈哈哈\",{\"1\":{\"34\":1}}],[\"应该不难吧\",{\"1\":{\"34\":1}}],[\"应该是第一场icpc网络预选赛\",{\"1\":{\"33\":1}}],[\"目前拿过的最高荣誉\",{\"1\":{\"33\":1}}],[\"目前维持自己的精神状态正常才最重要hhh\",{\"1\":{\"33\":1}}],[\"大家都挺不容易的\",{\"1\":{\"122\":1}}],[\"大的数冒到最后面\",{\"1\":{\"112\":1}}],[\"大概是纯模拟\",{\"1\":{\"143\":1}}],[\"大概是第二场吧\",{\"1\":{\"33\":1}}],[\"大概分为三类\",{\"1\":{\"105\":1}}],[\"大学四年浪费八分之五\",{\"1\":{\"33\":1}}],[\"wormholes\",{\"0\":{\"128\":1}}],[\"wheel\",{\"1\":{\"104\":1}}],[\"while\",{\"1\":{\"40\":1,\"51\":1,\"54\":1,\"88\":1,\"102\":6,\"112\":1,\"113\":1}}],[\"wrapper\",{\"1\":{\"51\":4}}],[\"wiki\",{\"1\":{\"107\":1}}],[\"width\",{\"1\":{\"41\":2,\"43\":1,\"44\":1,\"50\":1}}],[\"width=4\",{\"1\":{\"41\":1}}],[\"win=self\",{\"1\":{\"78\":1}}],[\"win=false\",{\"1\":{\"75\":1}}],[\"win=2048\",{\"1\":{\"41\":1,\"51\":1}}],[\"window\",{\"1\":{\"51\":4}}],[\"win\",{\"0\":{\"80\":1,\"86\":1},\"1\":{\"39\":4,\"41\":1,\"48\":6,\"50\":4,\"51\":4,\"72\":2,\"75\":8,\"77\":1,\"78\":1,\"80\":4,\"84\":2,\"86\":1}}],[\"will\",{\"1\":{\"27\":1}}],[\"wasdrqwasdrq\",{\"1\":{\"38\":1,\"54\":1}}],[\"w\",{\"1\":{\"38\":1,\"50\":1,\"72\":1,\"75\":1}}],[\"wx\",{\"1\":{\"33\":3}}],[\"下面是完整代码\",{\"1\":{\"102\":1}}],[\"下面是一道标准的滑动窗口问题\",{\"1\":{\"96\":1}}],[\"下面对样例进行详细分析\",{\"1\":{\"102\":1}}],[\"下面我们来讲具体怎么使用单调队列\",{\"1\":{\"101\":1}}],[\"下面我们来理清主逻辑的代码\",{\"1\":{\"39\":1}}],[\"下面放一些比赛时的照骗\",{\"1\":{\"33\":1}}],[\"下\",{\"1\":{\"38\":2}}],[\"下一篇\",{\"1\":{\"4\":1}}],[\"算法\",{\"0\":{\"151\":1}}],[\"算法呀\",{\"1\":{\"123\":1}}],[\"算法性质\",{\"0\":{\"106\":1}}],[\"算法笔记\",{\"0\":{\"94\":1,\"103\":1}}],[\"算法固然算是一个梦想\",{\"1\":{\"33\":1}}],[\"算起来都太亏了\",{\"1\":{\"33\":1}}],[\"现在腰还是痛的\",{\"1\":{\"136\":1}}],[\"现在或许我应该把重心放到更加稳妥的方向了吧\",{\"1\":{\"33\":1}}],[\"现在在寝室里面最大的事情也不过是早上吃什么\",{\"1\":{\"33\":1}}],[\"选择排序是一种不稳定的算法\",{\"1\":{\"111\":1}}],[\"选择排序\",{\"0\":{\"111\":1},\"1\":{\"105\":1,\"111\":1}}],[\"选错了方向可能努力也没什么结果\",{\"1\":{\"33\":1}}],[\"选项卡\",{\"0\":{\"16\":1}}],[\"世界上总是有一些事与愿违的事情\",{\"1\":{\"33\":1}}],[\"所有代码\",{\"1\":{\"71\":1,\"75\":1}}],[\"所有的有效输入都可以转换为\",{\"1\":{\"38\":1}}],[\"所以加紧复习一下dp\",{\"1\":{\"129\":1}}],[\"所以直接拼接起来就好了\",{\"1\":{\"115\":1}}],[\"所以处理后3\",{\"1\":{\"102\":1}}],[\"所以入队\",{\"1\":{\"102\":1}}],[\"所以这次不弹出元素\",{\"1\":{\"102\":1}}],[\"所以把1弹出3入队\",{\"1\":{\"102\":1}}],[\"所以可以直接将\",{\"1\":{\"102\":1}}],[\"所以由此得知我们只能选用时间复杂度在\",{\"1\":{\"101\":1}}],[\"所以标准就降低一些\",{\"1\":{\"94\":1}}],[\"所以我们来结合上一部分出现的\",{\"1\":{\"51\":1}}],[\"所以矩阵变换之后\",{\"1\":{\"49\":1}}],[\"所以需要传一个函数\",{\"1\":{\"39\":1}}],[\"所以就跑过来跟着实现一下这个\",{\"1\":{\"34\":1}}],[\"所以在这里写出来发泄一下\",{\"1\":{\"33\":1}}],[\"所谓的新冠疫情已经耽误了太多太多的事情了\",{\"1\":{\"33\":1}}],[\"越想越难受\",{\"1\":{\"33\":1}}],[\"确实是心里有点难受\",{\"1\":{\"33\":1}}],[\"确实是一个错误的观点\",{\"1\":{\"33\":1}}],[\"没有想象中的翘边\",{\"1\":{\"142\":1}}],[\"没有结束就返回状态\",{\"1\":{\"39\":1}}],[\"没有结果\",{\"1\":{\"33\":1}}],[\"没有那个运气和实力\",{\"1\":{\"33\":1}}],[\"没有什么逻辑\",{\"1\":{\"33\":1}}],[\"没有什么条理\",{\"1\":{\"33\":1}}],[\"没有任何别的意思\",{\"1\":{\"33\":1}}],[\"那队列就会变成\",{\"1\":{\"102\":1}}],[\"那么可以交换\",{\"1\":{\"115\":1}}],[\"那么无论在什么时候我们都不会取\",{\"1\":{\"102\":1}}],[\"那么在这里是必然会超时的\",{\"1\":{\"101\":1}}],[\"那一场打的真的难\",{\"1\":{\"90\":1}}],[\"那就执行它对应的函数\",{\"1\":{\"49\":1}}],[\"那这两年半的训练算是打水漂了\",{\"1\":{\"33\":1}}],[\"那个菜还十分难吃\",{\"1\":{\"33\":1}}],[\"只觉得很瞌睡😪\",{\"1\":{\"141\":1}}],[\"只能说疫情当下\",{\"1\":{\"122\":1}}],[\"只能说是拼死拼活\",{\"1\":{\"33\":1}}],[\"只需检查一遍数组\",{\"1\":{\"112\":1,\"113\":1}}],[\"只是留给以后的自己看\",{\"1\":{\"94\":1}}],[\"只要游戏没有胜利或失败\",{\"1\":{\"39\":1}}],[\"只有胜利和失败两种结果\",{\"1\":{\"39\":1}}],[\"只为了打明年的比赛\",{\"1\":{\"33\":1}}],[\"不知道为啥\",{\"1\":{\"143\":1}}],[\"不知不觉在寝室已经封了十天了\",{\"1\":{\"33\":1}}],[\"不然评论区有答案就没意思了\",{\"1\":{\"138\":1}}],[\"不论是选择\",{\"1\":{\"115\":1}}],[\"不论是时间成本还是精力\",{\"1\":{\"33\":1}}],[\"不用合并\",{\"1\":{\"115\":1}}],[\"不用再变换复原\",{\"1\":{\"49\":1}}],[\"不包括这个函数的低阶项和首项系数\",{\"1\":{\"108\":1}}],[\"不仅效率高\",{\"1\":{\"104\":1}}],[\"不可能要求一个程序员就把它完整的编写出来\",{\"1\":{\"104\":1}}],[\"不要重复造轮子\",{\"1\":{\"104\":1}}],[\"不需要遇到换行符或回车\",{\"1\":{\"51\":1}}],[\"不是逆矩阵\",{\"1\":{\"46\":1}}],[\"不能合并\",{\"1\":{\"45\":1}}],[\"不同的是\",{\"1\":{\"39\":1}}],[\"不存在\",{\"1\":{\"39\":1}}],[\"不过这个膜才9块9\",{\"1\":{\"142\":1}}],[\"不过今天新生来了还挺热闹的\",{\"1\":{\"140\":1}}],[\"不过还好手速快\",{\"1\":{\"128\":1}}],[\"不过还好\",{\"1\":{\"125\":1}}],[\"不过总的来说这句话对于大部分程序员是对的\",{\"1\":{\"104\":1}}],[\"不过在这里有点大材小用了\",{\"1\":{\"101\":1}}],[\"不过是看一眼找到方框里哪个最大哪个最小就行了\",{\"1\":{\"101\":1}}],[\"不过\",{\"1\":{\"33\":1}}],[\"估计只能等到明年再打了\",{\"1\":{\"33\":1}}],[\"报名过的比赛被迫退赛\",{\"1\":{\"33\":1}}],[\"拿个铜牌也是足够拿到简历上加很多分的\",{\"1\":{\"33\":1}}],[\"如果没见过使用栈来进行运算的题\",{\"1\":{\"140\":1}}],[\"如果没有可以移动的方向则游戏失败\",{\"1\":{\"81\":1}}],[\"如果没有\",{\"1\":{\"51\":1}}],[\"如果当前的数没放对\",{\"1\":{\"115\":1}}],[\"如果逆序就交换这两个元素\",{\"1\":{\"112\":1}}],[\"如果比5小就弹出\",{\"1\":{\"102\":1}}],[\"如果把3放进去\",{\"1\":{\"102\":1}}],[\"如果队列中存在两个元素\",{\"1\":{\"102\":1}}],[\"如果一个选手比你小还比你强\",{\"1\":{\"96\":1}}],[\"如果能就执行移动\",{\"1\":{\"79\":1}}],[\"如果能参加\",{\"1\":{\"33\":1}}],[\"如果\",{\"1\":{\"49\":1}}],[\"如果有任何一个\",{\"1\":{\"48\":1}}],[\"如果有任何一个元素大于\",{\"1\":{\"48\":1}}],[\"如果想不明白\",{\"1\":{\"47\":1}}],[\"如果存在的话\",{\"1\":{\"47\":1}}],[\"如果这个随机数大于\",{\"1\":{\"43\":1}}],[\"如果结束就返回相应的结束状态\",{\"1\":{\"39\":1}}],[\"如果要取的\",{\"1\":{\"39\":1}}],[\"如果你是一个新手\",{\"1\":{\"11\":1}}],[\"打下来了几个名额\",{\"1\":{\"33\":1}}],[\"打印按钮\",{\"1\":{\"7\":1}}],[\"虽然题目和故事一点关系都没有😂\",{\"1\":{\"139\":1}}],[\"虽然dp真的好难😂\",{\"1\":{\"129\":1}}],[\"虽然没什么难度\",{\"1\":{\"125\":1}}],[\"虽然难\",{\"1\":{\"90\":1}}],[\"虽然我们队伍不是最强的\",{\"1\":{\"33\":1}}],[\"虽然很喜欢扩展一些编程知识\",{\"1\":{\"33\":1}}],[\"甚至封寝前几天还打了一场河北省赛\",{\"1\":{\"33\":1}}],[\"疫情之前连着打了一个月的比赛\",{\"1\":{\"33\":1}}],[\"米还有点生\",{\"1\":{\"33\":1}}],[\"一下午罚坐了5个小时\",{\"1\":{\"136\":1}}],[\"一下的算法\",{\"1\":{\"101\":1}}],[\"一直没debug出来\",{\"1\":{\"131\":1}}],[\"一直循环\",{\"1\":{\"102\":1}}],[\"一般是随机选择一个数\",{\"1\":{\"115\":1}}],[\"一般来说这样会效率低下\",{\"1\":{\"104\":1}}],[\"一般这种小比赛都是没人参加的\",{\"1\":{\"90\":1}}],[\"一开始是感觉这个题巨难\",{\"1\":{\"123\":1}}],[\"一开始想复杂了\",{\"1\":{\"123\":1}}],[\"一开始队中没有一个元素\",{\"1\":{\"102\":1}}],[\"一开始定了一个目标\",{\"1\":{\"33\":1}}],[\"一\",{\"0\":{\"94\":1}}],[\"一行向左合并\",{\"0\":{\"45\":1}}],[\"一盆菜里面面就几个肉丝\",{\"1\":{\"33\":1}}],[\"饭菜虽然免费\",{\"1\":{\"33\":1}}],[\"基数排序\",{\"0\":{\"118\":1},\"1\":{\"105\":1}}],[\"基本知识\",{\"1\":{\"35\":1}}],[\"基本上只完成了老师布置的作业\",{\"1\":{\"33\":1}}],[\"基于wordpress的博客上线\",{\"1\":{\"1\":1}}],[\"碰到难以解决的问题就搁置了\",{\"1\":{\"33\":1}}],[\"但也是o\",{\"1\":{\"123\":1}}],[\"但b题签到最后没有写出来\",{\"1\":{\"123\":1}}],[\"但在\",{\"1\":{\"39\":1}}],[\"但其质量很堪忧\",{\"1\":{\"33\":1}}],[\"但没什么斗志\",{\"1\":{\"33\":1}}],[\"但是容易想歪\",{\"1\":{\"138\":1}}],[\"但是队伍排名还在800名左右\",{\"1\":{\"128\":1}}],[\"但是还是十分考验码代码的能力的\",{\"1\":{\"125\":1}}],[\"但是还是要脚踏实地学点什么养活自己再说\",{\"1\":{\"33\":1}}],[\"但是时间不太够了\",{\"1\":{\"123\":1}}],[\"但是意见不是很统一\",{\"1\":{\"123\":1}}],[\"但是感觉这场打的很难受\",{\"1\":{\"122\":1}}],[\"但是我叕写了很长时间\",{\"1\":{\"131\":1}}],[\"但是我忘了怎么做了\",{\"1\":{\"130\":1}}],[\"但是我觉得对于新入行的程序员\",{\"1\":{\"104\":1}}],[\"但是我们看一下数据范围\",{\"1\":{\"101\":1}}],[\"但是它很靠前\",{\"1\":{\"102\":1}}],[\"但是也不能排除以后的元素都比它还要小\",{\"1\":{\"102\":1}}],[\"但是如果想要加入这个队列就只能从队头或者队尾进入\",{\"1\":{\"96\":1}}],[\"但是那一场比赛我真的学到了很多实用的东西\",{\"1\":{\"90\":1}}],[\"但是为了规范和安全还是建议在访问对象成员变量时加上this\",{\"1\":{\"89\":1}}],[\"但是\",{\"1\":{\"33\":1,\"90\":1}}],[\"但是都是php真的看不懂啊\",{\"1\":{\"1\":1}}],[\"但是没有什么特别开心的\",{\"1\":{\"1\":1}}],[\"但是可能自己真的有赛博仓鼠的囤积癖\",{\"1\":{\"1\":1}}],[\"被封寝之后的物资短缺几乎让我退化到了只要keep\",{\"1\":{\"33\":1}}],[\"每次将未排序中的一个元素插入到已排序的元素中正确的位置\",{\"1\":{\"113\":1}}],[\"每次检查相邻两个元素\",{\"1\":{\"112\":1}}],[\"每次遍历数组找出第i小的数然后与第i位交换位置\",{\"1\":{\"111\":1}}],[\"每次方框向前移动一格\",{\"1\":{\"101\":1}}],[\"每次滑动窗口向右移动一个位置\",{\"1\":{\"97\":1}}],[\"每次从里面拿东西也只能从最上面拿\",{\"1\":{\"91\":1}}],[\"每次往里放东西都会摞在最上面\",{\"1\":{\"91\":1}}],[\"每次操作加入随机两个方块\",{\"1\":{\"57\":1,\"71\":1}}],[\"每天固定的捅一次喉咙+捅两次鼻子\",{\"1\":{\"33\":1}}],[\"每个位置滑动窗口中的最大值\",{\"1\":{\"99\":1}}],[\"每个位置滑动窗口中的最小值\",{\"1\":{\"99\":1}}],[\"每个\",{\"1\":{\"30\":1}}],[\"封寝几天之后逐渐就开始崩坏了\",{\"1\":{\"33\":1}}],[\"封寝十天小记\",{\"0\":{\"33\":1}}],[\"写之前千万别看评论区\",{\"1\":{\"138\":1}}],[\"写出来并不能改变什么\",{\"1\":{\"33\":1}}],[\"写写文章\",{\"1\":{\"33\":1}}],[\"写作日期为\",{\"1\":{\"28\":1}}],[\"还想买把椅子\",{\"1\":{\"141\":1}}],[\"还真看不出来这是组合数\",{\"1\":{\"133\":1}}],[\"还加了dp的buff\",{\"1\":{\"123\":1}}],[\"还参加了一个蓝桥云课的小比赛\",{\"1\":{\"90\":1}}],[\"还能取到一个我们设定的默认\",{\"1\":{\"39\":1}}],[\"还有大模拟\",{\"1\":{\"129\":1}}],[\"还有河南省赛\",{\"1\":{\"33\":1}}],[\"还有给新生出的题现在还有几道没出\",{\"1\":{\"33\":1}}],[\"还可以偶尔看看书\",{\"1\":{\"33\":1}}],[\"还不会编写\",{\"1\":{\"11\":1}}],[\"就扫描一遍方框\",{\"1\":{\"101\":1}}],[\"就像打poker整理手牌一样\",{\"1\":{\"113\":1}}],[\"就像排队一样从高到低排\",{\"1\":{\"96\":1}}],[\"就像大多数面向对象的编程语言一样\",{\"1\":{\"89\":1}}],[\"就返回\",{\"1\":{\"48\":2}}],[\"就会对棋盘进行相应移动操作\",{\"1\":{\"47\":1}}],[\"就会一直处于游戏状态\",{\"1\":{\"39\":1}}],[\"就是指纹解锁变慢了\",{\"1\":{\"142\":1}}],[\"就是类似下面这样一个队列\",{\"1\":{\"96\":1}}],[\"就是构建一个队列\",{\"1\":{\"96\":1}}],[\"就是很不爽\",{\"1\":{\"33\":1}}],[\"就是在保证正常学习的进度下再把java的springboot框架给学了\",{\"1\":{\"33\":1}}],[\"就该抛弃所有杂念\",{\"1\":{\"1\":1}}],[\"窝在寝室里默默的学习和努力还是挺好的\",{\"1\":{\"33\":1}}],[\"因为临近ccpc省赛\",{\"1\":{\"129\":1}}],[\"因为此时数列已经完全有序\",{\"1\":{\"115\":1}}],[\"因为我们使用单调队列算法的时间复杂度只有\",{\"1\":{\"101\":1}}],[\"因为我其实很喜欢安静的地方\",{\"1\":{\"33\":1}}],[\"因为都是我不擅长的领域\",{\"1\":{\"90\":1}}],[\"因此为了保持队列的单调性\",{\"1\":{\"102\":1}}],[\"因此可以借助于\",{\"1\":{\"13\":1}}],[\"因此\",{\"1\":{\"10\":1,\"43\":1}}],[\"看漏了是真的害人\",{\"1\":{\"123\":1}}],[\"看到某网站上有一门实战课\",{\"1\":{\"34\":1}}],[\"看着平常里熙熙攘攘的校园还有宿舍的走廊里变得如此宁静\",{\"1\":{\"33\":1}}],[\"看起来也没什么了不起嘛\",{\"1\":{\"1\":1}}],[\"走廊\",{\"1\":{\"33\":1}}],[\"能进脑子的知识估计能有十分之一都不错了\",{\"1\":{\"33\":1}}],[\"晚上吃什么\",{\"1\":{\"33\":1}}],[\"这道题也很简单\",{\"1\":{\"143\":1}}],[\"这道题很简单\",{\"1\":{\"142\":1}}],[\"这道题挺简单的\",{\"1\":{\"140\":1}}],[\"这道题真的严重浪费了很多很多的时间\",{\"1\":{\"123\":1}}],[\"这题有亿点简单\",{\"1\":{\"138\":1}}],[\"这题tm卡cin\",{\"1\":{\"123\":1}}],[\"这次写的还是很顺利的\",{\"1\":{\"125\":1}}],[\"这次比赛打的真是艰难\",{\"1\":{\"122\":1}}],[\"这就很亏了\",{\"1\":{\"123\":1}}],[\"这就不一样了\",{\"1\":{\"102\":1}}],[\"这样没人负责一个模块\",{\"1\":{\"104\":1}}],[\"这样的算法时间复杂度大概是\",{\"1\":{\"101\":1}}],[\"这样一来\",{\"1\":{\"39\":1}}],[\"这是队列的特性\",{\"1\":{\"96\":1}}],[\"这是第一次写算法笔记\",{\"1\":{\"94\":1}}],[\"这是一个博客主页的案例\",{\"1\":{\"0\":1}}],[\"这几天除了要准备ccpc\",{\"1\":{\"90\":1}}],[\"这部分代码的关键在于\",{\"1\":{\"50\":1}}],[\"这两个判断都通过后\",{\"1\":{\"47\":1}}],[\"这两种行为时分别对应\",{\"1\":{\"39\":1}}],[\"这一题好像是关于千年虫病毒的吧\",{\"1\":{\"139\":1}}],[\"这一端被称为栈顶\",{\"1\":{\"91\":1}}],[\"这一步是在棋盘类内定义的\",{\"1\":{\"50\":1}}],[\"这一操作是在\",{\"1\":{\"45\":1}}],[\"这一来疫情耽误了\",{\"1\":{\"33\":1}}],[\"这里推荐一下我在别人博客见到的一句话\",{\"1\":{\"96\":1}}],[\"这里使用数组实现模拟栈\",{\"1\":{\"92\":1}}],[\"这里是有一个格子达到2048就算获胜\",{\"1\":{\"80\":1}}],[\"这里我们先记住\",{\"1\":{\"50\":1}}],[\"这里只用进行判断\",{\"1\":{\"49\":1}}],[\"这里只是将矩阵的每一行倒序\",{\"1\":{\"46\":1}}],[\"这里的主要内容在实验的开始就分析过了\",{\"1\":{\"51\":1}}],[\"这里的\",{\"1\":{\"48\":1}}],[\"这里的难点在于理解矩阵转置和逆转后和原矩阵的关系\",{\"1\":{\"47\":1}}],[\"这里省略\",{\"1\":{\"47\":1}}],[\"这里需要在棋盘中随机找到一个空白的位置\",{\"1\":{\"43\":1}}],[\"这里同样会获取用户输入得到\",{\"1\":{\"39\":1}}],[\"这里\",{\"1\":{\"39\":1}}],[\"这里要考虑到大写键开启的情况\",{\"1\":{\"38\":1}}],[\"这六种行为\",{\"1\":{\"38\":1}}],[\"这个题数据量很小\",{\"1\":{\"141\":1}}],[\"这个传进去的函数必须满足第一个参数为主窗体\",{\"1\":{\"51\":1}}],[\"这个特殊字典里\",{\"1\":{\"39\":1}}],[\"这个词典变量作为状态转换的规则\",{\"1\":{\"39\":1}}],[\"这个curses后面真的折磨了我好久\",{\"1\":{\"36\":1}}],[\"这个图里能看到的肉几乎就是全部了\",{\"1\":{\"33\":1}}],[\"这也是我这几天这几十天咕咕咕连个破文章都没更新的原因\",{\"1\":{\"33\":1}}],[\"这意味着你可以在\",{\"1\":{\"30\":1}}],[\"pdd有的时候真的挺便宜的\",{\"1\":{\"143\":1}}],[\"pilots\",{\"0\":{\"134\":1}}],[\"p=\",{\"1\":{\"102\":4}}],[\"p用来存储队列中元素在原数组中的序号\",{\"1\":{\"102\":1}}],[\"p\",{\"1\":{\"102\":9}}],[\"posts\",{\"0\":{\"146\":1}}],[\"possible\",{\"1\":{\"47\":2,\"48\":1,\"49\":2}}],[\"power\",{\"0\":{\"138\":1}}],[\"pop\",{\"1\":{\"92\":1,\"93\":1}}],[\"putchar\",{\"1\":{\"102\":1}}],[\"push\",{\"1\":{\"92\":1,\"93\":1}}],[\"public\",{\"1\":{\"29\":1,\"92\":1,\"93\":7}}],[\"printf\",{\"1\":{\"102\":1}}],[\"private\",{\"1\":{\"92\":2,\"93\":2}}],[\"property\",{\"1\":{\"78\":1,\"80\":1,\"81\":1}}],[\"ps\",{\"1\":{\"36\":1}}],[\"py\",{\"1\":{\"36\":1}}],[\"python\",{\"1\":{\"35\":1,\"46\":1,\"48\":1}}],[\"python实现2048\",{\"0\":{\"34\":1}}],[\"png\",{\"1\":{\"33\":1}}],[\"parencodings\",{\"0\":{\"141\":1}}],[\"partition\",{\"1\":{\"115\":1}}],[\"partial\",{\"1\":{\"19\":1}}],[\"partial^r\",{\"1\":{\"19\":1}}],[\"pair\",{\"1\":{\"45\":4,\"62\":4,\"71\":4}}],[\"page\",{\"1\":{\"27\":1}}],[\"图片引入\",{\"1\":{\"29\":1}}],[\"图片增强\",{\"0\":{\"21\":1}}],[\"标签为\",{\"1\":{\"28\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"27\":1}}],[\"标题和页面信息\",{\"1\":{\"7\":1}}],[\"日\",{\"1\":{\"28\":1}}],[\"月\",{\"1\":{\"28\":1}}],[\"年\",{\"1\":{\"28\":1}}],[\"的过程还是划分的过程\",{\"1\":{\"115\":1}}],[\"的滑动窗口\",{\"1\":{\"97\":1}}],[\"的数组\",{\"1\":{\"97\":1}}],[\"的作用是清空屏幕\",{\"1\":{\"50\":1}}],[\"的作用是绘制字符\",{\"1\":{\"50\":1}}],[\"的大小\",{\"1\":{\"48\":1}}],[\"的二维矩阵\",{\"1\":{\"46\":1}}],[\"的输出结果为\",{\"1\":{\"38\":1}}],[\"的默认值\",{\"1\":{\"36\":1}}],[\"的\",{\"1\":{\"27\":1,\"28\":1,\"47\":1,\"51\":2}}],[\"brothers\",{\"0\":{\"134\":1}}],[\"balance\",{\"0\":{\"129\":1}}],[\"bug\",{\"0\":{\"139\":1}}],[\"bug也好找\",{\"1\":{\"104\":1}}],[\"bubble\",{\"1\":{\"112\":2}}],[\"buffering\",{\"1\":{\"51\":1}}],[\"boolean\",{\"1\":{\"93\":1}}],[\"bool\",{\"1\":{\"48\":3,\"112\":1}}],[\"best\",{\"1\":{\"75\":1}}],[\"be\",{\"1\":{\"27\":1}}],[\"bloghome\",{\"1\":{\"0\":1}}],[\"found\",{\"1\":{\"144\":1}}],[\"format\",{\"1\":{\"50\":1,\"74\":1,\"75\":1}}],[\"for\",{\"1\":{\"38\":1,\"43\":2,\"44\":2,\"45\":3,\"46\":2,\"47\":1,\"48\":3,\"49\":2,\"50\":2,\"54\":1,\"56\":2,\"57\":2,\"58\":1,\"59\":1,\"61\":2,\"62\":1,\"63\":1,\"67\":1,\"68\":1,\"71\":12,\"74\":1,\"75\":3,\"81\":1,\"102\":5,\"111\":2,\"112\":1,\"113\":1}}],[\"flip\",{\"0\":{\"125\":1}}],[\"flag\",{\"1\":{\"112\":4}}],[\"false\",{\"1\":{\"45\":2,\"47\":1,\"48\":1,\"49\":2,\"62\":2,\"67\":1,\"71\":3,\"77\":2,\"79\":1,\"93\":1,\"112\":1}}],[\"field\",{\"1\":{\"43\":2,\"44\":1,\"46\":4,\"47\":10,\"48\":1,\"49\":9,\"50\":1,\"51\":8}}],[\"first\",{\"1\":{\"27\":1}}],[\"fsm\",{\"1\":{\"39\":1}}],[\"from\",{\"1\":{\"36\":2}}],[\"frontmatter\",{\"1\":{\"4\":1,\"7\":1,\"12\":4,\"27\":1,\"28\":1}}],[\"frac\",{\"1\":{\"19\":4}}],[\"min\",{\"1\":{\"111\":4}}],[\"minn\",{\"1\":{\"102\":2}}],[\"machine\",{\"0\":{\"130\":1}}],[\"maxn\",{\"1\":{\"102\":4}}],[\"max\",{\"1\":{\"80\":1}}],[\"main\",{\"1\":{\"51\":5,\"102\":1}}],[\"markdown\",{\"0\":{\"10\":1,\"11\":1,\"12\":1,\"13\":1},\"1\":{\"10\":2,\"11\":3,\"12\":1,\"13\":3,\"14\":2,\"15\":1,\"27\":3,\"28\":1,\"29\":2,\"30\":2},\"2\":{\"25\":1}}],[\"merge\",{\"0\":{\"62\":1},\"1\":{\"45\":2,\"62\":2,\"71\":2}}],[\"motion\",{\"0\":{\"143\":1}}],[\"movable\",{\"1\":{\"49\":2}}],[\"moves\",{\"1\":{\"47\":12}}],[\"move\",{\"0\":{\"60\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"79\":1,\"82\":1},\"1\":{\"45\":2,\"47\":6,\"48\":3,\"49\":2,\"51\":2,\"63\":2,\"64\":2,\"65\":2,\"66\":2,\"67\":1,\"68\":2,\"69\":2,\"70\":2,\"71\":20,\"79\":3,\"81\":3,\"82\":2,\"84\":1}}],[\"more\",{\"1\":{\"26\":1}}],[\"mmexport1665747871951\",{\"1\":{\"33\":1}}],[\"ms\",{\"1\":{\"28\":1}}],[\"组件\",{\"0\":{\"23\":1,\"30\":1},\"1\":{\"30\":1}}],[\"上划返回桌面也不灵了\",{\"1\":{\"142\":1}}],[\"上述是求最大值大代码\",{\"1\":{\"102\":1}}],[\"上次我因为无聊参加了它的那个python比赛\",{\"1\":{\"90\":1}}],[\"上\",{\"1\":{\"38\":2}}],[\"上面那个包菜还巨难吃\",{\"1\":{\"33\":1}}],[\"上下角标\",{\"0\":{\"22\":1}}],[\"上一篇\",{\"1\":{\"4\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"21\":1}}],[\"crashing\",{\"0\":{\"142\":1}}],[\"cryptography\",{\"0\":{\"138\":1}}],[\"cr11u\",{\"1\":{\"33\":1}}],[\"currency\",{\"0\":{\"127\":1}}],[\"curses\",{\"1\":{\"35\":1,\"36\":2,\"50\":1,\"51\":7,\"88\":1}}],[\"c++\",{\"1\":{\"111\":1,\"112\":1,\"113\":1}}],[\"c++中的this\",{\"0\":{\"89\":1}}],[\"cin\",{\"1\":{\"102\":2}}],[\"cells\",{\"1\":{\"56\":1,\"57\":4,\"58\":2,\"59\":2,\"63\":2,\"68\":1,\"71\":13,\"75\":2,\"80\":1}}],[\"clear\",{\"1\":{\"50\":2,\"51\":2,\"75\":2}}],[\"class\",{\"1\":{\"41\":1,\"54\":1,\"71\":1,\"75\":1,\"92\":1,\"93\":1}}],[\"cash\",{\"0\":{\"130\":1}}],[\"cast\",{\"0\":{\"73\":1},\"1\":{\"50\":10,\"73\":1,\"74\":1,\"75\":16}}],[\"call\",{\"0\":{\"88\":1},\"1\":{\"88\":1}}],[\"callable\",{\"1\":{\"39\":1}}],[\"can\",{\"0\":{\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"82\":1},\"1\":{\"67\":1,\"68\":2,\"69\":4,\"70\":4,\"71\":19,\"79\":1,\"81\":1,\"82\":2}}],[\"camera\",{\"1\":{\"33\":3}}],[\"check\",{\"1\":{\"49\":11}}],[\"chain\",{\"1\":{\"80\":1}}],[\"change\",{\"1\":{\"49\":2,\"67\":2,\"71\":2}}],[\"char\",{\"1\":{\"40\":4,\"54\":4}}],[\"ch\",{\"1\":{\"38\":2,\"54\":2}}],[\"choice\",{\"1\":{\"36\":1,\"43\":4,\"57\":1,\"71\":1}}],[\"cow\",{\"0\":{\"131\":1}}],[\"com\",{\"1\":{\"102\":1}}],[\"cout\",{\"1\":{\"102\":4}}],[\"counter\",{\"1\":{\"75\":1}}],[\"code\",{\"0\":{\"133\":1},\"1\":{\"102\":1}}],[\"codes\",{\"1\":{\"38\":2,\"54\":2}}],[\"copyof\",{\"1\":{\"93\":1}}],[\"colors\",{\"1\":{\"51\":1,\"88\":1}}],[\"collections\",{\"1\":{\"35\":1,\"36\":2}}],[\"cdots\",{\"1\":{\"19\":1}}],[\"ccpc和icpc的网络选拔赛\",{\"1\":{\"33\":1}}],[\"ccpc网络赛结束\",{\"1\":{\"1\":1}}],[\"ccpc河南省赛结束\",{\"1\":{\"1\":1}}],[\"robot\",{\"0\":{\"143\":1}}],[\"robots\",{\"0\":{\"142\":1}}],[\"row\",{\"0\":{\"60\":1,\"67\":1,\"74\":1},\"1\":{\"45\":25,\"46\":4,\"47\":3,\"48\":2,\"49\":11,\"50\":6,\"58\":2,\"59\":2,\"61\":7,\"62\":16,\"63\":3,\"67\":8,\"68\":3,\"71\":43,\"74\":3,\"75\":9}}],[\"radar\",{\"0\":{\"136\":1}}],[\"range\",{\"1\":{\"43\":2,\"44\":2,\"45\":2,\"49\":1,\"56\":2,\"57\":2,\"61\":1,\"62\":1,\"67\":1,\"71\":7}}],[\"randrange\",{\"1\":{\"36\":1,\"43\":3,\"57\":1,\"71\":1}}],[\"random\",{\"0\":{\"57\":1},\"1\":{\"35\":1,\"36\":2,\"43\":1,\"56\":2,\"57\":3,\"71\":5,\"79\":1}}],[\"refrigerator\",{\"0\":{\"134\":1}}],[\"reinvent\",{\"1\":{\"104\":1}}],[\"reset\",{\"0\":{\"56\":1,\"77\":1},\"1\":{\"41\":1,\"44\":2,\"51\":1,\"56\":1,\"71\":2,\"77\":2,\"83\":1}}],[\"responses\",{\"1\":{\"39\":7,\"51\":4}}],[\"restart\",{\"0\":{\"85\":1},\"1\":{\"38\":3,\"39\":7,\"50\":1,\"51\":3,\"54\":3,\"72\":1,\"75\":1,\"84\":1,\"85\":2,\"86\":1,\"87\":1}}],[\"return\",{\"1\":{\"39\":7,\"40\":1,\"45\":3,\"46\":2,\"47\":2,\"48\":2,\"49\":6,\"51\":7,\"54\":1,\"61\":1,\"62\":2,\"67\":4,\"68\":1,\"69\":1,\"70\":1,\"71\":12,\"78\":1,\"79\":2,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":5,\"85\":1,\"86\":1,\"87\":1,\"93\":7,\"102\":1}}],[\"regarded\",{\"1\":{\"27\":1}}],[\"r\",{\"1\":{\"19\":3,\"38\":1,\"39\":1,\"50\":1,\"72\":1,\"75\":1}}],[\"right\",{\"0\":{\"64\":1,\"69\":1},\"1\":{\"19\":3,\"38\":3,\"39\":2,\"47\":3,\"49\":2,\"50\":1,\"54\":3,\"64\":1,\"66\":1,\"69\":1,\"71\":5,\"72\":1,\"75\":1}}],[\"^以上是百度百科的解释\",{\"1\":{\"91\":1}}],[\"^5\",{\"1\":{\"50\":1,\"74\":1,\"75\":1}}],[\"^\",{\"1\":{\"19\":1}}],[\"^i\",{\"1\":{\"19\":1}}],[\"^r\",{\"1\":{\"19\":2}}],[\"++i\",{\"1\":{\"113\":1}}],[\"++tail\",{\"1\":{\"102\":3}}],[\"+=\",{\"1\":{\"45\":2,\"61\":1,\"62\":1,\"71\":2}}],[\"+\",{\"1\":{\"19\":1,\"30\":1,\"45\":2,\"49\":2,\"50\":9,\"62\":2,\"67\":2,\"71\":4,\"73\":1,\"74\":1,\"75\":16,\"79\":1,\"82\":1,\"88\":1,\"111\":1,\"112\":2,\"113\":2}}],[\"y2k\",{\"0\":{\"139\":1}}],[\"yyds\",{\"1\":{\"105\":1}}],[\"you\",{\"1\":{\"50\":1,\"72\":1,\"75\":1}}],[\"y\",{\"1\":{\"19\":2}}],[\"y^\",{\"1\":{\"19\":2}}],[\"=i\",{\"1\":{\"102\":3}}],[\"=a\",{\"1\":{\"102\":3}}],[\"==\",{\"1\":{\"39\":2,\"43\":1,\"45\":2,\"49\":2,\"51\":2,\"57\":1,\"62\":2,\"67\":2,\"71\":5,\"84\":2,\"85\":1,\"93\":4}}],[\"=\",{\"1\":{\"19\":1,\"38\":3,\"39\":3,\"40\":2,\"41\":5,\"43\":3,\"44\":3,\"45\":6,\"47\":6,\"49\":7,\"50\":6,\"51\":9,\"54\":12,\"56\":1,\"57\":3,\"58\":1,\"59\":1,\"61\":2,\"62\":4,\"63\":1,\"67\":2,\"69\":1,\"70\":1,\"71\":21,\"72\":4,\"75\":10,\"77\":5,\"80\":1,\"81\":1,\"84\":1,\"88\":4,\"93\":6,\"111\":4,\"112\":4,\"113\":5}}],[\"line\",{\"1\":{\"50\":2,\"51\":1}}],[\"list\",{\"1\":{\"43\":1,\"46\":1,\"58\":1,\"71\":1}}],[\"live就好了\",{\"1\":{\"33\":1}}],[\"lambda\",{\"1\":{\"39\":3,\"47\":4,\"49\":4,\"51\":3}}],[\"layout\",{\"1\":{\"0\":1}}],[\"lexicon\",{\"0\":{\"131\":1}}],[\"len\",{\"1\":{\"45\":6,\"49\":1,\"61\":2,\"62\":4,\"67\":1,\"71\":7}}],[\"letter\",{\"1\":{\"38\":2,\"54\":2}}],[\"left\",{\"0\":{\"60\":1,\"63\":1,\"67\":1,\"68\":1},\"1\":{\"19\":3,\"38\":3,\"39\":2,\"45\":1,\"47\":5,\"49\":5,\"50\":1,\"54\":3,\"63\":2,\"64\":1,\"65\":1,\"67\":1,\"68\":2,\"69\":1,\"70\":1,\"71\":10,\"72\":1,\"75\":1}}],[\"log\",{\"1\":{\"19\":2}}],[\"导入需要的包\",{\"1\":{\"36\":1}}],[\"导入文件\",{\"0\":{\"18\":1}}],[\"导航栏\",{\"1\":{\"4\":1,\"7\":1}}],[\"脚注\",{\"0\":{\"17\":1}}],[\"语法\",{\"0\":{\"19\":1},\"1\":{\"15\":1,\"30\":1}}],[\"语法进行了扩展\",{\"1\":{\"14\":1}}],[\"语法扩展\",{\"1\":{\"13\":1}}],[\"对程序进行封装和打包\",{\"1\":{\"104\":1}}],[\"对数组中每个元素进行处理\",{\"1\":{\"102\":1}}],[\"对应四种棋盘操作\",{\"1\":{\"47\":1}}],[\"对应不同的方法函数\",{\"1\":{\"47\":1}}],[\"对应的都是默认的\",{\"1\":{\"39\":1}}],[\"对邻近元素进行合并\",{\"1\":{\"45\":1}}],[\"对学习根本打不起兴趣\",{\"1\":{\"33\":1}}],[\"对于像我们棋盘一样\",{\"1\":{\"46\":1}}],[\"对于算法的学习也搁置了\",{\"1\":{\"33\":1}}],[\"对于\",{\"1\":{\"29\":1}}],[\"对\",{\"1\":{\"14\":1,\"113\":1}}],[\"i>=k\",{\"1\":{\"102\":3}}],[\"i++\",{\"1\":{\"102\":5,\"111\":1,\"112\":1}}],[\"i+1\",{\"1\":{\"19\":1}}],[\"i<=n\",{\"1\":{\"102\":5}}],[\"isempty\",{\"1\":{\"92\":1,\"93\":1}}],[\"is\",{\"0\":{\"80\":1,\"81\":1},\"1\":{\"47\":2,\"48\":5,\"49\":4,\"50\":2,\"51\":2,\"80\":1,\"81\":1,\"84\":2}}],[\"if\",{\"1\":{\"39\":5,\"43\":2,\"44\":1,\"45\":3,\"47\":2,\"49\":3,\"50\":4,\"51\":5,\"57\":2,\"61\":1,\"62\":2,\"67\":2,\"71\":7,\"74\":1,\"75\":5,\"79\":1,\"84\":5,\"85\":1,\"93\":4,\"102\":3,\"111\":1,\"112\":1}}],[\"import\",{\"1\":{\"36\":3,\"92\":1,\"93\":1}}],[\"img\",{\"1\":{\"33\":2,\"96\":1}}],[\"icpc亚洲区域赛的名额真的是太宝贵了\",{\"1\":{\"33\":1}}],[\"icpc网络赛content1结束了\",{\"1\":{\"1\":1}}],[\"icpc网络赛content2结束了\",{\"1\":{\"1\":1}}],[\"installation\",{\"0\":{\"136\":1}}],[\"insertion\",{\"1\":{\"113\":2}}],[\"inline\",{\"1\":{\"102\":2}}],[\"include<bits\",{\"1\":{\"102\":1}}],[\"int\",{\"1\":{\"92\":1,\"93\":2,\"102\":11,\"111\":5,\"112\":3,\"113\":5}}],[\"invert\",{\"0\":{\"59\":1},\"1\":{\"46\":1,\"47\":2,\"49\":1,\"59\":1,\"64\":2,\"69\":2,\"71\":5}}],[\"init函数用来初始化我们的游戏棋盘\",{\"1\":{\"39\":1}}],[\"init\",{\"0\":{\"83\":1},\"1\":{\"39\":8,\"41\":1,\"51\":6,\"54\":1,\"71\":1,\"75\":1,\"77\":1,\"83\":1,\"84\":1,\"85\":1}}],[\"in\",{\"1\":{\"27\":1,\"38\":1,\"40\":1,\"43\":2,\"44\":2,\"45\":3,\"46\":2,\"47\":2,\"48\":3,\"49\":3,\"50\":2,\"54\":2,\"56\":2,\"57\":2,\"58\":1,\"59\":1,\"61\":2,\"62\":1,\"63\":1,\"67\":1,\"68\":1,\"71\":12,\"74\":1,\"75\":3,\"81\":1}}],[\"i\",{\"1\":{\"19\":1,\"30\":1,\"43\":7,\"44\":1,\"45\":11,\"48\":2,\"49\":8,\"56\":1,\"57\":5,\"61\":4,\"62\":7,\"67\":8,\"71\":25,\"102\":11,\"111\":5,\"112\":6,\"113\":4}}],[\"i=1\",{\"1\":{\"19\":1,\"102\":5}}],[\"item\",{\"0\":{\"57\":1},\"1\":{\"56\":2,\"57\":1,\"71\":3,\"79\":1}}],[\"iterable\",{\"1\":{\"48\":1}}],[\"it\",{\"1\":{\"13\":2}}],[\"会使用\",{\"1\":{\"13\":1}}],[\"扩展\",{\"0\":{\"13\":1,\"14\":1},\"1\":{\"14\":1}}],[\"了解详情\",{\"1\":{\"12\":1}}],[\"请使用绝对链接\",{\"1\":{\"29\":1}}],[\"请阅读\",{\"1\":{\"12\":1,\"14\":1}}],[\"请先阅读\",{\"1\":{\"11\":1}}],[\"中传入\",{\"1\":{\"51\":1}}],[\"中存在的操作\",{\"1\":{\"49\":1}}],[\"中随机返回一个元素\",{\"1\":{\"43\":1}}],[\"中取一个随机数\",{\"1\":{\"43\":1}}],[\"中午吃什么\",{\"1\":{\"33\":1}}],[\"中使用\",{\"1\":{\"30\":1}}],[\"中设置页面信息\",{\"1\":{\"28\":1}}],[\"中设置页面标题\",{\"1\":{\"27\":1}}],[\"中的其他行为时\",{\"1\":{\"39\":1}}],[\"中的第一个\",{\"1\":{\"27\":1}}],[\"中的\",{\"1\":{\"14\":1}}],[\"中很重要的一个概念\",{\"1\":{\"12\":1}}],[\"中自定义它们\",{\"1\":{\"7\":1}}],[\"是一种被广泛运用的排序算法\",{\"1\":{\"115\":1}}],[\"是一种简单直观的排序算法\",{\"1\":{\"111\":1,\"112\":1,\"113\":1}}],[\"是一个先进后出的数据结构\",{\"1\":{\"91\":1}}],[\"是c++中的一个关键字\",{\"1\":{\"89\":1}}],[\"是返回下一个状态的函数\",{\"1\":{\"39\":1}}],[\"是状态\",{\"1\":{\"39\":1}}],[\"是\",{\"1\":{\"12\":1,\"49\":1}}],[\"为了保证平均时间复杂度\",{\"1\":{\"115\":1}}],[\"为了丰富文档写作\",{\"1\":{\"14\":1}}],[\"为元素的列表\",{\"1\":{\"43\":1}}],[\"为\",{\"1\":{\"39\":4,\"97\":1}}],[\"为每个\",{\"1\":{\"12\":1}}],[\"为什么呢\",{\"1\":{\"1\":1}}],[\"通过它可以访问当前对象的所有成员\",{\"1\":{\"89\":1}}],[\"通过对矩阵进行转置与逆转\",{\"1\":{\"47\":1}}],[\"通过\",{\"1\":{\"12\":1,\"15\":1}}],[\"配置\",{\"0\":{\"12\":1}}],[\"配置演示\",{\"0\":{\"2\":1}}],[\"演示\",{\"1\":{\"11\":1}}],[\"介绍\",{\"0\":{\"11\":1},\"1\":{\"11\":1,\"12\":1}}],[\"可是我们需要知道象征着棋盘的这个二维数组的\",{\"1\":{\"43\":1}}],[\"可以见识一下这道题\",{\"1\":{\"140\":1}}],[\"可以看到我们给\",{\"1\":{\"51\":1}}],[\"可以向左合并\",{\"1\":{\"49\":1}}],[\"可以向左移动\",{\"1\":{\"49\":1}}],[\"可以在纸上画出变化前后的矩阵对比\",{\"1\":{\"47\":1}}],[\"可以直接从左移得到其余三个方向的移动操作\",{\"1\":{\"47\":1}}],[\"可以合并时\",{\"1\":{\"45\":1}}],[\"可以指定棋盘的高和宽以及游戏胜利条件\",{\"1\":{\"41\":1}}],[\"可以指定\",{\"1\":{\"36\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"10\":1}}],[\"可能自己的表达能力有限\",{\"1\":{\"94\":1}}],[\"可能是2\",{\"1\":{\"57\":1,\"71\":1}}],[\"可能是认为自己的学校的教育资源不如网上的吧\",{\"1\":{\"33\":1}}],[\"可能为2或4\",{\"1\":{\"57\":1}}],[\"可能以前真的很羡慕那些有自己博客的人\",{\"1\":{\"1\":1}}],[\"以此类推\",{\"1\":{\"102\":1}}],[\"以下是一个例子\",{\"1\":{\"97\":1}}],[\"以及分数\",{\"1\":{\"72\":1}}],[\"以外的键位都不能对游戏界面造成影响\",{\"1\":{\"39\":1}}],[\"以至于是几乎不能吃的感觉\",{\"1\":{\"33\":1}}],[\"以便\",{\"1\":{\"10\":1}}],[\"以后坚持每周模拟战吧\",{\"1\":{\"1\":1}}],[\"文件夹的图片\",{\"1\":{\"29\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"29\":1}}],[\"文件生成页面\",{\"1\":{\"10\":1}}],[\"文章标题列表\",{\"1\":{\"7\":1}}],[\"展示游戏结束界面\",{\"1\":{\"39\":1}}],[\"展示\",{\"0\":{\"10\":1}}],[\"夜间模式按钮\",{\"1\":{\"7\":1}}],[\"主要是每个人好像都会但是每个人思路又不太一样\",{\"1\":{\"123\":1}}],[\"主要从\",{\"1\":{\"10\":1}}],[\"主办方在到时间之后十五分钟都没有把我们的登录申请通过\",{\"1\":{\"122\":1}}],[\"主逻辑\",{\"0\":{\"37\":1}}],[\"主题扩展了更多\",{\"1\":{\"15\":1}}],[\"主题扩展\",{\"0\":{\"15\":1}}],[\"主题也带有以下元素\",{\"1\":{\"7\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\"tautology\",{\"0\":{\"140\":1}}],[\"tail=0\",{\"1\":{\"102\":4}}],[\"tail\",{\"1\":{\"102\":12}}],[\"t\",{\"1\":{\"93\":5}}],[\"to\",{\"1\":{\"104\":1}}],[\"top\",{\"1\":{\"92\":1,\"93\":1}}],[\"toc\",{\"1\":{\"7\":1}}],[\"this省略也没有影响\",{\"1\":{\"89\":1}}],[\"this是为了方便访问对象的成员变量而设置的\",{\"1\":{\"89\":1}}],[\"this\",{\"1\":{\"89\":1,\"93\":20}}],[\"the\",{\"0\":{\"131\":1,\"134\":1},\"1\":{\"27\":1,\"104\":1}}],[\"trying\",{\"1\":{\"104\":1}}],[\"transpose\",{\"0\":{\"58\":1},\"1\":{\"46\":1,\"47\":4,\"49\":2,\"58\":1,\"65\":2,\"66\":2,\"70\":2,\"71\":11}}],[\"true\",{\"1\":{\"0\":1,\"45\":1,\"47\":1,\"48\":3,\"49\":2,\"62\":1,\"67\":2,\"71\":3,\"79\":1,\"93\":1,\"112\":2}}],[\"tighten\",{\"0\":{\"61\":1},\"1\":{\"45\":3,\"61\":1,\"62\":2,\"71\":3}}],[\"title\",{\"1\":{\"27\":3}}],[\"tuple\",{\"1\":{\"43\":1}}],[\"tex\",{\"0\":{\"19\":1}}],[\"布局包括\",{\"1\":{\"7\":1}}],[\"布局\",{\"0\":{\"7\":1},\"2\":{\"9\":1}}],[\"布局与功能禁用\",{\"0\":{\"4\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"30\":1}}],[\"页面内容\",{\"0\":{\"29\":1}}],[\"页面标题\",{\"0\":{\"27\":1},\"1\":{\"27\":1}}],[\"页面配置\",{\"0\":{\"26\":1},\"1\":{\"28\":1},\"2\":{\"32\":1}}],[\"页面引入配置\",{\"1\":{\"12\":1}}],[\"页面信息\",{\"0\":{\"28\":1},\"1\":{\"4\":1}}],[\"页脚\",{\"1\":{\"4\":1,\"7\":1}}],[\"评论\",{\"1\":{\"4\":1,\"7\":1}}],[\"链接\",{\"1\":{\"4\":1}}],[\"贡献者\",{\"1\":{\"4\":1,\"7\":1}}],[\"路径导航\",{\"1\":{\"4\":1,\"7\":1}}],[\"侧边栏\",{\"1\":{\"4\":1,\"7\":1}}],[\"在排序过的列表中r也将会是在s之前\",{\"1\":{\"107\":1}}],[\"在网上经常见到一句程序员对新入行的新人说的话\",{\"1\":{\"104\":1}}],[\"在这里也即\",{\"1\":{\"101\":1}}],[\"在这个模式下会禁止输入的字符显示在终端上\",{\"1\":{\"51\":1}}],[\"在大多数情况下\",{\"1\":{\"89\":1}}],[\"在前面的代码里\",{\"1\":{\"51\":1}}],[\"在下一部分主逻辑后面\",{\"1\":{\"50\":1}}],[\"在上面的代码中\",{\"1\":{\"43\":1}}],[\"在上面记录自己的点滴成长\",{\"1\":{\"1\":1}}],[\"在不重新开始或退出的情况下\",{\"1\":{\"39\":1}}],[\"在游戏结束界面\",{\"1\":{\"39\":1}}],[\"在\",{\"1\":{\"39\":3,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1}}],[\"在普通的字典里\",{\"1\":{\"39\":1}}],[\"在字典中新建两个键值对\",{\"1\":{\"39\":1}}],[\"在展示这两种结果的同时\",{\"1\":{\"39\":1}}],[\"在根目录下创建游戏文件\",{\"1\":{\"36\":1}}],[\"在刚封寝的那几天我其实内心还是有点欣喜的\",{\"1\":{\"33\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"4\":1}}],[\"你们队就从此少了一个人\",{\"1\":{\"123\":1}}],[\"你的任务是确定滑动窗口位于每个位置时\",{\"1\":{\"97\":1}}],[\"你只能在窗口中看到\",{\"1\":{\"97\":1}}],[\"你就可以退役了\",{\"1\":{\"96\":1}}],[\"你会发现\",{\"1\":{\"39\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"30\":1}}],[\"你需要创建并编写\",{\"1\":{\"10\":1}}],[\"你可以将图片和\",{\"1\":{\"29\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"29\":1}}],[\"你可以在\",{\"1\":{\"27\":1,\"28\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"7\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"10\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"4\":1}}],[\"你应该在页面前端设置\",{\"1\":{\"0\":1}}],[\"既然选择在xcpc这条路上走\",{\"1\":{\"1\":1}}],[\"5\",{\"1\":{\"1\":1,\"97\":9,\"100\":1,\"101\":2,\"102\":3}}],[\"呜呜呜~~~\",{\"1\":{\"133\":1}}],[\"呜呜呜~\",{\"1\":{\"1\":1}}],[\"89\",{\"1\":{\"43\":2}}],[\"81\",{\"1\":{\"38\":1}}],[\"82\",{\"1\":{\"38\":1}}],[\"83\",{\"1\":{\"38\":1}}],[\"87\",{\"1\":{\"38\":1}}],[\"8\",{\"1\":{\"1\":1,\"52\":1,\"100\":1}}],[\"🥳\",{\"1\":{\"1\":1}}],[\"https\",{\"1\":{\"102\":1}}],[\"h>\",{\"1\":{\"102\":1}}],[\"highscore\",{\"1\":{\"41\":1,\"44\":2,\"50\":3}}],[\"head++\",{\"1\":{\"102\":3}}],[\"head<=tail\",{\"1\":{\"102\":3}}],[\"head=1\",{\"1\":{\"102\":4}}],[\"head\",{\"1\":{\"102\":9}}],[\"help\",{\"1\":{\"50\":4,\"72\":2,\"75\":6}}],[\"height\",{\"1\":{\"41\":2,\"43\":1,\"44\":1}}],[\"height=4\",{\"1\":{\"41\":1}}],[\"hexo博客终于弄好啦\",{\"1\":{\"1\":1}}],[\"hor\",{\"1\":{\"50\":3}}],[\"hope\",{\"1\":{\"28\":1}}],[\"home\",{\"1\":{\"0\":1}}],[\"h1\",{\"1\":{\"27\":2}}],[\"h2o\",{\"1\":{\"22\":1}}],[\"相对地\",{\"1\":{\"91\":1}}],[\"相比上次真是飞跃的进步\",{\"1\":{\"1\":1}}],[\"相关配置文档请见\",{\"1\":{\"0\":1}}],[\"1和\",{\"1\":{\"102\":1}}],[\"1同理\",{\"1\":{\"102\":1}}],[\"1入队\",{\"1\":{\"102\":1}}],[\"1664527222954\",{\"1\":{\"33\":1}}],[\"1664680508938\",{\"1\":{\"33\":1}}],[\"1663385267713\",{\"1\":{\"33\":1}}],[\"162248\",{\"1\":{\"33\":1}}],[\"19th\",{\"1\":{\"22\":1}}],[\"1\",{\"1\":{\"19\":1,\"20\":1,\"28\":2,\"30\":2,\"39\":2,\"45\":2,\"46\":1,\"49\":3,\"50\":1,\"52\":1,\"59\":1,\"62\":2,\"67\":3,\"71\":6,\"93\":1,\"97\":15,\"100\":2,\"101\":1,\"102\":9,\"111\":2,\"112\":3,\"113\":4}}],[\"113\",{\"1\":{\"38\":1}}],[\"114\",{\"1\":{\"38\":1}}],[\"115\",{\"1\":{\"38\":1}}],[\"119\",{\"1\":{\"38\":1}}],[\"11\",{\"1\":{\"1\":1}}],[\"12\",{\"1\":{\"1\":2}}],[\"181748\",{\"1\":{\"33\":1}}],[\"18\",{\"1\":{\"1\":1}}],[\"1000001\",{\"1\":{\"102\":7}}],[\"100\",{\"1\":{\"38\":1,\"43\":2,\"57\":1,\"71\":1}}],[\"101842854\",{\"1\":{\"33\":1}}],[\"10\",{\"1\":{\"1\":1}}],[\"两场比赛依旧是一个名额都没抢到\",{\"1\":{\"1\":1}}],[\"90\",{\"1\":{\"57\":1,\"71\":1}}],[\"97\",{\"1\":{\"38\":1}}],[\"9\",{\"1\":{\"1\":4}}],[\"咱也拿了个第一个金牌\",{\"1\":{\"1\":1}}],[\"整个学校打的也争气的\",{\"1\":{\"1\":1}}],[\"2048\",{\"1\":{\"36\":1,\"39\":1,\"41\":2,\"51\":1}}],[\"2020\",{\"1\":{\"28\":1}}],[\"20221023\",{\"1\":{\"33\":1}}],[\"20221028\",{\"1\":{\"33\":1}}],[\"20221106\",{\"1\":{\"33\":1}}],[\"2022\",{\"1\":{\"1\":7}}],[\"22\",{\"1\":{\"1\":1}}],[\"25\",{\"1\":{\"1\":1}}],[\"2\",{\"0\":{\"43\":1},\"1\":{\"1\":1,\"20\":1,\"38\":1,\"39\":1,\"43\":3,\"45\":3,\"52\":1,\"57\":1,\"62\":2,\"71\":3,\"93\":4,\"102\":4,\"113\":2}}],[\"想想也是一件很幸福的事情\",{\"1\":{\"1\":1}}],[\"呵\",{\"1\":{\"1\":1}}],[\"关于这些扩展\",{\"1\":{\"14\":1}}],[\"关于\",{\"0\":{\"1\":1}}],[\"博客主页\",{\"1\":{\"0\":1}}],[\"和归并排序不同\",{\"1\":{\"115\":1}}],[\"和k\",{\"1\":{\"98\":1}}],[\"和逆矩阵的概念无关\",{\"1\":{\"46\":1}}],[\"和\",{\"1\":{\"0\":1,\"11\":1,\"28\":1,\"39\":3,\"43\":2,\"51\":2,\"102\":1,\"115\":2}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
